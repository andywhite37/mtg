// Generated by Haxe
(function (console, $global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
DateTools.__name__ = ["DateTools"];
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	if(year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
		return 29;
	} else {
		return 28;
	}
};
var doom_core_IRender = function() { };
doom_core_IRender.__name__ = ["doom","core","IRender"];
doom_core_IRender.prototype = {
	apply: null
	,__class__: doom_core_IRender
};
var doom_html_Render = function(doc,namespaces) {
	if(null == doc) {
		this.doc = window.document;
	} else {
		this.doc = doc;
	}
	if(null == namespaces) {
		this.namespaces = new haxe_ds_StringMap();
		var tmp = doom_html_Render.defaultNamespaces.keys();
		while(tmp.hasNext()) {
			var key = tmp.next();
			var tmp1;
			var _this = doom_html_Render.defaultNamespaces;
			if(__map_reserved[key] != null) {
				tmp1 = _this.getReserved(key);
			} else {
				tmp1 = _this.h[key];
			}
			var value = tmp1;
			var _this1 = this.namespaces;
			if(__map_reserved[key] != null) {
				_this1.setReserved(key,value);
			} else {
				_this1.h[key] = value;
			}
		}
	} else {
		this.namespaces = namespaces;
	}
	this.nodeToComponent = new haxe_ds_ObjectMap();
	this.componentToNode = new haxe_ds_ObjectMap();
};
doom_html_Render.__name__ = ["doom","html","Render"];
doom_html_Render.__interfaces__ = [doom_core_IRender];
doom_html_Render.setEvent = function(el,name,handler) {
	el["on" + name] = handler;
};
doom_html_Render.removeEvent = function(el,name) {
	Reflect.deleteField(el,"on" + name);
};
doom_html_Render.prototype = {
	doc: null
	,namespaces: null
	,nodeToComponent: null
	,componentToNode: null
	,mount: function(node,parent) {
		parent.innerHTML = "";
		var post = [];
		parent.appendChild(this.generateVChildDom(node,post));
		var _g = 0;
		while(_g < post.length) {
			var f = post[_g];
			++_g;
			f();
		}
	}
	,apply: function(node,dom) {
		var post = [];
		this.applyVChildToNode(node,dom,dom.parentElement,post,false);
		var _g = 0;
		while(_g < post.length) {
			var f = post[_g];
			++_g;
			f();
		}
	}
	,generate: function(node) {
		var post = [];
		var dom = this.generateDom(node,post);
		var _g = 0;
		while(_g < post.length) {
			var f = post[_g];
			++_g;
			f();
		}
		return dom;
	}
	,applyVChildToNode: function(node,dom,parent,post,tryUnmount) {
		if(null == node && null == dom) {
			return null;
		} else if(null == node) {
			if(tryUnmount) {
				this.unmountDomComponent(dom);
			}
			parent.removeChild(dom);
			return null;
		} else if(null == dom) {
			var el = this.generateVChildDom(node,post);
			parent.appendChild(el);
			return el;
		}
		switch(node[1]) {
		case 0:
			return this.applyToNode(node[2],dom,parent,post,tryUnmount);
		case 1:
			var comp = node[2];
			return this.applyComponentToNode(comp,dom,parent,post);
		}
	}
	,applyToNode: function(node,dom,parent,post,tryUnmount) {
		if(null == node && null == dom) {
			return null;
		} else if(null == node) {
			if(tryUnmount) {
				this.unmountDomComponent(dom);
			}
			parent.removeChild(dom);
			return null;
		} else if(null == dom) {
			var el = this.generateDom(node,post);
			parent.appendChild(el);
			return el;
		}
		switch(node[1]) {
		case 0:
			var children = node[4];
			var attributes = node[3];
			var name = node[2];
			if(tryUnmount) {
				this.unmountDomComponent(dom);
			}
			return this.applyElementToNode(name,attributes,children,dom,parent,post);
		case 1:
			var comment = node[2];
			if(tryUnmount) {
				this.unmountDomComponent(dom);
			}
			return this.applyCommentToNode(comment,dom,parent,post);
		case 2:
			var code = node[2];
			if(tryUnmount) {
				this.unmountDomComponent(dom);
			}
			return this.applyNodeToNode(dots_Html.parse(code),dom,parent,true);
		case 3:
			var text = node[2];
			if(tryUnmount) {
				this.unmountDomComponent(dom);
			}
			return this.applyTextToNode(text,dom,parent,post);
		}
	}
	,applyNodeToNode: function(srcDom,dstDom,parent,tryUnmount) {
		var _g = this;
		if(null == srcDom && null == dstDom) {
			return null;
		} else if(null == srcDom) {
			parent.removeChild(dstDom);
			return null;
		} else if(null == dstDom) {
			parent.appendChild(srcDom);
			return srcDom;
		}
		if(tryUnmount) {
			this.unmountDomComponent(dstDom);
		}
		if(srcDom.nodeType == dstDom.nodeType) {
			if(srcDom.nodeType == 1) {
				var srcEl = srcDom;
				var dstEl = dstDom;
				if(srcEl.tagName == dstEl.tagName) {
					this.applyElementAttributes(srcEl,dstEl);
					thx_Arrays.each(this.zipNodeListAndNodeList(srcEl.childNodes,dstEl.childNodes),function(t) {
						_g.applyNodeToNode(t._0,t._1,dstEl,true);
					});
					return dstDom;
				} else {
					return this.replaceChild(parent,dstDom,srcDom);
				}
			} else if(srcDom.nodeType == 8 || srcDom.nodeType == 3) {
				dstDom.textContent = srcDom.textContent;
				return dstDom;
			} else {
				return this.replaceChild(parent,dstDom,srcDom);
			}
		} else {
			return this.replaceChild(parent,dstDom,srcDom);
		}
	}
	,migrate: function(src,dst) {
		var fields = dst.migrationFields();
		var _g = 0;
		while(_g < fields.length) {
			var field = fields[_g];
			++_g;
			var f = [Reflect.field(src,field)];
			if(Reflect.isFunction(f[0])) {
				f[0] = Reflect.field(dst,field);
				src[field] = (function(f1) {
					return function() {
						f1[0].apply(dst,arguments);
					};
				})(f);
			} else {
				dst[field] = f[0];
			}
		}
	}
	,applyComponentToNode: function(newComp,dom,parent,post) {
		var oldComp = this.nodeToComponent.h[dom.__id__];
		if(null != oldComp) {
			if(thx_Types.sameType(newComp,oldComp)) {
				this.migrate(newComp,oldComp);
				oldComp.willUpdate();
				post.push($bind(oldComp,oldComp.didUpdate));
				if(oldComp.shouldRender()) {
					return this.applyToNode(this.renderComponent(oldComp),dom,parent,post,false);
				} else {
					return dom;
				}
			} else {
				oldComp.willUnmount();
				this.nodeToComponent.set(dom,newComp);
				this.componentToNode.remove(oldComp);
				this.componentToNode.set(newComp,dom);
				newComp.willMount();
				var node = this.renderComponent(newComp);
				newComp.apply = $bind(this,this.apply);
				var dom1 = this.applyToNode(node,dom,parent,post,false);
				newComp.node = dom1;
				post.splice(0,0,function() {
					newComp.didMount();
				});
				this.nodeToComponent.set(dom1,newComp);
				this.componentToNode.set(newComp,dom1);
				oldComp.isUnmounted = true;
				oldComp.node = null;
				oldComp.didUnmount();
				return dom1;
			}
		} else {
			newComp.willMount();
			var node1 = this.renderComponent(newComp);
			newComp.apply = $bind(this,this.apply);
			var dom2 = this.applyToNode(node1,dom,parent,post,false);
			newComp.node = dom2;
			post.splice(0,0,function() {
				newComp.didMount();
			});
			this.nodeToComponent.set(dom2,newComp);
			this.componentToNode.set(newComp,dom2);
			return dom2;
		}
	}
	,unmountDomComponent: function(dom) {
		var comp = this.nodeToComponent.h[dom.__id__];
		if(null == comp) {
			return;
		}
		this.unmountComponent(comp);
	}
	,renderComponent: function(comp) {
		try {
			return comp.render();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			throw new thx_error_ErrorWrapper("unable to render " + thx_Types.toString(Type["typeof"](comp)),e,null,{ fileName : "Render.hx", lineNumber : 237, className : "doom.html.Render", methodName : "renderComponent"});
		}
	}
	,unmountComponent: function(comp) {
		var node = this.componentToNode.h[comp.__id__];
		this.componentToNode.remove(comp);
		this.nodeToComponent.remove(node);
		comp.willUnmount();
		comp.isUnmounted = true;
		comp.node = null;
		comp.didUnmount();
	}
	,applyElementToNode: function(name,attributes,children,dom,parent,post) {
		var _g = this;
		if(dom.nodeType == 1 && dom.tagName == name.toUpperCase()) {
			this.applyNodeAttributes(attributes,dom);
			thx_Arrays.each(this.zipVChildrenAndNodeList(children,dom.childNodes),function(t) {
				_g.applyVChildToNode(t._0,t._1,dom,post,true);
			});
			return dom;
		} else {
			return this.replaceChild(parent,dom,this.createElement(name,attributes,children,post));
		}
	}
	,applyCommentToNode: function(comment,dom,parent,post) {
		if(dom.nodeType == 8) {
			dom.textContent = comment;
			return dom;
		} else {
			return this.replaceChild(parent,dom,this.doc.createComment(comment));
		}
	}
	,applyTextToNode: function(text,dom,parent,post) {
		if(dom.nodeType == 3) {
			dom.textContent = text;
			return dom;
		} else {
			return this.replaceChild(parent,dom,this.doc.createTextNode(text));
		}
	}
	,replaceChild: function(parent,oldDom,newDom) {
		if(oldDom == newDom) {
			return newDom;
		}
		parent.replaceChild(newDom,oldDom);
		return newDom;
	}
	,zipVChildrenAndNodeList: function(vnodes,children) {
		var len;
		var a = vnodes.length;
		var b = children.length;
		if(a > b) {
			len = a;
		} else {
			len = b;
		}
		var _g = [];
		var _g2 = 0;
		var _g1 = len;
		while(_g2 < _g1) {
			var i = _g2++;
			_g.push({ _0 : vnodes[i], _1 : children[i]});
		}
		return _g;
	}
	,zipNodeListAndNodeList: function(left,right) {
		var len;
		var a = left.length;
		var b = right.length;
		if(a > b) {
			len = a;
		} else {
			len = b;
		}
		var _g = [];
		var _g2 = 0;
		var _g1 = len;
		while(_g2 < _g1) {
			var i = _g2++;
			_g.push({ _0 : left[i], _1 : right[i]});
		}
		return _g;
	}
	,applyElementAttributes: function(srcDom,dstDom) {
		var _g = [];
		var _g2 = 0;
		var _g1 = dstDom.attributes.length;
		while(_g2 < _g1) _g.push(dstDom.attributes.item(_g2++).name);
		var dstAttrs = thx__$Set_Set_$Impl_$.createString(_g);
		var _g11 = [];
		var _g3 = 0;
		var _g21 = srcDom.attributes.length;
		while(_g3 < _g21) _g11.push(srcDom.attributes.item(_g3++).name);
		var srcAttrs = thx__$Set_Set_$Impl_$.createString(_g11);
		var result = thx__$Set_Set_$Impl_$.copy(dstAttrs);
		var tmp = $iterator(thx__$Set_Set_$Impl_$)(srcAttrs);
		while(tmp.hasNext()) result.remove(tmp.next());
		var tmp1 = $iterator(thx__$Set_Set_$Impl_$)(result);
		while(tmp1.hasNext()) dstDom.removeAttribute(tmp1.next());
		var tmp2 = $iterator(thx__$Set_Set_$Impl_$)(srcAttrs);
		while(tmp2.hasNext()) {
			var key = tmp2.next();
			var srcValue = doom_html_Attributes.getAttribute(srcDom,key);
			if(srcValue == doom_html_Attributes.getAttribute(dstDom,key)) {
				continue;
			}
			doom_html_Attributes.setDynamicAttribute(dstDom,key,srcValue);
		}
	}
	,applyNodeAttributes: function(attributes,dom) {
		var _g = [];
		var _g2 = 0;
		var _g1 = dom.attributes.length;
		while(_g2 < _g1) _g.push(dom.attributes.item(_g2++).name);
		var domAttrs = thx__$Set_Set_$Impl_$.createString(_g);
		var _g11 = [];
		var tmp = attributes.keys();
		while(tmp.hasNext()) _g11.push(tmp.next());
		var vdomAttrs = thx__$Set_Set_$Impl_$.createString(_g11);
		var result = thx__$Set_Set_$Impl_$.copy(domAttrs);
		var tmp1 = $iterator(thx__$Set_Set_$Impl_$)(vdomAttrs);
		while(tmp1.hasNext()) result.remove(tmp1.next());
		var tmp2 = $iterator(thx__$Set_Set_$Impl_$)(result);
		while(tmp2.hasNext()) dom.removeAttribute(tmp2.next());
		var tmp3 = $iterator(thx__$Set_Set_$Impl_$)(vdomAttrs);
		while(tmp3.hasNext()) {
			var key = tmp3.next();
			var _g21 = __map_reserved[key] != null?attributes.getReserved(key):attributes.h[key];
			if(_g21 == null) {
				doom_html_Attributes.removeAttribute(dom,key);
			} else {
				switch(_g21[1]) {
				case 1:
					var s = _g21[2];
					if(null == s || s == "") {
						doom_html_Attributes.removeAttribute(dom,key);
					} else {
						doom_html_Attributes.setStringAttribute(dom,key,_g21[2]);
					}
					break;
				case 0:
					doom_html_Attributes.toggleBoolAttribute(dom,key,_g21[2]);
					break;
				case 2:
					var e = _g21[2];
					doom_html_Render.setEvent(dom,key,e);
					break;
				}
			}
		}
	}
	,generateVChildDom: function(node,post) {
		switch(node[1]) {
		case 0:
			return this.generateDom(node[2],post);
		case 1:
			var comp = node[2];
			comp.willMount();
			var dom = this.generateDom(this.renderComponent(comp),post);
			comp.node = dom;
			comp.apply = $bind(this,this.apply);
			post.splice(0,0,function() {
				comp.didMount();
			});
			this.nodeToComponent.set(dom,comp);
			this.componentToNode.set(comp,dom);
			return dom;
		}
	}
	,generateDom: function(node,post) {
		switch(node[1]) {
		case 0:
			return this.createElement(node[2],node[3],node[4],post);
		case 1:
			return this.doc.createComment(node[2]);
		case 2:
			return dots_Html.parse(node[2]);
		case 3:
			return this.doc.createTextNode(node[2]);
		}
	}
	,createElement: function(name,attributes,children,post) {
		var colonPos = name.indexOf(":");
		var el;
		if(colonPos > 0) {
			var prefix = name.substring(0,colonPos);
			var name1 = name.substring(colonPos + 1);
			var tmp;
			var _this = this.namespaces;
			if(__map_reserved[prefix] != null) {
				tmp = _this.getReserved(prefix);
			} else {
				tmp = _this.h[prefix];
			}
			var ns = tmp;
			if(null == ns) {
				throw new thx_Error("element prefix \"" + prefix + "\" is not associated to any namespace. Add the right namespace to Doom.namespaces.",null,{ fileName : "Render.hx", lineNumber : 387, className : "doom.html.Render", methodName : "createElement"});
			}
			el = this.doc.createElementNS(ns,name1);
		} else {
			el = this.doc.createElement(name);
		}
		this.applyNodeAttributes(attributes,el);
		var tmp1 = HxOverrides.iter(children);
		while(tmp1.hasNext()) {
			var child = tmp1.next();
			if(null == child) {
				continue;
			}
			el.appendChild(this.generateVChildDom(child,post));
		}
		return el;
	}
	,__class__: doom_html_Render
};
var Doom = function() { };
Doom.__name__ = ["Doom"];
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0?s:HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0?HxOverrides.substr(s,pos,null):HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10?"0" + m:"" + m) + "-" + (d < 10?"0" + d:"" + d) + " " + (h < 10?"0" + h:"" + h) + ":" + (mi < 10?"0" + mi:"" + mi) + ":" + (s < 10?"0" + s:"" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) {
			pos = 0;
		}
	}
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) {
			i = 0;
		}
	}
	while(i < len) {
		if(a[i] === obj) {
			return i;
		}
		++i;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(tmp.next() == elt) {
		return true;
	}
	return false;
};
Math.__name__ = ["Math"];
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "string":
		return ValueType.TClass(String);
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var dataclass_DataClass = function() { };
dataclass_DataClass.__name__ = ["dataclass","DataClass"];
var doom_core__$AttributeValue_AttributeValue_$Impl_$ = {};
doom_core__$AttributeValue_AttributeValue_$Impl_$.__name__ = ["doom","core","_AttributeValue","AttributeValue_Impl_"];
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString = function(s) {
	return doom_core_AttributeValueImpl.StringAttribute(s);
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromMap = function(map) {
	var values = [];
	var tmp = map.keys();
	while(tmp.hasNext()) {
		var key = tmp.next();
		if(__map_reserved[key] != null?map.getReserved(key):map.h[key]) {
			values.push(key);
		}
	}
	return doom_core_AttributeValueImpl.StringAttribute(values.join(" "));
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromBool = function(b) {
	return doom_core_AttributeValueImpl.BoolAttribute(b);
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromHandler = function(f) {
	if(null == f) {
		return doom_core_AttributeValueImpl.BoolAttribute(false);
	} else {
		return doom_core_AttributeValueImpl.EventAttribute(function(e) {
			e.preventDefault();
			f();
		});
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromEventHandler = function(f) {
	if(null == f) {
		return doom_core_AttributeValueImpl.BoolAttribute(false);
	} else {
		return doom_core_AttributeValueImpl.EventAttribute(f);
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromElementHandler = function(f) {
	if(null == f) {
		return doom_core_AttributeValueImpl.BoolAttribute(false);
	} else {
		return doom_core_AttributeValueImpl.EventAttribute(function(e) {
			e.preventDefault();
			f(e.target);
		});
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromStringValueHandler = function(f) {
	if(null == f) {
		return doom_core_AttributeValueImpl.BoolAttribute(false);
	} else {
		return doom_core_AttributeValueImpl.EventAttribute(function(e) {
			e.preventDefault();
			f(dots_Dom.getValue(e.target));
		});
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromBoolValueHandler = function(f) {
	if(null == f) {
		return doom_core_AttributeValueImpl.BoolAttribute(false);
	} else {
		return doom_core_AttributeValueImpl.EventAttribute(function(e) {
			e.preventDefault();
			f(e.target.checked);
		});
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromIntValueHandler = function(f) {
	if(null == f) {
		return doom_core_AttributeValueImpl.BoolAttribute(false);
	} else {
		return doom_core__$AttributeValue_AttributeValue_$Impl_$.fromStringValueHandler(function(s) {
			if(thx_Ints.canParse(s)) {
				f(thx_Ints.parse(s));
			}
		});
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.fromFloatValueHandler = function(f) {
	if(null == f) {
		return doom_core_AttributeValueImpl.BoolAttribute(false);
	} else {
		return doom_core__$AttributeValue_AttributeValue_$Impl_$.fromStringValueHandler(function(s) {
			if(thx_Floats.canParse(s)) {
				f(thx_Floats.parse(s));
			}
		});
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.toString = function(this1) {
	switch(this1[1]) {
	case 1:
		return this1[2];
	default:
		throw new thx_Error("cannot convert attribute " + Std.string(this1) + " to string",null,{ fileName : "AttributeValue.hx", lineNumber : 67, className : "doom.core._AttributeValue.AttributeValue_Impl_", methodName : "toString"});
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.equalsTo = function(this1,that) {
	if(this1 == null) {
		return false;
	} else {
		switch(this1[1]) {
		case 0:
			if(that == null) {
				return false;
			} else {
				switch(that[1]) {
				case 0:
					return this1[2] == that[2];
				default:
					return false;
				}
			}
			break;
		case 1:
			if(that == null) {
				return false;
			} else {
				switch(that[1]) {
				case 1:
					return this1[2] == that[2];
				default:
					return false;
				}
			}
			break;
		default:
			if(that == null) {
				return false;
			} else {
				switch(that[1]) {
				default:
					return false;
				}
			}
		}
	}
};
doom_core__$AttributeValue_AttributeValue_$Impl_$.notEqualsTo = function(this1,that) {
	return !doom_core__$AttributeValue_AttributeValue_$Impl_$.equalsTo(this1,that);
};
var doom_core_AttributeValueImpl = { __ename__ : ["doom","core","AttributeValueImpl"], __constructs__ : ["BoolAttribute","StringAttribute","EventAttribute"] };
doom_core_AttributeValueImpl.BoolAttribute = function(b) { var $x = ["BoolAttribute",0,b]; $x.__enum__ = doom_core_AttributeValueImpl; return $x; };
doom_core_AttributeValueImpl.StringAttribute = function(s) { var $x = ["StringAttribute",1,s]; $x.__enum__ = doom_core_AttributeValueImpl; return $x; };
doom_core_AttributeValueImpl.EventAttribute = function(f) { var $x = ["EventAttribute",2,f]; $x.__enum__ = doom_core_AttributeValueImpl; return $x; };
var doom_core_Component = function(props,children) {
	this.isUnmounted = false;
	this.props = props;
	this.children = children;
};
doom_core_Component.__name__ = ["doom","core","Component"];
doom_core_Component.prototype = {
	props: null
	,children: null
	,node: null
	,isUnmounted: null
	,apply: null
	,render: function() {
		throw new thx_error_AbstractMethod({ fileName : "Component.hx", lineNumber : 19, className : "doom.core.Component", methodName : "render"});
	}
	,asChild: function() {
		return doom_core_VChildImpl.Comp(this);
	}
	,update: function(props) {
		var old = this.props;
		this.props = props;
		if(!this.shouldUpdate(old,props) || !this.shouldRender()) {
			return;
		}
		try {
			this.apply(doom_core_VChildImpl.Comp(this),this.node);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.rethrowUpdateError(e);
		}
	}
	,rethrowUpdateError: function(e) {
		if(Std.string(e).indexOf("apply is not a function") >= 0) {
			throw new thx_Error("method `apply` has not been correctly migrated to " + Type.getClassName(js_Boot.getClass(this)),null,{ fileName : "Component.hx", lineNumber : 41, className : "doom.core.Component", methodName : "rethrowUpdateError"});
		} else {
			throw thx_Error.fromDynamic(e,{ fileName : "Component.hx", lineNumber : 43, className : "doom.core.Component", methodName : "rethrowUpdateError"});
		}
	}
	,shouldUpdate: function(oldProps,newProps) {
		return true;
	}
	,shouldRender: function() {
		return !this.isUnmounted;
	}
	,migrationFields: function() {
		return ["props","update","children"];
	}
	,didMount: function() {
	}
	,willMount: function() {
	}
	,willUpdate: function() {
	}
	,didUpdate: function() {
	}
	,didUnmount: function() {
	}
	,willUnmount: function() {
	}
	,__class__: doom_core_Component
};
var doom_core_SelectorParser = function(selector) {
	this.selector = selector;
	this.index = 0;
};
doom_core_SelectorParser.__name__ = ["doom","core","SelectorParser"];
doom_core_SelectorParser.parseSelector = function(selector,otherAttributes) {
	var result = new doom_core_SelectorParser(selector).parse();
	if(otherAttributes != null) {
		result.attributes = doom_core_SelectorParser.mergeAttributes(result.attributes,otherAttributes);
	}
	return result;
};
doom_core_SelectorParser.mergeAttributes = function(dest,other) {
	return thx_Iterators.reduce(other.keys(),function(acc,key) {
		var value = __map_reserved[key] != null?other.getReserved(key):other.h[key];
		if(key == "class" && (__map_reserved[key] != null?acc.existsReserved(key):acc.h.hasOwnProperty(key))) {
			value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("" + doom_core__$AttributeValue_AttributeValue_$Impl_$.toString(__map_reserved[key] != null?acc.getReserved(key):acc.h[key]) + " " + doom_core__$AttributeValue_AttributeValue_$Impl_$.toString(value));
		}
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},dest);
};
doom_core_SelectorParser.prototype = {
	selector: null
	,index: null
	,parse: function() {
		return { tag : this.gobbleTag(), attributes : this.gobbleAttributes()};
	}
	,gobbleTag: function() {
		if(this.isIdentifierStart()) {
			return this.gobbleIdentifier();
		} else {
			return "div";
		}
	}
	,gobbleAttributes: function() {
		var attributes = new haxe_ds_StringMap();
		while(this.index < this.selector.length) {
			var attribute = this.gobbleAttribute();
			if(attribute.key == "class" && (__map_reserved["class"] != null?attributes.existsReserved("class"):attributes.h.hasOwnProperty("class"))) {
				attribute.value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("" + doom_core__$AttributeValue_AttributeValue_$Impl_$.toString(__map_reserved["class"] != null?attributes.getReserved("class"):attributes.h["class"]) + " " + doom_core__$AttributeValue_AttributeValue_$Impl_$.toString(attribute.value));
			}
			var key = attribute.key;
			var value = attribute.value;
			if(__map_reserved[key] != null) {
				attributes.setReserved(key,value);
			} else {
				attributes.h[key] = value;
			}
		}
		return attributes;
	}
	,gobbleAttribute: function() {
		var _g = this["char"]();
		switch(_g) {
		case "#":
			return this.gobbleElementId();
		case ".":
			return this.gobbleElementClass();
		case "[":
			return this.gobbleElementAttribute();
		default:
			throw new thx_Error("unknown selector char \"" + _g + "\" at pos " + this.index,null,{ fileName : "SelectorParser.hx", lineNumber : 79, className : "doom.core.SelectorParser", methodName : "gobbleAttribute"});
		}
	}
	,gobbleElementId: function() {
		this.gobbleChar("#");
		return { key : "id", value : doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString(this.gobbleIdentifier())};
	}
	,gobbleElementClass: function() {
		this.gobbleChar(".");
		return { key : "class", value : doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString(this.gobbleIdentifier())};
	}
	,gobbleElementAttribute: function() {
		this.gobbleChar("[");
		var key = this.gobbleIdentifier();
		this.gobbleChar("=");
		var value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString(this.gobbleUpTo("]"));
		if(thx_Bools.canParse(doom_core__$AttributeValue_AttributeValue_$Impl_$.toString(value))) {
			value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromBool(thx_Bools.parse(doom_core__$AttributeValue_AttributeValue_$Impl_$.toString(value)));
		}
		this.gobbleChar("]");
		return { key : key, value : value};
	}
	,gobbleIdentifier: function() {
		var result = [];
		result.push(this.gobbleChar());
		while(this.isIdentifierPart()) result.push(this.gobbleChar());
		return result.join("");
	}
	,gobbleChar: function(expecting,expectingAnyOf) {
		var c = this.selector.charAt(this.index++);
		if(expecting != null && expecting != c) {
			throw new thx_Error("expecting " + expecting + " at position " + this.index + " of " + this.selector,null,{ fileName : "SelectorParser.hx", lineNumber : 119, className : "doom.core.SelectorParser", methodName : "gobbleChar"});
		}
		if(expectingAnyOf != null && !thx_Arrays.contains(expectingAnyOf,c)) {
			throw new thx_Error("expecting one of " + expectingAnyOf.join(", ") + " at position " + this.index + " of " + this.selector,null,{ fileName : "SelectorParser.hx", lineNumber : 122, className : "doom.core.SelectorParser", methodName : "gobbleChar"});
		}
		return c;
	}
	,gobbleUpTo: function(stopChar) {
		var result = [];
		while(this["char"]() != stopChar) result.push(this.gobbleChar());
		return result.join("");
	}
	,isAlpha: function() {
		var c = this.code();
		if(!(c >= 65 && c <= 90)) {
			if(c >= 97) {
				return c <= 122;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,isNumeric: function() {
		var c = this.code();
		if(c >= 48) {
			return c <= 57;
		} else {
			return false;
		}
	}
	,isAlphaNumeric: function() {
		if(!this.isAlpha()) {
			return this.isNumeric();
		} else {
			return true;
		}
	}
	,isAny: function(cs) {
		var _g = 0;
		while(_g < cs.length) {
			var c = cs[_g];
			++_g;
			if(c == this["char"]()) {
				return true;
			}
		}
		return false;
	}
	,isIdentifierStart: function() {
		return this.isAlpha();
	}
	,isIdentifierPart: function() {
		if(!(this.isAlpha() || this.isNumeric())) {
			return this.isAny(["_","-"]);
		} else {
			return true;
		}
	}
	,isIdStart: function() {
		return this["char"]() == "#";
	}
	,isClassStart: function() {
		return this["char"]() == ".";
	}
	,'char': function() {
		return this.selector.charAt(this.index);
	}
	,code: function() {
		return HxOverrides.cca(this.selector,this.index);
	}
	,__class__: doom_core_SelectorParser
};
var doom_core__$VChild_VChild_$Impl_$ = {};
doom_core__$VChild_VChild_$Impl_$.__name__ = ["doom","core","_VChild","VChild_Impl_"];
doom_core__$VChild_VChild_$Impl_$.node = function(node) {
	return doom_core_VChildImpl.Node(node);
};
doom_core__$VChild_VChild_$Impl_$.text = function(text) {
	return doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text(text));
};
doom_core__$VChild_VChild_$Impl_$.comp = function(comp) {
	return doom_core_VChildImpl.Comp(comp);
};
doom_core__$VChild_VChild_$Impl_$.asChildren = function(this1) {
	return doom_core__$VChildren_VChildren_$Impl_$.children([this1]);
};
var doom_core_VChildImpl = { __ename__ : ["doom","core","VChildImpl"], __constructs__ : ["Node","Comp"] };
doom_core_VChildImpl.Node = function(node) { var $x = ["Node",0,node]; $x.__enum__ = doom_core_VChildImpl; return $x; };
doom_core_VChildImpl.Comp = function(comp) { var $x = ["Comp",1,comp]; $x.__enum__ = doom_core_VChildImpl; return $x; };
var doom_core__$VChildren_VChildren_$Impl_$ = {};
doom_core__$VChildren_VChildren_$Impl_$.__name__ = ["doom","core","_VChildren","VChildren_Impl_"];
doom_core__$VChildren_VChildren_$Impl_$.child = function(child) {
	return doom_core__$VChildren_VChildren_$Impl_$.children([child]);
};
doom_core__$VChildren_VChildren_$Impl_$.node = function(node) {
	return doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(node)]);
};
doom_core__$VChildren_VChildren_$Impl_$.text = function(text) {
	return doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text(text))]);
};
doom_core__$VChildren_VChildren_$Impl_$.comp = function(comp) {
	return doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Comp(comp)]);
};
doom_core__$VChildren_VChildren_$Impl_$.children = function(children) {
	return children;
};
doom_core__$VChildren_VChildren_$Impl_$.nodes = function(children) {
	return doom_core__$VChildren_VChildren_$Impl_$.children(children.map(doom_core__$VChild_VChild_$Impl_$.node));
};
doom_core__$VChildren_VChildren_$Impl_$.toArray = function(this1) {
	return this1;
};
doom_core__$VChildren_VChildren_$Impl_$._new = function(arr) {
	return arr;
};
doom_core__$VChildren_VChildren_$Impl_$.add = function(this1,child) {
	this1.push(child);
	return doom_core__$VChildren_VChildren_$Impl_$.children(this1);
};
doom_core__$VChildren_VChildren_$Impl_$.concat = function(this1,other) {
	return doom_core__$VChildren_VChildren_$Impl_$.children(this1.concat(other));
};
doom_core__$VChildren_VChildren_$Impl_$.copy = function(this1) {
	return doom_core__$VChildren_VChildren_$Impl_$.children(this1.slice());
};
doom_core__$VChildren_VChildren_$Impl_$.filter = function(this1,predicate) {
	return doom_core__$VChildren_VChildren_$Impl_$.children(this1.filter(predicate));
};
var doom_core__$VNode_VNode_$Impl_$ = {};
doom_core__$VNode_VNode_$Impl_$.__name__ = ["doom","core","_VNode","VNode_Impl_"];
doom_core__$VNode_VNode_$Impl_$.text = function(s) {
	return doom_core_VNodeImpl.Text(s);
};
doom_core__$VNode_VNode_$Impl_$.raw = function(content) {
	return doom_core_VNodeImpl.Raw(content);
};
doom_core__$VNode_VNode_$Impl_$.comment = function(content) {
	return doom_core_VNodeImpl.Comment(content);
};
doom_core__$VNode_VNode_$Impl_$.el = function(name,attributes,children) {
	if(null == attributes) {
		attributes = new haxe_ds_StringMap();
	}
	if(null == children) {
		children = doom_core__$VChildren_VChildren_$Impl_$.children([]);
	}
	return doom_core_VNodeImpl.Element(name,attributes,children);
};
doom_core__$VNode_VNode_$Impl_$.asChild = function(this1) {
	return doom_core_VChildImpl.Node(this1);
};
doom_core__$VNode_VNode_$Impl_$.asChildren = function(this1) {
	return doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(this1)]);
};
var doom_core_VNodeImpl = { __ename__ : ["doom","core","VNodeImpl"], __constructs__ : ["Element","Comment","Raw","Text"] };
doom_core_VNodeImpl.Element = function(name,attributes,children) { var $x = ["Element",0,name,attributes,children]; $x.__enum__ = doom_core_VNodeImpl; return $x; };
doom_core_VNodeImpl.Comment = function(comment) { var $x = ["Comment",1,comment]; $x.__enum__ = doom_core_VNodeImpl; return $x; };
doom_core_VNodeImpl.Raw = function(code) { var $x = ["Raw",2,code]; $x.__enum__ = doom_core_VNodeImpl; return $x; };
doom_core_VNodeImpl.Text = function(text) { var $x = ["Text",3,text]; $x.__enum__ = doom_core_VNodeImpl; return $x; };
var doom_html_AttributeType = { __ename__ : ["doom","html","AttributeType"], __constructs__ : ["BooleanAttribute","Property","BooleanProperty","OverloadedBooleanAttribute","NumericAttribute","PositiveNumericAttribute","SideEffectProperty"] };
doom_html_AttributeType.BooleanAttribute = ["BooleanAttribute",0];
doom_html_AttributeType.BooleanAttribute.__enum__ = doom_html_AttributeType;
doom_html_AttributeType.Property = ["Property",1];
doom_html_AttributeType.Property.__enum__ = doom_html_AttributeType;
doom_html_AttributeType.BooleanProperty = ["BooleanProperty",2];
doom_html_AttributeType.BooleanProperty.__enum__ = doom_html_AttributeType;
doom_html_AttributeType.OverloadedBooleanAttribute = ["OverloadedBooleanAttribute",3];
doom_html_AttributeType.OverloadedBooleanAttribute.__enum__ = doom_html_AttributeType;
doom_html_AttributeType.NumericAttribute = ["NumericAttribute",4];
doom_html_AttributeType.NumericAttribute.__enum__ = doom_html_AttributeType;
doom_html_AttributeType.PositiveNumericAttribute = ["PositiveNumericAttribute",5];
doom_html_AttributeType.PositiveNumericAttribute.__enum__ = doom_html_AttributeType;
doom_html_AttributeType.SideEffectProperty = ["SideEffectProperty",6];
doom_html_AttributeType.SideEffectProperty.__enum__ = doom_html_AttributeType;
var doom_html_Attributes = function() { };
doom_html_Attributes.__name__ = ["doom","html","Attributes"];
doom_html_Attributes.getAttribute = function(el,name) {
	var tmp;
	var _this = doom_html_Attributes.properties;
	if(__map_reserved[name] != null) {
		tmp = _this.getReserved(name);
	} else {
		tmp = _this.h[name];
	}
	var prop = tmp;
	if(prop == null) {
		return el.getAttribute(name);
	} else {
		switch(prop[1]) {
		case 0:case 3:case 4:case 5:
			return el.getAttribute(name);
		case 1:case 2:case 6:
			return Reflect.field(el,name);
		}
	}
};
doom_html_Attributes.setDynamicAttribute = function(el,name,value) {
	var tmp;
	var _this = doom_html_Attributes.properties;
	if(__map_reserved[name] != null) {
		tmp = _this.getReserved(name);
	} else {
		tmp = _this.h[name];
	}
	var prop = tmp;
	if(prop == null) {
		el.setAttribute(name,value);
	} else {
		switch(prop[1]) {
		case 0:case 3:case 4:case 5:
			el.setAttribute(name,value);
			break;
		case 1:case 2:case 6:
			el[name] = value;
			break;
		}
	}
	return;
};
doom_html_Attributes.setStringAttribute = function(el,name,value) {
	var tmp;
	var _this = doom_html_Attributes.properties;
	if(__map_reserved[name] != null) {
		tmp = _this.getReserved(name);
	} else {
		tmp = _this.h[name];
	}
	var prop = tmp;
	if(prop == null) {
		el.setAttribute(name,value);
	} else {
		switch(prop[1]) {
		case 0:case 3:case 4:case 5:
			el.setAttribute(name,value);
			break;
		case 1:case 2:case 6:
			el[name] = value;
			break;
		}
	}
	return;
};
doom_html_Attributes.toggleBoolAttribute = function(el,name,value) {
	var tmp;
	var _this = doom_html_Attributes.properties;
	if(__map_reserved[name] != null) {
		tmp = _this.getReserved(name);
	} else {
		tmp = _this.h[name];
	}
	var prop = tmp;
	if(prop == null) {
		if(value) {
			el.setAttribute(name,name);
		} else {
			el.removeAttribute(name);
		}
	} else {
		switch(prop[1]) {
		case 0:case 3:case 4:case 5:
			if(value) {
				el.setAttribute(name,name);
			} else {
				el.removeAttribute(name);
			}
			break;
		case 1:case 2:case 6:
			el[name] = value;
			break;
		}
	}
	return;
};
doom_html_Attributes.removeAttribute = function(el,name) {
	el.removeAttribute(name);
};
var doom_html_Component = function(props,children) {
	doom_core_Component.call(this,props,children);
};
doom_html_Component.__name__ = ["doom","html","Component"];
doom_html_Component.__super__ = doom_core_Component;
doom_html_Component.prototype = $extend(doom_core_Component.prototype,{
	get_element: function() {
		return this.node;
	}
	,__class__: doom_html_Component
});
var doom_html__$EventHandler_EventHandler_$Impl_$ = {};
doom_html__$EventHandler_EventHandler_$Impl_$.__name__ = ["doom","html","_EventHandler","EventHandler_Impl_"];
doom_html__$EventHandler_EventHandler_$Impl_$.fromElementHandler = function(f) {
	return function(e) {
		f(e.target);
	};
};
var doom_html_Html = function() { };
doom_html_Html.__name__ = ["doom","html","Html"];
doom_html_Html.a = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("a",attributes,children);
};
doom_html_Html.abbr = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("abbr",attributes,children);
};
doom_html_Html.address = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("address",attributes,children);
};
doom_html_Html.area = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("area",attributes,null);
};
doom_html_Html.article = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("article",attributes,children);
};
doom_html_Html.aside = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("aside",attributes,children);
};
doom_html_Html.audio = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("audio",attributes,children);
};
doom_html_Html.b = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("b",attributes,children);
};
doom_html_Html.base = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("base",attributes,null);
};
doom_html_Html.bdi = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("bdi",attributes,children);
};
doom_html_Html.bdo = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("bdo",attributes,children);
};
doom_html_Html.blockquote = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("blockquote",attributes,children);
};
doom_html_Html.body = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("body",attributes,children);
};
doom_html_Html.br = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("br",attributes,null);
};
doom_html_Html.button = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("button",attributes,children);
};
doom_html_Html.canvas = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("canvas",attributes,children);
};
doom_html_Html.caption = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("caption",attributes,children);
};
doom_html_Html.cite = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("cite",attributes,children);
};
doom_html_Html.code = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("code",attributes,children);
};
doom_html_Html.col = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("col",attributes,null);
};
doom_html_Html.colgroup = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("colgroup",attributes,children);
};
doom_html_Html.data = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("data",attributes,children);
};
doom_html_Html.datalist = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("datalist",attributes,children);
};
doom_html_Html.dd = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("dd",attributes,children);
};
doom_html_Html.del = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("del",attributes,children);
};
doom_html_Html.details = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("details",attributes,children);
};
doom_html_Html.dfn = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("dfn",attributes,children);
};
doom_html_Html.dialog = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("dialog",attributes,children);
};
doom_html_Html.div = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("div",attributes,children);
};
doom_html_Html.dl = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("dl",attributes,children);
};
doom_html_Html.dt = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("dt",attributes,children);
};
doom_html_Html.em = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("em",attributes,children);
};
doom_html_Html.embed = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("embed",attributes,null);
};
doom_html_Html.fieldset = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("fieldset",attributes,children);
};
doom_html_Html.figcaption = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("figcaption",attributes,children);
};
doom_html_Html.figure = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("figure",attributes,children);
};
doom_html_Html.footer = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("footer",attributes,children);
};
doom_html_Html.form = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("form",attributes,children);
};
doom_html_Html.h1 = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("h1",attributes,children);
};
doom_html_Html.h2 = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("h2",attributes,children);
};
doom_html_Html.h3 = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("h3",attributes,children);
};
doom_html_Html.h4 = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("h4",attributes,children);
};
doom_html_Html.h5 = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("h5",attributes,children);
};
doom_html_Html.h6 = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("h6",attributes,children);
};
doom_html_Html.head = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("head",attributes,children);
};
doom_html_Html.header = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("header",attributes,children);
};
doom_html_Html.hgroup = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("hgroup",attributes,children);
};
doom_html_Html.hr = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("hr",attributes,null);
};
doom_html_Html.html = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("html",attributes,children);
};
doom_html_Html.i = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("i",attributes,children);
};
doom_html_Html.iframe = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("iframe",attributes,children);
};
doom_html_Html.img = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("img",attributes,null);
};
doom_html_Html.input = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("input",attributes,null);
};
doom_html_Html.ins = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("ins",attributes,children);
};
doom_html_Html.kbd = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("kbd",attributes,children);
};
doom_html_Html.keygen = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("keygen",attributes,null);
};
doom_html_Html.label = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("label",attributes,children);
};
doom_html_Html.legend = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("legend",attributes,children);
};
doom_html_Html.li = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("li",attributes,children);
};
doom_html_Html.link = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("link",attributes,null);
};
doom_html_Html.main = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("main",attributes,children);
};
doom_html_Html.map = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("map",attributes,children);
};
doom_html_Html.mark = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("mark",attributes,children);
};
doom_html_Html.menu = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("menu",attributes,children);
};
doom_html_Html.menuitem = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("menuitem",attributes,children);
};
doom_html_Html.meta = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("meta",attributes,null);
};
doom_html_Html.meter = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("meter",attributes,children);
};
doom_html_Html.nav = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("nav",attributes,children);
};
doom_html_Html.noscript = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("noscript",attributes,children);
};
doom_html_Html.object = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("object",attributes,children);
};
doom_html_Html.ol = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("ol",attributes,children);
};
doom_html_Html.optgroup = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("optgroup",attributes,children);
};
doom_html_Html.option = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("option",attributes,children);
};
doom_html_Html.output = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("output",attributes,children);
};
doom_html_Html.p = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("p",attributes,children);
};
doom_html_Html.param = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("param",attributes,null);
};
doom_html_Html.pre = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("pre",attributes,children);
};
doom_html_Html.progress = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("progress",attributes,children);
};
doom_html_Html.q = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("q",attributes,children);
};
doom_html_Html.rb = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("rb",attributes,children);
};
doom_html_Html.rp = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("rp",attributes,children);
};
doom_html_Html.rt = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("rt",attributes,children);
};
doom_html_Html.rtc = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("rtc",attributes,children);
};
doom_html_Html.ruby = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("ruby",attributes,children);
};
doom_html_Html.s = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("s",attributes,children);
};
doom_html_Html.samp = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("samp",attributes,children);
};
doom_html_Html.script = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("script",attributes,children);
};
doom_html_Html.section = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("section",attributes,children);
};
doom_html_Html.select = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("select",attributes,children);
};
doom_html_Html.small = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("small",attributes,children);
};
doom_html_Html.source = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("source",attributes,null);
};
doom_html_Html.span = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("span",attributes,children);
};
doom_html_Html.strong = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("strong",attributes,children);
};
doom_html_Html.style = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("style",attributes,children);
};
doom_html_Html.sub = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("sub",attributes,children);
};
doom_html_Html.summary = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("summary",attributes,children);
};
doom_html_Html.sup = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("sup",attributes,children);
};
doom_html_Html.table = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("table",attributes,children);
};
doom_html_Html.tbody = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("tbody",attributes,children);
};
doom_html_Html.td = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("td",attributes,children);
};
doom_html_Html.template = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("template",attributes,children);
};
doom_html_Html.textarea = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("textarea",attributes,children);
};
doom_html_Html.tfoot = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("tfoot",attributes,children);
};
doom_html_Html.th = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("th",attributes,children);
};
doom_html_Html.thead = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("thead",attributes,children);
};
doom_html_Html.time = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("time",attributes,children);
};
doom_html_Html.title = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("title",attributes,children);
};
doom_html_Html.tr = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("tr",attributes,children);
};
doom_html_Html.track = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("track",attributes,null);
};
doom_html_Html.u = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("u",attributes,children);
};
doom_html_Html.ul = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("ul",attributes,children);
};
doom_html_Html.htmlvar = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("var",attributes,children);
};
doom_html_Html.video = function(attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el("video",attributes,children);
};
doom_html_Html.wbr = function(attributes) {
	return doom_core__$VNode_VNode_$Impl_$.el("wbr",attributes,null);
};
doom_html_Html.D = function(selector,attributes,children) {
	var parseResult = doom_core_SelectorParser.parseSelector(selector,attributes);
	return doom_core__$VNode_VNode_$Impl_$.el(parseResult.tag,parseResult.attributes,children);
};
doom_html_Html.el = function(name,attributes,children) {
	return doom_core__$VNode_VNode_$Impl_$.el(name,attributes,children);
};
doom_html_Html.text = function(content) {
	return doom_core_VNodeImpl.Text(content);
};
doom_html_Html.comment = function(content) {
	return doom_core_VNodeImpl.Comment(content);
};
doom_html_Html.raw = function(content) {
	return doom_core_VNodeImpl.Raw(content);
};
doom_html_Html.dummy = function(text) {
	if(text == null) {
		text = "empty node";
	}
	var _g = new haxe_ds_StringMap();
	var value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("display:none");
	if(__map_reserved.style != null) {
		_g.setReserved("style",value);
	} else {
		_g.h["style"] = value;
	}
	var value1 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString(text);
	if(__map_reserved["data-comment"] != null) {
		_g.setReserved("data-comment",value1);
	} else {
		_g.h["data-comment"] = value1;
	}
	return doom_core__$VNode_VNode_$Impl_$.el("div",_g);
};
doom_html_Html.comp = function(comp) {
	return doom_core_VChildImpl.Comp(comp);
};
var dots_HTMLCollections = function() { };
dots_HTMLCollections.__name__ = ["dots","HTMLCollections"];
dots_HTMLCollections.toArray = function(it) {
	return Array.prototype.slice.call(it);
};
var dots_NodeLists = function() { };
dots_NodeLists.__name__ = ["dots","NodeLists"];
dots_NodeLists.toArray = function(it) {
	return Array.prototype.slice.call(it);
};
var dots_Dom = function() { };
dots_Dom.__name__ = ["dots","Dom"];
dots_Dom.addCss = function(css,container) {
	if(null == container) {
		container = window.document.head;
	}
	var style = window.document.createElement("style");
	style.type = "text/css";
	style.appendChild(window.document.createTextNode(css));
	container.appendChild(style);
};
dots_Dom.getValue = function(el) {
	switch(el.nodeName) {
	case "INPUT":
		var input = el;
		if(input.type == "checkbox" && !input.checked) {
			return null;
		} else {
			return input.value;
		}
		break;
	case "TEXTAREA":
		return el.value;
	case "SELECT":
		var select = el;
		return select.options.item(select.selectedIndex).value;
	default:
		return el.innerHTML;
	}
};
dots_Dom.getMultiValue = function(el) {
	switch(el.nodeName) {
	case "INPUT":
		var input = el;
		if(input.type == "checkbox" && !input.checked) {
			return haxe_ds_Either.Right([]);
		} else {
			return haxe_ds_Either.Left(input.value);
		}
		break;
	case "TEXTAREA":
		return haxe_ds_Either.Left(el.value);
	case "SELECT":
		var select = el;
		if(select.multiple) {
			var values = [];
			var options = select.selectedOptions;
			var _g2 = 0;
			var _g1 = options.length;
			while(_g2 < _g1) values.push(options[_g2++].value);
			return haxe_ds_Either.Right(values);
		} else {
			return haxe_ds_Either.Left(select.options.item(select.selectedIndex).value);
		}
		break;
	default:
		return haxe_ds_Either.Left(el.innerHTML);
	}
};
dots_Dom.getWindowHeight = function(win) {
	if(null == win) {
		win = window;
	}
	return win.document.documentElement.clientHeight;
};
dots_Dom.getWindowWidth = function(win) {
	if(null == win) {
		win = window;
	}
	return win.document.documentElement.clientWidth;
};
dots_Dom.getWindowSize = function(win) {
	if(null == win) {
		win = window;
	}
	return { width : win.document.documentElement.clientWidth, height : win.document.documentElement.clientHeight};
};
dots_Dom.getWindowInnerHeight = function(win) {
	if(null == win) {
		win = window;
	}
	return win.innerHeight;
};
dots_Dom.getWindowInnerWidth = function(win) {
	if(null == win) {
		win = window;
	}
	return win.innerWidth;
};
dots_Dom.getWindowInnerSize = function(win) {
	if(null == win) {
		win = window;
	}
	return { width : win.innerWidth, height : win.innerHeight};
};
dots_Dom.getDocumentHeight = function(doc) {
	if(null == doc) {
		doc = window.document;
	}
	return doc.documentElement.scrollHeight;
};
dots_Dom.getDocumentWidth = function(doc) {
	if(null == doc) {
		doc = window.document;
	}
	return doc.documentElement.scrollWidth;
};
dots_Dom.getDocumentSize = function(doc) {
	if(null == doc) {
		doc = window.document;
	}
	return { width : doc.documentElement.scrollWidth, height : doc.documentElement.scrollHeight};
};
dots_Dom.getScrollTop = function(doc) {
	if(null == doc) {
		doc = window.document;
	}
	if(null != doc.documentElement) {
		return doc.documentElement.scrollTop;
	} else {
		return doc.body.scrollTop;
	}
};
dots_Dom.getOffset = function(el,doc) {
	if(null == doc) {
		doc = window.document;
	}
	var rect = el.getBoundingClientRect();
	return { top : Math.round(rect.top + doc.body.scrollTop), left : Math.round(rect.left + doc.body.scrollLeft)};
};
dots_Dom.getOffsetParent = function(el) {
	if(null != el.offsetParent) {
		return el.offsetParent;
	} else {
		return el;
	}
};
dots_Dom.getOuterHeight = function(el) {
	return el.offsetHeight;
};
dots_Dom.getOuterHeightWithMargin = function(el) {
	var h = el.offsetHeight;
	var s = dots_Style.style(el);
	return h + Std.parseInt(s.marginTop) + Std.parseInt(s.marginBottom);
};
dots_Dom.getOuterWidth = function(el) {
	return el.offsetWidth;
};
dots_Dom.getOuterWidthWithMargin = function(el) {
	var h = el.offsetWidth;
	var s = dots_Style.style(el);
	return h + Std.parseInt(s.marginLeft) + Std.parseInt(s.marginRight);
};
dots_Dom.getPosition = function(el) {
	return { left : el.offsetLeft, top : el.offsetTop};
};
dots_Dom.ready = function(fn,doc) {
	if(null == doc) {
		doc = window.document;
	}
	if(doc.readyState != "loading") {
		fn();
	} else {
		doc.addEventListener("DOMContentLoaded",fn);
	}
};
dots_Dom.empty = function(el) {
	el.innerHTML = "";
};
var dots_Html = function() { };
dots_Html.__name__ = ["dots","Html"];
dots_Html.parseNodes = function(html) {
	if(!dots_Html.pattern.match(html)) {
		throw new js__$Boot_HaxeError("Invalid pattern \"" + html + "\"");
	}
	var el;
	switch(dots_Html.pattern.matched(1).toLowerCase()) {
	case "tbody":case "thead":
		el = window.document.createElement("table");
		break;
	case "td":case "th":
		el = window.document.createElement("tr");
		break;
	case "tr":
		el = window.document.createElement("tbody");
		break;
	default:
		el = window.document.createElement("div");
	}
	el.innerHTML = html;
	return el.childNodes;
};
dots_Html.parseArray = function(html) {
	var list = dots_Html.parseNodes(html);
	return Array.prototype.slice.call(list,0);
};
dots_Html.parseElement = function(html) {
	return dots_Html.parseNodes(html)[0];
};
dots_Html.parse = function(html) {
	var nodes = dots_Html.parseNodes(html);
	if(nodes.length > 1) {
		var doc = window.document.createDocumentFragment();
		while(nodes.length > 0) doc.appendChild(nodes[0]);
		return doc;
	} else {
		return nodes[0];
	}
};
dots_Html.toString = function(node) {
	if(node.nodeType == 1) {
		return node.outerHTML;
	} else if(node.nodeType == 8) {
		return "<!--" + node.textContent + "-->";
	} else if(node.nodeType == 3) {
		return node.textContent;
	} else {
		throw new thx_Error("invalid nodeType " + node.nodeType,null,{ fileName : "Html.hx", lineNumber : 52, className : "dots.Html", methodName : "toString"});
	}
};
dots_Html.nodeListToArray = function(list) {
	return Array.prototype.slice.call(list,0);
};
var dots_Query = function() { };
dots_Query.__name__ = ["dots","Query"];
dots_Query.find = function(selector,ctx) {
	return (ctx != null?ctx:dots_Query.doc).querySelector(selector);
};
dots_Query.selectNodes = function(selector,ctx) {
	return (ctx != null?ctx:dots_Query.doc).querySelectorAll(selector);
};
dots_Query.select = function(selector,ctx) {
	var list = dots_Query.selectNodes(selector,ctx);
	return Array.prototype.slice.call(list,0);
};
dots_Query.getElementIndex = function(el) {
	var index = 0;
	while(true) {
		el = el.previousElementSibling;
		if(!(null != el)) {
			break;
		}
		++index;
	}
	return index;
};
dots_Query.siblings = function(node) {
	return Array.prototype.slice.call(node.parentNode.children).filter(function(n) {
		return n != node;
	});
};
dots_Query.childrenOf = function(children,parent) {
	return children.filter(function(child) {
		return child.parentElement == parent;
	});
};
var dots_Style = function() { };
dots_Style.__name__ = ["dots","Style"];
dots_Style.style = function(el) {
	return el.ownerDocument.defaultView.getComputedStyle(el,null);
};
var haxe_StackItem = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null?"null":"" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null?"null":"" + file;
		b.b += " line ";
		b.b += line == null?"null":"" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null?"null":"" + cname;
		b.b += ".";
		b.b += meth == null?"null":"" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null?"null":"" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,__class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe","_Int32","Int32_Impl_"];
haxe__$Int32_Int32_$Impl_$.mul = function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
var haxe_Utf8 = function() { };
haxe_Utf8.__name__ = ["haxe","Utf8"];
haxe_Utf8.compare = function(a,b) {
	if(a > b) {
		return 1;
	} else if(a == b) {
		return 0;
	} else {
		return -1;
	}
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
var haxe_ds_BalancedTree = function() {
};
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				return false;
			} else throw(e);
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null?0:node._height);
		} else if(c < 0) {
			return this.balance(this.setLoop(k,v,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.setLoop(k,v,node.right));
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null?0:l._height;
		var hr = r == null?0:r._height;
		if(hl > hr + 2) {
			var tmp;
			var _this = l.left;
			if(_this == null) {
				tmp = 0;
			} else {
				tmp = _this._height;
			}
			var tmp1;
			var _this1 = l.right;
			if(_this1 == null) {
				tmp1 = 0;
			} else {
				tmp1 = _this1._height;
			}
			if(tmp >= tmp1) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var tmp2;
			var _this2 = r.right;
			if(_this2 == null) {
				tmp2 = 0;
			} else {
				tmp2 = _this2._height;
			}
			var tmp3;
			var _this3 = r.left;
			if(_this3 == null) {
				tmp3 = 0;
			} else {
				tmp3 = _this3._height;
			}
			if(tmp2 > tmp3) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr?hl:hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var tmp1;
		var _this = this.left;
		if(_this == null) {
			tmp1 = 0;
		} else {
			tmp1 = _this._height;
		}
		var tmp2;
		var _this1 = this.right;
		if(_this1 == null) {
			tmp2 = 0;
		} else {
			tmp2 = _this1._height;
		}
		if(tmp1 > tmp2) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_Either = { __ename__ : ["haxe","ds","Either"], __constructs__ : ["Left","Right"] };
haxe_ds_Either.Left = function(v) { var $x = ["Left",0,v]; $x.__enum__ = haxe_ds_Either; return $x; };
haxe_ds_Either.Right = function(v) { var $x = ["Right",1,v]; $x.__enum__ = haxe_ds_Either; return $x; };
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = { __ename__ : ["haxe","ds","Option"], __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var lies__$Listener_Listener_$Impl_$ = {};
lies__$Listener_Listener_$Impl_$.__name__ = ["lies","_Listener","Listener_Impl_"];
lies__$Listener_Listener_$Impl_$.fromPingFunction = function(f) {
	return function(_,_1,_2) {
		f();
	};
};
lies__$Listener_Listener_$Impl_$.fromStateFunction = function(f) {
	return function(state,_,_1) {
		f(state);
	};
};
lies__$Listener_Listener_$Impl_$.fromActionFunction = function(f) {
	return function(_,_1,action) {
		f(action);
	};
};
var lies__$Reduced_Reduced_$Impl_$ = {};
lies__$Reduced_Reduced_$Impl_$.__name__ = ["lies","_Reduced","Reduced_Impl_"];
lies__$Reduced_Reduced_$Impl_$.fromState = function(state) {
	return { _0 : state, _1 : []};
};
lies__$Reduced_Reduced_$Impl_$.withAction = function(this1,action) {
	return lies__$Reduced_Reduced_$Impl_$.withActions(this1,[action]);
};
lies__$Reduced_Reduced_$Impl_$.withActions = function(this1,actions) {
	return lies__$Reduced_Reduced_$Impl_$.withFutures(this1,actions.map(thx_promise_Future.value));
};
lies__$Reduced_Reduced_$Impl_$.withFuture = function(this1,action) {
	return lies__$Reduced_Reduced_$Impl_$.withFutures(this1,[action]);
};
lies__$Reduced_Reduced_$Impl_$.withFutures = function(this1,actions) {
	return { _0 : this1._0, _1 : this1._1.concat(actions)};
};
lies__$Reduced_Reduced_$Impl_$.get_state = function(this1) {
	return this1._0;
};
lies__$Reduced_Reduced_$Impl_$.get_actions = function(this1) {
	return this1._1;
};
var lies__$Reducer_Reducer_$Impl_$ = {};
lies__$Reducer_Reducer_$Impl_$.__name__ = ["lies","_Reducer","Reducer_Impl_"];
lies__$Reducer_Reducer_$Impl_$.fromPure = function(f) {
	return function(state,action) {
		return { _0 : f(state,action), _1 : []};
	};
};
lies__$Reducer_Reducer_$Impl_$.compose = function(this1,other) {
	return function(state,action) {
		var t1 = this1(state,action);
		var t2 = other(t1._0,action);
		return { _0 : t2._0, _1 : t1._1.concat(t2._1)};
	};
};
var lies_Store = function(reducer,initialState) {
	this.state = initialState;
	this.reducer = reducer;
	this.listeners = [];
};
lies_Store.__name__ = ["lies","Store"];
lies_Store.create = function(reducer,initialState) {
	return new lies_Store(reducer,initialState);
};
lies_Store.prototype = {
	state: null
	,reducer: null
	,listeners: null
	,dispatch: function(action) {
		if(null == action) {
			throw new thx_Error("cannot dispatch a null action",null,{ fileName : "Store.hx", lineNumber : 20, className : "lies.Store", methodName : "dispatch"});
		}
		var oldState = this.state;
		var value = this.reducer(oldState,action);
		this.state = value._0;
		this.invokeListeners(this.state,oldState,action);
		var _g = 0;
		var _g1 = value._1;
		while(_g < _g1.length) {
			var future = _g1[_g];
			++_g;
			future.then($bind(this,this.dispatch));
		}
	}
	,invokeListeners: function(currentState,oldState,action) {
		var _g = 0;
		var _g1 = this.listeners.slice();
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(currentState,oldState,action);
		}
	}
	,subscribe: function(listener) {
		var _g = this;
		HxOverrides.remove(this.listeners,listener);
		this.listeners.push(listener);
		return function() {
			HxOverrides.remove(_g.listeners,listener);
		};
	}
	,__class__: lies_Store
};
var mtg_client_Main = function() { };
mtg_client_Main.__name__ = ["mtg","client","Main"];
mtg_client_Main.main = function() {
	var apiClient = new mtg_client_api_ApiClient();
	var appState = new mtg_client_state_AppState();
	var appApi = new mtg_client_api_AppApi();
	var store = lies_Store.create(($_=new mtg_client_state_Reducer(apiClient),$bind($_,$_.reduce)),appState);
	var router = mtg_client_Main.setupRouter(store);
	var appComponent = new mtg_client_view_AppView({ api : appApi, state : appState});
	store.subscribe(function(newState,oldState,action) {
		appComponent.update({ state : newState, api : appApi});
	});
	Doom.browser.mount(doom_core_VChildImpl.Comp(appComponent),dots_Query.find("#root"));
	router.listen(true);
};
mtg_client_Main.setupRouter = function(store) {
	var router = new routly_Routly();
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["/"] != null) {
		_g.setReserved("/",function(descriptor1) {
			store.dispatch(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.HomePage(mtg_client_state_Loader.Loading(thx_Nil.nil))));
		});
	} else {
		_g.h["/"] = function(descriptor1) {
			store.dispatch(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.HomePage(mtg_client_state_Loader.Loading(thx_Nil.nil))));
		};
	}
	if(__map_reserved["/cards"] != null) {
		_g.setReserved("/cards",function(descriptor21) {
			var cardQuery1 = mtg_core_model_CardQuery.fromMap(descriptor21.query);
			store.dispatch(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.CardsPage(mtg_client_state_Loader.Loading({ cardQuery : cardQuery1}))));
		});
	} else {
		_g.h["/cards"] = function(descriptor21) {
			var cardQuery1 = mtg_core_model_CardQuery.fromMap(descriptor21.query);
			store.dispatch(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.CardsPage(mtg_client_state_Loader.Loading({ cardQuery : cardQuery1}))));
		};
	}
	if(__map_reserved["/card/:id"] != null) {
		_g.setReserved("/card/:id",function(descriptor31) {
			var tmp;
			var _this1 = descriptor31["arguments"];
			if(__map_reserved.id != null) {
				tmp = _this1.getReserved("id");
			} else {
				tmp = _this1.h["id"];
			}
			var cardId1 = tmp;
			store.dispatch(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.CardPage(mtg_client_state_Loader.Loading({ cardId : cardId1}))));
		});
	} else {
		_g.h["/card/:id"] = function(descriptor31) {
			var tmp1;
			var _this1 = descriptor31["arguments"];
			if(__map_reserved.id != null) {
				tmp1 = _this1.getReserved("id");
			} else {
				tmp1 = _this1.h["id"];
			}
			var cardId1 = tmp1;
			store.dispatch(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.CardPage(mtg_client_state_Loader.Loading({ cardId : cardId1}))));
		};
	}
	router.routes(_g);
	router.unknown(function(descriptor4) {
		store.dispatch(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.ErrorPage({ message : "" + descriptor4.raw + " was not found"})));
	});
	return router;
};
var mtg_client_api_ApiClient = function() {
};
mtg_client_api_ApiClient.__name__ = ["mtg","client","api","ApiClient"];
mtg_client_api_ApiClient.prototype = {
	getCards: function(options) {
		return this.http({ type : "GET", url : "/api/cards?" + options.cardQuery.toQueryString()},this.arrayConverter(mtg_core_model_Card.fromObject));
	}
	,getCard: function(cardId) {
		return this.http({ type : "GET", url : "/api/cards/" + cardId},mtg_core_model_Card.fromObject);
	}
	,http: function(options,converter) {
		if(converter == null) {
			converter = function(data) {
				return data;
			};
		}
		return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
			options.success = function(data1,textStatus,jqXHR) {
				resolve(converter(data1));
			};
			options.error = function(jqXHR1,textStatus1,errorThrown) {
				reject(new thx_Error("API error: " + jqXHR1.status,null,{ fileName : "ApiClient.hx", lineNumber : 35, className : "mtg.client.api.ApiClient", methodName : "http"}));
			};
			$.ajax(options);
		});
	}
	,arrayConverter: function(converter) {
		return function(input) {
			return mtg_core_util_Arrays.map(input,converter);
		};
	}
	,__class__: mtg_client_api_ApiClient
};
var mtg_client_api_AppApi = function() {
};
mtg_client_api_AppApi.__name__ = ["mtg","client","api","AppApi"];
mtg_client_api_AppApi.prototype = {
	__class__: mtg_client_api_AppApi
};
var mtg_client_state_AppAction = { __ename__ : ["mtg","client","state","AppAction"], __constructs__ : ["ShowPage"] };
mtg_client_state_AppAction.ShowPage = function(page) { var $x = ["ShowPage",0,page]; $x.__enum__ = mtg_client_state_AppAction; return $x; };
var mtg_client_state_AppState = function() {
	this.previousPage = haxe_ds_Option.None;
	this.currentPage = mtg_client_state_Page.HomePage(mtg_client_state_Loader.Loading(thx_Nil.nil));
};
mtg_client_state_AppState.__name__ = ["mtg","client","state","AppState"];
mtg_client_state_AppState.prototype = {
	previousPage: null
	,currentPage: null
	,setCurrentPage: function(currentPage) {
		this.previousPage = haxe_ds_Option.Some(this.currentPage);
		this.currentPage = currentPage;
		return this;
	}
	,__class__: mtg_client_state_AppState
};
var mtg_client_state_Loader = { __ename__ : ["mtg","client","state","Loader"], __constructs__ : ["Loading","Loaded","Failed"] };
mtg_client_state_Loader.Loading = function(data) { var $x = ["Loading",0,data]; $x.__enum__ = mtg_client_state_Loader; return $x; };
mtg_client_state_Loader.Loaded = function(data) { var $x = ["Loaded",1,data]; $x.__enum__ = mtg_client_state_Loader; return $x; };
mtg_client_state_Loader.Failed = function(data) { var $x = ["Failed",2,data]; $x.__enum__ = mtg_client_state_Loader; return $x; };
var mtg_client_state_Page = { __ename__ : ["mtg","client","state","Page"], __constructs__ : ["HomePage","CardsPage","CardPage","DecksPage","DeckPage","ErrorPage"] };
mtg_client_state_Page.HomePage = function(data) { var $x = ["HomePage",0,data]; $x.__enum__ = mtg_client_state_Page; return $x; };
mtg_client_state_Page.CardsPage = function(data) { var $x = ["CardsPage",1,data]; $x.__enum__ = mtg_client_state_Page; return $x; };
mtg_client_state_Page.CardPage = function(data) { var $x = ["CardPage",2,data]; $x.__enum__ = mtg_client_state_Page; return $x; };
mtg_client_state_Page.DecksPage = function(data) { var $x = ["DecksPage",3,data]; $x.__enum__ = mtg_client_state_Page; return $x; };
mtg_client_state_Page.DeckPage = function(data) { var $x = ["DeckPage",4,data]; $x.__enum__ = mtg_client_state_Page; return $x; };
mtg_client_state_Page.ErrorPage = function(data) { var $x = ["ErrorPage",5,data]; $x.__enum__ = mtg_client_state_Page; return $x; };
var mtg_client_state_Reducer = function(apiClient) {
	this.apiClient = apiClient;
};
mtg_client_state_Reducer.__name__ = ["mtg","client","state","Reducer"];
mtg_client_state_Reducer.prototype = {
	apiClient: null
	,reduce: function(state,action) {
		return this.showPage(state,action[2]);
	}
	,showPage: function(state,page) {
		state = state.setCurrentPage(page);
		switch(page[1]) {
		case 0:
			return this.showHomePage(state,page[2]);
		case 1:
			return this.showCardsPage(state,page[2]);
		default:
			return { _0 : state, _1 : []};
		}
	}
	,showHomePage: function(state,data) {
		switch(data[1]) {
		case 0:
			return this.showHomePageLoading(state);
		case 1:
			return { _0 : state, _1 : []};
		case 2:
			return { _0 : state, _1 : []};
		}
	}
	,showHomePageLoading: function(state) {
		return lies__$Reduced_Reduced_$Impl_$.withFuture({ _0 : state, _1 : []},thx_promise_Future.value(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.HomePage(mtg_client_state_Loader.Loaded({ decks : [], collections : []})))));
	}
	,showCardsPage: function(state,data) {
		switch(data[1]) {
		case 0:
			return this.showCardsPageLoading(state,data[2]);
		default:
			return { _0 : state, _1 : []};
		}
	}
	,showCardsPageLoading: function(state,data) {
		return lies__$Reduced_Reduced_$Impl_$.withFuture({ _0 : state, _1 : []},thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture(this.apiClient.getCards(data),function(cards) {
			return thx_promise_Future.value(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.CardsPage(mtg_client_state_Loader.Loaded({ cards : cards}))));
		},function(error) {
			return thx_promise_Future.value(mtg_client_state_AppAction.ShowPage(mtg_client_state_Page.ErrorPage({ message : error.message})));
		}));
	}
	,__class__: mtg_client_state_Reducer
};
var mtg_client_view_AppNavView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_AppNavView.__name__ = ["mtg","client","view","AppNavView"];
mtg_client_view_AppNavView.__super__ = doom_html_Component;
mtg_client_view_AppNavView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		var homeLinkClass = "";
		var cardsLinkClass = "";
		var decksLinkClass = "";
		switch(this.props.state.currentPage[1]) {
		case 0:
			homeLinkClass = "active";
			break;
		case 1:
			cardsLinkClass = "active";
			break;
		case 3:
			decksLinkClass = "active";
			break;
		default:
		}
		var _g = new haxe_ds_StringMap();
		var value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui fixed inverted menu");
		if(__map_reserved["class"] != null) {
			_g.setReserved("class",value);
		} else {
			_g.h["class"] = value;
		}
		var _g1 = new haxe_ds_StringMap();
		var value1 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui container");
		if(__map_reserved["class"] != null) {
			_g1.setReserved("class",value1);
		} else {
			_g1.h["class"] = value1;
		}
		var _g2 = new haxe_ds_StringMap();
		var value2 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("header item");
		if(__map_reserved["class"] != null) {
			_g2.setReserved("class",value2);
		} else {
			_g2.h["class"] = value2;
		}
		var tmp = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g2,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("M.T.G."))])));
		var _g3 = new haxe_ds_StringMap();
		var value3 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("" + homeLinkClass + " item");
		if(__map_reserved["class"] != null) {
			_g3.setReserved("class",value3);
		} else {
			_g3.h["class"] = value3;
		}
		var value4 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("/#");
		if(__map_reserved.href != null) {
			_g3.setReserved("href",value4);
		} else {
			_g3.h["href"] = value4;
		}
		var tmp1 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("a",_g3,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Home"))])));
		var _g4 = new haxe_ds_StringMap();
		var value5 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("" + cardsLinkClass + " item");
		if(__map_reserved["class"] != null) {
			_g4.setReserved("class",value5);
		} else {
			_g4.h["class"] = value5;
		}
		var value6 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("/#/cards");
		if(__map_reserved.href != null) {
			_g4.setReserved("href",value6);
		} else {
			_g4.h["href"] = value6;
		}
		var tmp2 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("a",_g4,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Cards"))])));
		var _g5 = new haxe_ds_StringMap();
		var value7 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("" + decksLinkClass + " item");
		if(__map_reserved["class"] != null) {
			_g5.setReserved("class",value7);
		} else {
			_g5.h["class"] = value7;
		}
		var value8 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("/#/decks");
		if(__map_reserved.href != null) {
			_g5.setReserved("href",value8);
		} else {
			_g5.h["href"] = value8;
		}
		return doom_core__$VNode_VNode_$Impl_$.el("div",_g,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g1,doom_core__$VChildren_VChildren_$Impl_$.children([tmp,tmp1,tmp2,doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("a",_g5,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Decks"))])))])))]));
	}
	,__class__: mtg_client_view_AppNavView
});
var mtg_client_view_AppView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_AppView.__name__ = ["mtg","client","view","AppView"];
mtg_client_view_AppView.__super__ = doom_html_Component;
mtg_client_view_AppView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		var tmp = this.navMenu();
		var _g8 = new haxe_ds_StringMap();
		var value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui main container");
		if(__map_reserved["class"] != null) {
			_g8.setReserved("class",value);
		} else {
			_g8.h["class"] = value;
		}
		var tmp1 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g8,doom_core__$VChildren_VChildren_$Impl_$.children([this.contentView()])));
		var _g9 = new haxe_ds_StringMap();
		var value1 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui inverted vertical footer segment");
		if(__map_reserved["class"] != null) {
			_g9.setReserved("class",value1);
		} else {
			_g9.h["class"] = value1;
		}
		var _g10 = new haxe_ds_StringMap();
		var value2 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui center aligned container");
		if(__map_reserved["class"] != null) {
			_g10.setReserved("class",value2);
		} else {
			_g10.h["class"] = value2;
		}
		var _g11 = new haxe_ds_StringMap();
		var value3 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui horizontal inverted small divided link list");
		if(__map_reserved["class"] != null) {
			_g11.setReserved("class",value3);
		} else {
			_g11.h["class"] = value3;
		}
		var _g12 = new haxe_ds_StringMap();
		var value4 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("item");
		if(__map_reserved["class"] != null) {
			_g12.setReserved("class",value4);
		} else {
			_g12.h["class"] = value4;
		}
		var value5 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("/#/");
		if(__map_reserved.href != null) {
			_g12.setReserved("href",value5);
		} else {
			_g12.h["href"] = value5;
		}
		var tmp2 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("a",_g12,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Home"))])));
		var _g13 = new haxe_ds_StringMap();
		var value6 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("item");
		if(__map_reserved["class"] != null) {
			_g13.setReserved("class",value6);
		} else {
			_g13.h["class"] = value6;
		}
		var value7 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("/#/sets");
		if(__map_reserved.href != null) {
			_g13.setReserved("href",value7);
		} else {
			_g13.h["href"] = value7;
		}
		var tmp3 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("a",_g13,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Sets"))])));
		var _g14 = new haxe_ds_StringMap();
		var value8 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("item");
		if(__map_reserved["class"] != null) {
			_g14.setReserved("class",value8);
		} else {
			_g14.h["class"] = value8;
		}
		var value9 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("/#/cards");
		if(__map_reserved.href != null) {
			_g14.setReserved("href",value9);
		} else {
			_g14.h["href"] = value9;
		}
		var tmp4 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("a",_g14,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Cards"))])));
		var _g15 = new haxe_ds_StringMap();
		var value10 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("item");
		if(__map_reserved["class"] != null) {
			_g15.setReserved("class",value10);
		} else {
			_g15.h["class"] = value10;
		}
		var value11 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("/#/cards");
		if(__map_reserved.href != null) {
			_g15.setReserved("href",value11);
		} else {
			_g15.h["href"] = value11;
		}
		return doom_core__$VNode_VNode_$Impl_$.el("div",null,doom_core__$VChildren_VChildren_$Impl_$.children([tmp,tmp1,doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g9,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g10,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g11,doom_core__$VChildren_VChildren_$Impl_$.children([tmp2,tmp3,tmp4,doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("a",_g15,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Decks"))])))])))])))])))]));
	}
	,willMount: function() {
		console.log("AppView.willMount");
	}
	,navMenu: function() {
		return doom_core_VChildImpl.Comp(new mtg_client_view_AppNavView({ state : this.props.state}));
	}
	,contentView: function() {
		var _g = this.props.state.currentPage;
		switch(_g[1]) {
		case 0:
			return doom_core_VChildImpl.Comp(new mtg_client_view_HomePageView({ state : _g[2], api : this.props.api}));
		case 1:
			return doom_core_VChildImpl.Comp(new mtg_client_view_CardsPageView({ state : _g[2], api : this.props.api}));
		case 2:
			return doom_core_VChildImpl.Comp(new mtg_client_view_CardPageView({ state : _g[2], api : this.props.api}));
		case 3:
			return doom_core_VChildImpl.Comp(new mtg_client_view_DecksPageView({ state : _g[2], api : this.props.api}));
		case 4:
			return doom_core_VChildImpl.Comp(new mtg_client_view_DeckPageView({ state : _g[2], api : this.props.api}));
		case 5:
			return doom_core_VChildImpl.Comp(new mtg_client_view_ErrorPageView({ state : _g[2], api : this.props.api}));
		}
	}
	,__class__: mtg_client_view_AppView
});
var mtg_client_view_CardPageView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_CardPageView.__name__ = ["mtg","client","view","CardPageView"];
mtg_client_view_CardPageView.__super__ = doom_html_Component;
mtg_client_view_CardPageView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		return doom_core__$VNode_VNode_$Impl_$.el("h1",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("card page"))]));
	}
	,__class__: mtg_client_view_CardPageView
});
var mtg_client_view_CardTableView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_CardTableView.__name__ = ["mtg","client","view","CardTableView"];
mtg_client_view_CardTableView.__super__ = doom_html_Component;
mtg_client_view_CardTableView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		console.log("CardTableView.render");
		var _g = new haxe_ds_StringMap();
		var value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("card-table-container");
		if(__map_reserved["class"] != null) {
			_g.setReserved("class",value);
		} else {
			_g.h["class"] = value;
		}
		var _g1 = new haxe_ds_StringMap();
		var value1 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui form");
		if(__map_reserved["class"] != null) {
			_g1.setReserved("class",value1);
		} else {
			_g1.h["class"] = value1;
		}
		var tmp = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("label",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Name"))])));
		var _g2 = new haxe_ds_StringMap();
		var value2 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("inline fields");
		if(__map_reserved["class"] != null) {
			_g2.setReserved("class",value2);
		} else {
			_g2.h["class"] = value2;
		}
		var _g3 = new haxe_ds_StringMap();
		var value3 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("eight wide field");
		if(__map_reserved["class"] != null) {
			_g3.setReserved("class",value3);
		} else {
			_g3.h["class"] = value3;
		}
		var _g4 = new haxe_ds_StringMap();
		var value4 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("text");
		if(__map_reserved.type != null) {
			_g4.setReserved("type",value4);
		} else {
			_g4.h["type"] = value4;
		}
		var value5 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("Card name search");
		if(__map_reserved.placeholder != null) {
			_g4.setReserved("placeholder",value5);
		} else {
			_g4.h["placeholder"] = value5;
		}
		var tmp1 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g3,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("input",_g4,null))])));
		var _g5 = new haxe_ds_StringMap();
		var value6 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("field");
		if(__map_reserved["class"] != null) {
			_g5.setReserved("class",value6);
		} else {
			_g5.h["class"] = value6;
		}
		var _g6 = new haxe_ds_StringMap();
		var value7 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui radio checkbox");
		if(__map_reserved["class"] != null) {
			_g6.setReserved("class",value7);
		} else {
			_g6.h["class"] = value7;
		}
		var _g7 = new haxe_ds_StringMap();
		var value8 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("radio");
		if(__map_reserved.type != null) {
			_g7.setReserved("type",value8);
		} else {
			_g7.h["type"] = value8;
		}
		var value9 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("name-query");
		if(__map_reserved.name != null) {
			_g7.setReserved("name",value9);
		} else {
			_g7.h["name"] = value9;
		}
		var value10 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("0");
		if(__map_reserved.tabindex != null) {
			_g7.setReserved("tabindex",value10);
		} else {
			_g7.h["tabindex"] = value10;
		}
		var value11 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("hidden");
		if(__map_reserved["class"] != null) {
			_g7.setReserved("class",value11);
		} else {
			_g7.h["class"] = value11;
		}
		var tmp2 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g5,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g6,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("input",_g7,null)),doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("label",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Exact match"))])))])))])));
		var _g8 = new haxe_ds_StringMap();
		var value12 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("field");
		if(__map_reserved["class"] != null) {
			_g8.setReserved("class",value12);
		} else {
			_g8.h["class"] = value12;
		}
		var _g9 = new haxe_ds_StringMap();
		var value13 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui radio checkbox");
		if(__map_reserved["class"] != null) {
			_g9.setReserved("class",value13);
		} else {
			_g9.h["class"] = value13;
		}
		var _g10 = new haxe_ds_StringMap();
		var value14 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("radio");
		if(__map_reserved.type != null) {
			_g10.setReserved("type",value14);
		} else {
			_g10.h["type"] = value14;
		}
		var value15 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("name-query");
		if(__map_reserved.name != null) {
			_g10.setReserved("name",value15);
		} else {
			_g10.h["name"] = value15;
		}
		var value16 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("0");
		if(__map_reserved.tabindex != null) {
			_g10.setReserved("tabindex",value16);
		} else {
			_g10.h["tabindex"] = value16;
		}
		var value17 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("hidden");
		if(__map_reserved["class"] != null) {
			_g10.setReserved("class",value17);
		} else {
			_g10.h["class"] = value17;
		}
		var tmp3 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g8,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g9,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("input",_g10,null)),doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("label",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Starts with"))])))])))])));
		var _g11 = new haxe_ds_StringMap();
		var value18 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("field");
		if(__map_reserved["class"] != null) {
			_g11.setReserved("class",value18);
		} else {
			_g11.h["class"] = value18;
		}
		var _g12 = new haxe_ds_StringMap();
		var value19 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui radio checkbox");
		if(__map_reserved["class"] != null) {
			_g12.setReserved("class",value19);
		} else {
			_g12.h["class"] = value19;
		}
		var _g13 = new haxe_ds_StringMap();
		var value20 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("radio");
		if(__map_reserved.type != null) {
			_g13.setReserved("type",value20);
		} else {
			_g13.h["type"] = value20;
		}
		var value21 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("name-query");
		if(__map_reserved.name != null) {
			_g13.setReserved("name",value21);
		} else {
			_g13.h["name"] = value21;
		}
		var value22 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("0");
		if(__map_reserved.tabindex != null) {
			_g13.setReserved("tabindex",value22);
		} else {
			_g13.h["tabindex"] = value22;
		}
		var value23 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("hidden");
		if(__map_reserved["class"] != null) {
			_g13.setReserved("class",value23);
		} else {
			_g13.h["class"] = value23;
		}
		var tmp4 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g11,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g12,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("input",_g13,null)),doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("label",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Any words"))])))])))])));
		var _g14 = new haxe_ds_StringMap();
		var value24 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("field");
		if(__map_reserved["class"] != null) {
			_g14.setReserved("class",value24);
		} else {
			_g14.h["class"] = value24;
		}
		var _g15 = new haxe_ds_StringMap();
		var value25 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui radio checkbox");
		if(__map_reserved["class"] != null) {
			_g15.setReserved("class",value25);
		} else {
			_g15.h["class"] = value25;
		}
		var _g16 = new haxe_ds_StringMap();
		var value26 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("radio");
		if(__map_reserved.type != null) {
			_g16.setReserved("type",value26);
		} else {
			_g16.h["type"] = value26;
		}
		var value27 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("name-query");
		if(__map_reserved.name != null) {
			_g16.setReserved("name",value27);
		} else {
			_g16.h["name"] = value27;
		}
		var value28 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("0");
		if(__map_reserved.tabindex != null) {
			_g16.setReserved("tabindex",value28);
		} else {
			_g16.h["tabindex"] = value28;
		}
		var value29 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("hidden");
		if(__map_reserved["class"] != null) {
			_g16.setReserved("class",value29);
		} else {
			_g16.h["class"] = value29;
		}
		var tmp5 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("form",_g1,doom_core__$VChildren_VChildren_$Impl_$.children([tmp,doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g2,doom_core__$VChildren_VChildren_$Impl_$.children([tmp1,tmp2,tmp3,tmp4,doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g14,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g15,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("input",_g16,null)),doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("label",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("All words"))])))])))])))])))])));
		var _g17 = new haxe_ds_StringMap();
		var value30 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("ui selectable celled table card-table");
		if(__map_reserved["class"] != null) {
			_g17.setReserved("class",value30);
		} else {
			_g17.h["class"] = value30;
		}
		var _g42 = new haxe_ds_StringMap();
		var value31 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("image");
		if(__map_reserved["class"] != null) {
			_g42.setReserved("class",value31);
		} else {
			_g42.h["class"] = value31;
		}
		var tmp6 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("th",_g42,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Image"))])));
		var _g43 = new haxe_ds_StringMap();
		var value32 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("cost");
		if(__map_reserved["class"] != null) {
			_g43.setReserved("class",value32);
		} else {
			_g43.h["class"] = value32;
		}
		var tmp7 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("th",_g43,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Cost"))])));
		var _g44 = new haxe_ds_StringMap();
		var value33 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("name");
		if(__map_reserved["class"] != null) {
			_g44.setReserved("class",value33);
		} else {
			_g44.h["class"] = value33;
		}
		var tmp8 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("th",_g44,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Name"))])));
		var _g45 = new haxe_ds_StringMap();
		var value34 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("type");
		if(__map_reserved["class"] != null) {
			_g45.setReserved("class",value34);
		} else {
			_g45.h["class"] = value34;
		}
		var tmp9 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("th",_g45,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Type"))])));
		var _g46 = new haxe_ds_StringMap();
		var value35 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("power-toughness");
		if(__map_reserved["class"] != null) {
			_g46.setReserved("class",value35);
		} else {
			_g46.h["class"] = value35;
		}
		var tmp10 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("th",_g46,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("P/T"))])));
		var _g47 = new haxe_ds_StringMap();
		var value36 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("text");
		if(__map_reserved["class"] != null) {
			_g47.setReserved("class",value36);
		} else {
			_g47.h["class"] = value36;
		}
		var tmp11 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("th",_g47,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Card text"))])));
		var _g48 = new haxe_ds_StringMap();
		var value37 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("flavor");
		if(__map_reserved["class"] != null) {
			_g48.setReserved("class",value37);
		} else {
			_g48.h["class"] = value37;
		}
		var tmp12 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("th",_g48,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Flavor text"))])));
		var _g49 = new haxe_ds_StringMap();
		var value38 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("rarity");
		if(__map_reserved["class"] != null) {
			_g49.setReserved("class",value38);
		} else {
			_g49.h["class"] = value38;
		}
		return doom_core__$VNode_VNode_$Impl_$.el("div",_g,doom_core__$VChildren_VChildren_$Impl_$.children([tmp5,doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("table",_g17,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("thead",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("tr",null,doom_core__$VChildren_VChildren_$Impl_$.children([tmp6,tmp7,tmp8,tmp9,tmp10,tmp11,tmp12,doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("th",_g49,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Rarity"))])))])))]))),doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("tbody",null,doom_core__$VChildren_VChildren_$Impl_$.children(this.props.cards.map(function(card) {
			var _g59 = new haxe_ds_StringMap();
			var value39 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("image");
			if(__map_reserved["class"] != null) {
				_g59.setReserved("class",value39);
			} else {
				_g59.h["class"] = value39;
			}
			var _g60 = new haxe_ds_StringMap();
			var value40 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString(card.getImageUrl());
			if(__map_reserved.src != null) {
				_g60.setReserved("src",value40);
			} else {
				_g60.h["src"] = value40;
			}
			var value41 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString(card.name);
			if(__map_reserved.alt != null) {
				_g60.setReserved("alt",value41);
			} else {
				_g60.h["alt"] = value41;
			}
			var tmp13 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("td",_g59,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("img",_g60,null))])));
			var _g61 = new haxe_ds_StringMap();
			var value42 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("cost");
			if(__map_reserved["class"] != null) {
				_g61.setReserved("class",value42);
			} else {
				_g61.h["class"] = value42;
			}
			var tmp14 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("td",_g61,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Comp(new mtg_client_view_CardTextView({ text : card.getManaCostAndCmc()}))])));
			var _g62 = new haxe_ds_StringMap();
			var value43 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("name");
			if(__map_reserved["class"] != null) {
				_g62.setReserved("class",value43);
			} else {
				_g62.h["class"] = value43;
			}
			var tmp15 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("td",_g62,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text(card.name))])));
			var _g63 = new haxe_ds_StringMap();
			var value44 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("type");
			if(__map_reserved["class"] != null) {
				_g63.setReserved("class",value44);
			} else {
				_g63.h["class"] = value44;
			}
			var tmp16 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("td",_g63,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text(thx_Strings.capitalizeWords(card.type)))])));
			var _g64 = new haxe_ds_StringMap();
			var value45 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("power-toughness");
			if(__map_reserved["class"] != null) {
				_g64.setReserved("class",value45);
			} else {
				_g64.h["class"] = value45;
			}
			var tmp17 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("td",_g64,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text(card.getPowerToughness()))])));
			var _g65 = new haxe_ds_StringMap();
			var value46 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("text");
			if(__map_reserved["class"] != null) {
				_g65.setReserved("class",value46);
			} else {
				_g65.h["class"] = value46;
			}
			var tmp18 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("td",_g65,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Comp(new mtg_client_view_CardTextView({ text : card.text}))])));
			var _g66 = new haxe_ds_StringMap();
			var value47 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("flavor");
			if(__map_reserved["class"] != null) {
				_g66.setReserved("class",value47);
			} else {
				_g66.h["class"] = value47;
			}
			var tmp19 = doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("td",_g66,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Comp(new mtg_client_view_CardTextView({ text : card.flavor}))])));
			var _g67 = new haxe_ds_StringMap();
			var value48 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("rarity");
			if(__map_reserved["class"] != null) {
				_g67.setReserved("class",value48);
			} else {
				_g67.h["class"] = value48;
			}
			return doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("tr",null,doom_core__$VChildren_VChildren_$Impl_$.children([tmp13,tmp14,tmp15,tmp16,tmp17,tmp18,tmp19,doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("td",_g67,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text(thx_Strings.capitalizeWords(card.rarity)))])))])));
		})))),doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("tfoot",null,doom_core__$VChildren_VChildren_$Impl_$.children([])))])))]));
	}
	,willMount: function() {
		console.log("CardTableView.willMount");
	}
	,didMount: function() {
		console.log("CardTableView.didMount");
		$(this.node).find(".ui.radio.checkbox").checkbox();
	}
	,willUpdate: function() {
		console.log("CardTableView.willUpdate");
	}
	,didUpdate: function() {
		console.log("CardTableView.didUpdate");
	}
	,willUnmount: function() {
		console.log("CardTableView.willUnmount");
	}
	,didUnmount: function() {
		console.log("CardTableView.didUnmount");
	}
	,shouldRender: function() {
		return true;
	}
	,onSearch: function() {
	}
	,__class__: mtg_client_view_CardTableView
});
var mtg_client_view_CardTextView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_CardTextView.__name__ = ["mtg","client","view","CardTextView"];
mtg_client_view_CardTextView.__super__ = doom_html_Component;
mtg_client_view_CardTextView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		var tokens = mtg_core_util_CardTextParser.parse(this.props.text);
		var _g = new haxe_ds_StringMap();
		var value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("card-text-container");
		if(__map_reserved["class"] != null) {
			_g.setReserved("class",value);
		} else {
			_g.h["class"] = value;
		}
		return doom_core__$VNode_VNode_$Impl_$.el("span",_g,doom_core__$VChildren_VChildren_$Impl_$.children(tokens.map(function(token) {
			switch(token[1]) {
			case 0:
				var text = token[2];
				var _g1 = new haxe_ds_StringMap();
				var value1 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("card-text");
				if(__map_reserved["class"] != null) {
					_g1.setReserved("class",value1);
				} else {
					_g1.h["class"] = value1;
				}
				return doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("span",_g1,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text(text))])));
			case 1:
				return doom_core_VChildImpl.Comp(new mtg_client_view_SymbolView({ symbol : token[2]}));
			case 2:
				var _g11 = new haxe_ds_StringMap();
				var value2 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("card-text-break");
				if(__map_reserved["class"] != null) {
					_g11.setReserved("class",value2);
				} else {
					_g11.h["class"] = value2;
				}
				return doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("div",_g11,null));
			}
		})));
	}
	,__class__: mtg_client_view_CardTextView
});
var mtg_client_view_CardsPageView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_CardsPageView.__name__ = ["mtg","client","view","CardsPageView"];
mtg_client_view_CardsPageView.__super__ = doom_html_Component;
mtg_client_view_CardsPageView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		console.log("CardsPageView.render");
		var _g = this.props.state;
		switch(_g[1]) {
		case 0:
			return this.renderLoading();
		case 1:
			return this.renderLoaded(_g[2]);
		case 2:
			return this.renderFailed(_g[2]);
		}
	}
	,willMount: function() {
		doom_html_Component.prototype.willMount.call(this);
		console.log("CardsPageView.willMount");
	}
	,didMount: function() {
		doom_html_Component.prototype.didMount.call(this);
		console.log("CardsPageView.didMount");
	}
	,willUpdate: function() {
		console.log("CardsPageView.willUpdate");
	}
	,didUpdate: function() {
		console.log("CardsPageView.didUpdate");
	}
	,willUnmount: function() {
		console.log("CardsPageView.willUnmount");
	}
	,didUnmount: function() {
		console.log("CardsPageView.didUnmount");
	}
	,renderLoading: function() {
		return doom_core__$VNode_VNode_$Impl_$.el("div",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("loading..."))]));
	}
	,renderLoaded: function(data) {
		return doom_core__$VNode_VNode_$Impl_$.el("div",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core__$VNode_VNode_$Impl_$.el("h1",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Cards"))]))),new mtg_client_view_CardTableView({ cards : data.cards}).asChild()]));
	}
	,renderFailed: function(data) {
		return doom_core__$VNode_VNode_$Impl_$.el("h1",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("failed to load cards: " + data.message))]));
	}
	,__class__: mtg_client_view_CardsPageView
});
var mtg_client_view_DeckPageView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_DeckPageView.__name__ = ["mtg","client","view","DeckPageView"];
mtg_client_view_DeckPageView.__super__ = doom_html_Component;
mtg_client_view_DeckPageView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		return doom_core__$VNode_VNode_$Impl_$.el("h1",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("deck page"))]));
	}
	,__class__: mtg_client_view_DeckPageView
});
var mtg_client_view_DecksPageView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_DecksPageView.__name__ = ["mtg","client","view","DecksPageView"];
mtg_client_view_DecksPageView.__super__ = doom_html_Component;
mtg_client_view_DecksPageView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		return doom_core__$VNode_VNode_$Impl_$.el("h1",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("decks page"))]));
	}
	,__class__: mtg_client_view_DecksPageView
});
var mtg_client_view_ErrorPageView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_ErrorPageView.__name__ = ["mtg","client","view","ErrorPageView"];
mtg_client_view_ErrorPageView.__super__ = doom_html_Component;
mtg_client_view_ErrorPageView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		return doom_core__$VNode_VNode_$Impl_$.el("h1",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("Error: " + this.props.state.message))]));
	}
	,__class__: mtg_client_view_ErrorPageView
});
var mtg_client_view_HomePageView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_HomePageView.__name__ = ["mtg","client","view","HomePageView"];
mtg_client_view_HomePageView.__super__ = doom_html_Component;
mtg_client_view_HomePageView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		return doom_core__$VNode_VNode_$Impl_$.el("h1",null,doom_core__$VChildren_VChildren_$Impl_$.children([doom_core_VChildImpl.Node(doom_core_VNodeImpl.Text("home page"))]));
	}
	,__class__: mtg_client_view_HomePageView
});
var mtg_client_view_SymbolView = function(props,children) {
	doom_html_Component.call(this,props,children);
};
mtg_client_view_SymbolView.__name__ = ["mtg","client","view","SymbolView"];
mtg_client_view_SymbolView.__super__ = doom_html_Component;
mtg_client_view_SymbolView.prototype = $extend(doom_html_Component.prototype,{
	render: function() {
		var fileName;
		switch(this.props.symbol) {
		case "{C}":
			fileName = "C.svg";
			break;
		case "{0}":
			fileName = "0.svg";
			break;
		case "{1}":
			fileName = "1.svg";
			break;
		case "{2}":
			fileName = "2.svg";
			break;
		case "{3}":
			fileName = "3.svg";
			break;
		case "{4}":
			fileName = "4.svg";
			break;
		case "{5}":
			fileName = "5.svg";
			break;
		case "{6}":
			fileName = "6.svg";
			break;
		case "{7}":
			fileName = "7.svg";
			break;
		case "{8}":
			fileName = "8.svg";
			break;
		case "{9}":
			fileName = "9.svg";
			break;
		case "{10}":
			fileName = "10.svg";
			break;
		case "{11}":
			fileName = "11.svg";
			break;
		case "{12}":
			fileName = "12.svg";
			break;
		case "{13}":
			fileName = "13.svg";
			break;
		case "{14}":
			fileName = "14.svg";
			break;
		case "{15}":
			fileName = "15.svg";
			break;
		case "{16}":
			fileName = "16.svg";
			break;
		case "{17}":
			fileName = "17.svg";
			break;
		case "{18}":
			fileName = "18.svg";
			break;
		case "{19}":
			fileName = "19.svg";
			break;
		case "{20}":
			fileName = "20.svg";
			break;
		case "{100}":
			fileName = "100.svg";
			break;
		case "{1000000}":
			fileName = "1000000.svg";
			break;
		case "{1/2}":
			fileName = "half.svg";
			break;
		case "{∞}":
			fileName = "infinity.png";
			break;
		case "{W}":
			fileName = "W.svg";
			break;
		case "{U}":
			fileName = "U.svg";
			break;
		case "{B}":
			fileName = "B.svg";
			break;
		case "{R}":
			fileName = "R.svg";
			break;
		case "{G}":
			fileName = "G.svg";
			break;
		case "{W 1/2}":
			fileName = "Whalf.svg";
			break;
		case "{U 1/2}":
			fileName = "Uhalf.svg";
			break;
		case "{B 1/2}":
			fileName = "Bhalf.svg";
			break;
		case "{R 1/2}":
			fileName = "Rhalf.svg";
			break;
		case "{G 1/2}":
			fileName = "Ghalf.svg";
			break;
		case "{P}":
			fileName = "P.svg";
			break;
		case "{W/P}":
			fileName = "WP.svg";
			break;
		case "{U/P}":
			fileName = "UP.svg";
			break;
		case "{B/P}":
			fileName = "BP.svg";
			break;
		case "{R/P}":
			fileName = "RP.svg";
			break;
		case "{G/P}":
			fileName = "GP.svg";
			break;
		case "{W/U}":
			fileName = "WU.svg";
			break;
		case "{W/B}":
			fileName = "WB.svg";
			break;
		case "{U/B}":
			fileName = "UB.svg";
			break;
		case "{U/R}":
			fileName = "UR.svg";
			break;
		case "{B/R}":
			fileName = "BR.svg";
			break;
		case "{B/G}":
			fileName = "BG.svg";
			break;
		case "{R/G}":
			fileName = "RG.svg";
			break;
		case "{R/W}":
			fileName = "RW.svg";
			break;
		case "{G/W}":
			fileName = "GW.svg";
			break;
		case "{G/U}":
			fileName = "GU.svg";
			break;
		case "{2/W}":
			fileName = "2W.svg";
			break;
		case "{2/U}":
			fileName = "2U.svg";
			break;
		case "{2/B}":
			fileName = "2B.svg";
			break;
		case "{2/R}":
			fileName = "2R.svg";
			break;
		case "{2/G}":
			fileName = "2G.svg";
			break;
		case "{S}":
			fileName = "S.svg";
			break;
		case "{X}":
			fileName = "X.svg";
			break;
		case "{Y}":
			fileName = "Y.svg";
			break;
		case "{Z}":
			fileName = "Z.svg";
			break;
		case "{T}":
			fileName = "T.svg";
			break;
		case "{Q}":
			fileName = "Q.svg";
			break;
		}
		var src = "/assets/symbols/" + fileName;
		var alt = this.props.symbol;
		var _g = new haxe_ds_StringMap();
		var value = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString("symbol");
		if(__map_reserved["class"] != null) {
			_g.setReserved("class",value);
		} else {
			_g.h["class"] = value;
		}
		var value1 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString(src);
		if(__map_reserved.src != null) {
			_g.setReserved("src",value1);
		} else {
			_g.h["src"] = value1;
		}
		var value2 = doom_core__$AttributeValue_AttributeValue_$Impl_$.fromString(alt);
		if(__map_reserved.alt != null) {
			_g.setReserved("alt",value2);
		} else {
			_g.h["alt"] = value2;
		}
		return doom_core__$VNode_VNode_$Impl_$.el("img",_g,null);
	}
	,__class__: mtg_client_view_SymbolView
});
var mtg_core_model_Card = function(data) {
	this.latest = false;
	this.legalities = [];
	this.printings = [];
	this.foreignNames = [];
	this.rulings = [];
	this.starter = false;
	this.reserved = false;
	this.timeshifted = false;
	this.variations = [];
	this.subtypes = [];
	this.types = [];
	this.supertypes = [];
	this.colorIdentity = [];
	this.colors = [];
	this.cmc = 0;
	this.names = [];
	this.id = data.id;
	if(this.id == null) {
		throw new js__$Boot_HaxeError("Field " + "Card" + "." + "id" + " was null.");
	}
	this.layout = data.layout;
	if(this.layout == null) {
		throw new js__$Boot_HaxeError("Field " + "Card" + "." + "layout" + " was null.");
	}
	this.name = data.name;
	if(this.name == null) {
		throw new js__$Boot_HaxeError("Field " + "Card" + "." + "name" + " was null.");
	}
	this.names = data.names != null?data.names:[];
	this.manaCost = data.manaCost != null?data.manaCost:null;
	this.cmc = data.cmc != null?data.cmc:0;
	this.colors = data.colors != null?data.colors:[];
	this.colorIdentity = data.colorIdentity != null?data.colorIdentity:[];
	this.type = data.type;
	if(this.type == null) {
		throw new js__$Boot_HaxeError("Field " + "Card" + "." + "type" + " was null.");
	}
	this.supertypes = data.supertypes != null?data.supertypes:[];
	this.types = data.types != null?data.types:[];
	this.subtypes = data.subtypes != null?data.subtypes:[];
	this.rarity = data.rarity;
	if(this.rarity == null) {
		throw new js__$Boot_HaxeError("Field " + "Card" + "." + "rarity" + " was null.");
	}
	this.text = data.text != null?data.text:null;
	this.flavor = data.flavor != null?data.flavor:null;
	this.artist = data.artist != null?data.artist:null;
	this.number = data.number != null?data.number:null;
	this.mciNumber = data.mciNumber != null?data.mciNumber:null;
	this.power = data.power != null?data.power:null;
	this.toughness = data.toughness != null?data.toughness:null;
	this.loyalty = data.loyalty != null?data.loyalty:null;
	this.multiverseid = data.multiverseid;
	if(this.multiverseid == null) {
		throw new js__$Boot_HaxeError("Field " + "Card" + "." + "multiverseid" + " was null.");
	}
	this.variations = data.variations != null?data.variations:[];
	this.imageName = data.imageName;
	if(this.imageName == null) {
		throw new js__$Boot_HaxeError("Field " + "Card" + "." + "imageName" + " was null.");
	}
	this.watermark = data.watermark != null?data.watermark:null;
	this.border = data.border != null?data.border:null;
	this.timeshifted = data.timeshifted != null && data.timeshifted;
	this.hand = data.hand != null?data.hand:null;
	this.life = data.life != null?data.life:null;
	this.reserved = data.reserved != null && data.reserved;
	this.releaseDate = data.releaseDate;
	if(this.releaseDate == null) {
		throw new js__$Boot_HaxeError("Field " + "Card" + "." + "releaseDate" + " was null.");
	}
	this.starter = data.starter != null && data.starter;
	this.rulings = data.rulings != null?data.rulings:[];
	this.foreignNames = data.foreignNames != null?data.foreignNames:[];
	this.printings = data.printings != null?data.printings:[];
	this.originalText = data.originalText != null?data.originalText:null;
	this.originalType = data.originalType != null?data.originalType:null;
	this.legalities = data.legalities != null?data.legalities:[];
	this.source = data.source != null?data.source:null;
	this.latest = data.latest != null && data.latest;
};
mtg_core_model_Card.__name__ = ["mtg","core","model","Card"];
mtg_core_model_Card.__interfaces__ = [dataclass_DataClass];
mtg_core_model_Card.fromObject = function(data) {
	return new mtg_core_model_Card(data);
};
mtg_core_model_Card.prototype = {
	id: null
	,layout: null
	,name: null
	,names: null
	,manaCost: null
	,cmc: null
	,colors: null
	,colorIdentity: null
	,type: null
	,supertypes: null
	,types: null
	,subtypes: null
	,rarity: null
	,text: null
	,flavor: null
	,artist: null
	,number: null
	,mciNumber: null
	,power: null
	,toughness: null
	,loyalty: null
	,multiverseid: null
	,variations: null
	,imageName: null
	,watermark: null
	,border: null
	,timeshifted: null
	,hand: null
	,life: null
	,reserved: null
	,releaseDate: null
	,starter: null
	,rulings: null
	,foreignNames: null
	,printings: null
	,originalText: null
	,originalType: null
	,legalities: null
	,source: null
	,latest: null
	,getImageUrl: function(imageId) {
		if(imageId == null) {
			imageId = this.multiverseid;
		}
		return "https://image.deckbrew.com/mtg/multiverseid/" + imageId + ".jpg";
	}
	,getVariationImageUrls: function() {
		return this.variations.map($bind(this,this.getImageUrl));
	}
	,getManaCostAndCmc: function() {
		if(this.manaCost == null) {
			return "-";
		} else {
			return "" + this.manaCost + " (" + this.cmc + ")";
		}
	}
	,getPowerToughness: function() {
		if(this.power == null || this.toughness == null) {
			return "-";
		} else {
			return "" + this.power + "/" + this.toughness;
		}
	}
	,__class__: mtg_core_model_Card
};
var mtg_core_model_TextQuery = { __ename__ : ["mtg","core","model","TextQuery"], __constructs__ : ["ExactMatch","StartsWith","EndsWith","ContainsAll","ContainsAny"] };
mtg_core_model_TextQuery.ExactMatch = function(text) { var $x = ["ExactMatch",0,text]; $x.__enum__ = mtg_core_model_TextQuery; return $x; };
mtg_core_model_TextQuery.StartsWith = function(text) { var $x = ["StartsWith",1,text]; $x.__enum__ = mtg_core_model_TextQuery; return $x; };
mtg_core_model_TextQuery.EndsWith = function(text) { var $x = ["EndsWith",2,text]; $x.__enum__ = mtg_core_model_TextQuery; return $x; };
mtg_core_model_TextQuery.ContainsAll = function(text) { var $x = ["ContainsAll",3,text]; $x.__enum__ = mtg_core_model_TextQuery; return $x; };
mtg_core_model_TextQuery.ContainsAny = function(text) { var $x = ["ContainsAny",4,text]; $x.__enum__ = mtg_core_model_TextQuery; return $x; };
var mtg_core_model_ColorQuery = { __ename__ : ["mtg","core","model","ColorQuery"], __constructs__ : ["ExactMatch","ContainsAll","ContainsAny"] };
mtg_core_model_ColorQuery.ExactMatch = function(colors) { var $x = ["ExactMatch",0,colors]; $x.__enum__ = mtg_core_model_ColorQuery; return $x; };
mtg_core_model_ColorQuery.ContainsAll = function(colors) { var $x = ["ContainsAll",1,colors]; $x.__enum__ = mtg_core_model_ColorQuery; return $x; };
mtg_core_model_ColorQuery.ContainsAny = function(colors) { var $x = ["ContainsAny",2,colors]; $x.__enum__ = mtg_core_model_ColorQuery; return $x; };
var mtg_core_model_NumberQuery = { __ename__ : ["mtg","core","model","NumberQuery"], __constructs__ : ["Equals","GreaterThan","LessThan","GreaterThanOrEqual","LessThanOrEqual","Between"] };
mtg_core_model_NumberQuery.Equals = function(value) { var $x = ["Equals",0,value]; $x.__enum__ = mtg_core_model_NumberQuery; return $x; };
mtg_core_model_NumberQuery.GreaterThan = function(value) { var $x = ["GreaterThan",1,value]; $x.__enum__ = mtg_core_model_NumberQuery; return $x; };
mtg_core_model_NumberQuery.LessThan = function(value) { var $x = ["LessThan",2,value]; $x.__enum__ = mtg_core_model_NumberQuery; return $x; };
mtg_core_model_NumberQuery.GreaterThanOrEqual = function(value) { var $x = ["GreaterThanOrEqual",3,value]; $x.__enum__ = mtg_core_model_NumberQuery; return $x; };
mtg_core_model_NumberQuery.LessThanOrEqual = function(value) { var $x = ["LessThanOrEqual",4,value]; $x.__enum__ = mtg_core_model_NumberQuery; return $x; };
mtg_core_model_NumberQuery.Between = function(low,high) { var $x = ["Between",5,low,high]; $x.__enum__ = mtg_core_model_NumberQuery; return $x; };
var mtg_core_model_CardQuery = function(data) {
	this.latestPrintingOnly = true;
	this.searchText = "";
	this.pageSize = 100;
	this.pageNumber = 1;
	if(data == null) {
		data = { };
	}
	this.pageNumber = data.pageNumber != null?data.pageNumber:1;
	this.pageSize = data.pageSize != null?data.pageSize:100;
	if(this.pageSize != null && this.pageSize > 100) {
		throw new js__$Boot_HaxeError("Field " + "CardQuery" + "." + "pageSize" + " failed validation \"" + "_ <= 100" + "\" with value \"" + this.pageSize + "\"");
	}
	this.searchText = data.searchText != null?data.searchText:"";
	this.latestPrintingOnly = data.latestPrintingOnly != null?data.latestPrintingOnly:true;
};
mtg_core_model_CardQuery.__name__ = ["mtg","core","model","CardQuery"];
mtg_core_model_CardQuery.__interfaces__ = [dataclass_DataClass];
mtg_core_model_CardQuery.fromMap = function(map) {
	var tmp;
	var key = mtg_core_model_CardQuery.QUERY;
	if(__map_reserved[key] != null) {
		tmp = map.getReserved(key);
	} else {
		tmp = map.h[key];
	}
	var tmp1 = tmp;
	var tmp2;
	var key1 = mtg_core_model_CardQuery.PAGE_NUMBER;
	if(__map_reserved[key1] != null) {
		tmp2 = map.getReserved(key1);
	} else {
		tmp2 = map.h[key1];
	}
	var tmp3 = mtg_core_model_CardQuery.stringToInt(tmp2);
	var tmp4;
	var key2 = mtg_core_model_CardQuery.PAGE_SIZE;
	if(__map_reserved[key2] != null) {
		tmp4 = map.getReserved(key2);
	} else {
		tmp4 = map.h[key2];
	}
	var tmp5 = mtg_core_model_CardQuery.stringToInt(tmp4);
	var tmp6;
	var key3 = mtg_core_model_CardQuery.LATEST_PRINTING_ONLY;
	if(__map_reserved[key3] != null) {
		tmp6 = map.getReserved(key3);
	} else {
		tmp6 = map.h[key3];
	}
	return new mtg_core_model_CardQuery({ searchText : tmp1, pageNumber : tmp3, pageSize : tmp5, latestPrintingOnly : mtg_core_model_CardQuery.stringToBool(tmp6)});
};
mtg_core_model_CardQuery.fromObject = function(obj) {
	return mtg_core_model_CardQuery.fromMap(Reflect.fields(obj).reduce(function(acc,key) {
		var value = Reflect.field(obj,key);
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},new haxe_ds_StringMap()));
};
mtg_core_model_CardQuery.stringToInt = function(input,defaultValue) {
	if(thx_Strings.isEmpty(input) || !thx_Ints.canParse(input)) {
		return defaultValue;
	}
	return Std.parseInt(input);
};
mtg_core_model_CardQuery.stringToBool = function(input,defaultValue) {
	if(thx_Strings.isEmpty(input)) {
		return defaultValue;
	}
	return input.toLowerCase() == "true";
};
mtg_core_model_CardQuery.prototype = {
	pageNumber: null
	,pageSize: null
	,searchText: null
	,latestPrintingOnly: null
	,toQueryString: function() {
		return "" + mtg_core_model_CardQuery.QUERY + "=" + this.searchText + "&" + mtg_core_model_CardQuery.PAGE_NUMBER + "=" + this.pageNumber + "&" + mtg_core_model_CardQuery.PAGE_SIZE + "=" + this.pageSize;
	}
	,__class__: mtg_core_model_CardQuery
};
var mtg_core_model_Color = { __ename__ : ["mtg","core","model","Color"], __constructs__ : ["White","Blue","Black","Red","Green","Colorless"] };
mtg_core_model_Color.White = ["White",0];
mtg_core_model_Color.White.__enum__ = mtg_core_model_Color;
mtg_core_model_Color.Blue = ["Blue",1];
mtg_core_model_Color.Blue.__enum__ = mtg_core_model_Color;
mtg_core_model_Color.Black = ["Black",2];
mtg_core_model_Color.Black.__enum__ = mtg_core_model_Color;
mtg_core_model_Color.Red = ["Red",3];
mtg_core_model_Color.Red.__enum__ = mtg_core_model_Color;
mtg_core_model_Color.Green = ["Green",4];
mtg_core_model_Color.Green.__enum__ = mtg_core_model_Color;
mtg_core_model_Color.Colorless = ["Colorless",5];
mtg_core_model_Color.Colorless.__enum__ = mtg_core_model_Color;
var mtg_core_model_Deck = function() {
};
mtg_core_model_Deck.__name__ = ["mtg","core","model","Deck"];
mtg_core_model_Deck.prototype = {
	__class__: mtg_core_model_Deck
};
var mtg_core_model__$Symbol_Symbol_$Impl_$ = {};
mtg_core_model__$Symbol_Symbol_$Impl_$.__name__ = ["mtg","core","model","_Symbol","Symbol_Impl_"];
mtg_core_model__$Symbol_Symbol_$Impl_$.safeParse = function(input) {
	try {
		return haxe_ds_Option.Some(mtg_core_model__$Symbol_Symbol_$Impl_$.parse(input));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return haxe_ds_Option.None;
	}
};
mtg_core_model__$Symbol_Symbol_$Impl_$.parse = function(input) {
	switch(input) {
	case "{C}":
		return "{C}";
	case "{0}":
		return "{0}";
	case "{1}":
		return "{1}";
	case "{2}":
		return "{2}";
	case "{3}":
		return "{3}";
	case "{4}":
		return "{4}";
	case "{5}":
		return "{5}";
	case "{6}":
		return "{6}";
	case "{7}":
		return "{7}";
	case "{8}":
		return "{8}";
	case "{9}":
		return "{9}";
	case "{10}":
		return "{10}";
	case "{11}":
		return "{11}";
	case "{12}":
		return "{12}";
	case "{13}":
		return "{13}";
	case "{14}":
		return "{14}";
	case "{15}":
		return "{15}";
	case "{16}":
		return "{16}";
	case "{17}":
		return "{17}";
	case "{18}":
		return "{18}";
	case "{19}":
		return "{19}";
	case "{20}":
		return "{20}";
	case "{100}":
		return "{100}";
	case "{1000000}":
		return "{1000000}";
	case "{1/2}":
		return "{1/2}";
	case "{Infinity}":
		return "{∞}";
	case "{∞}":
		return "{∞}";
	case "{W}":
		return "{W}";
	case "{U}":
		return "{U}";
	case "{B}":
		return "{B}";
	case "{R}":
		return "{R}";
	case "{G}":
		return "{G}";
	case "{W 1/2}":
		return "{W 1/2}";
	case "{U 1/2}":
		return "{U 1/2}";
	case "{B 1/2}":
		return "{B 1/2}";
	case "{R 1/2}":
		return "{R 1/2}";
	case "{G 1/2}":
		return "{G 1/2}";
	case "{P}":
		return "{P}";
	case "{W/P}":
		return "{W/P}";
	case "{U/P}":
		return "{U/P}";
	case "{B/P}":
		return "{B/P}";
	case "{R/P}":
		return "{R/P}";
	case "{G/P}":
		return "{G/P}";
	case "{W/U}":
		return "{W/U}";
	case "{W/B}":
		return "{W/B}";
	case "{U/B}":
		return "{U/B}";
	case "{U/R}":
		return "{U/R}";
	case "{B/R}":
		return "{B/R}";
	case "{B/G}":
		return "{B/G}";
	case "{R/G}":
		return "{R/G}";
	case "{R/W}":
		return "{R/W}";
	case "{G/W}":
		return "{G/W}";
	case "{G/U}":
		return "{G/U}";
	case "{2/W}":
		return "{2/W}";
	case "{2/U}":
		return "{2/U}";
	case "{2/B}":
		return "{2/B}";
	case "{2/R}":
		return "{2/R}";
	case "{2/G}":
		return "{2/G}";
	case "{S}":
		return "{S}";
	case "{X}":
		return "{X}";
	case "{Y}":
		return "{Y}";
	case "{Z}":
		return "{Z}";
	case "{T}":
		return "{T}";
	case "{Q}":
		return "{Q}";
	default:
		console.log("Unsupported symbol: " + input);
		throw new thx_Error("Symbol " + input + " is not supported",null,{ fileName : "Symbol.hx", lineNumber : 183, className : "mtg.core.model._Symbol.Symbol_Impl_", methodName : "parse"});
	}
};
var mtg_core_util_Arrays = function() { };
mtg_core_util_Arrays.__name__ = ["mtg","core","util","Arrays"];
mtg_core_util_Arrays.map = function(arr,mapper) {
	var result = [];
	var _g = 0;
	while(_g < arr.length) {
		var val = arr[_g];
		++_g;
		result.push(mapper(val));
	}
	return result;
};
var mtg_core_util_CardTextToken = { __ename__ : ["mtg","core","util","CardTextToken"], __constructs__ : ["TText","TSymbol","TNewline"] };
mtg_core_util_CardTextToken.TText = function(text) { var $x = ["TText",0,text]; $x.__enum__ = mtg_core_util_CardTextToken; return $x; };
mtg_core_util_CardTextToken.TSymbol = function(symbol) { var $x = ["TSymbol",1,symbol]; $x.__enum__ = mtg_core_util_CardTextToken; return $x; };
mtg_core_util_CardTextToken.TNewline = ["TNewline",2];
mtg_core_util_CardTextToken.TNewline.__enum__ = mtg_core_util_CardTextToken;
var mtg_core_util_CardTextParser = function(input) {
	this.input = input;
	this.index = 0;
};
mtg_core_util_CardTextParser.__name__ = ["mtg","core","util","CardTextParser"];
mtg_core_util_CardTextParser.parse = function(input) {
	return new mtg_core_util_CardTextParser(input).internalParse();
};
mtg_core_util_CardTextParser.prototype = {
	input: null
	,index: null
	,internalParse: function() {
		if(this.input == "" || this.input == null) {
			return [mtg_core_util_CardTextToken.TText("")];
		}
		var tokens = [];
		while(this.index < this.input.length) tokens.push(this.readToken());
		return tokens;
	}
	,readToken: function() {
		if(this["char"]() == "{") {
			return this.readSymbolToken();
		} else if(this["char"]() == "\n") {
			return this.readNewlineToken();
		} else {
			return this.readTextToken();
		}
	}
	,readTextToken: function() {
		return mtg_core_util_CardTextToken.TText(this.readUpTo(["{","\n"]));
	}
	,readNewlineToken: function() {
		this.readChar("\n");
		return mtg_core_util_CardTextToken.TNewline;
	}
	,readSymbolToken: function() {
		var token = this.readChar("{");
		token += this.readUpTo(["}"]);
		token += this.readChar("}");
		var _g = mtg_core_model__$Symbol_Symbol_$Impl_$.safeParse(token);
		switch(_g[1]) {
		case 0:
			return mtg_core_util_CardTextToken.TSymbol(_g[2]);
		case 1:
			return mtg_core_util_CardTextToken.TText(token);
		}
	}
	,readChar: function(c) {
		if(this["char"]() == c) {
			this.index++;
		}
		return c;
	}
	,readUpTo: function(cs) {
		var startIndex = this.index;
		while(!thx_Arrays.contains(cs,this["char"]()) && this.index < this.input.length) this.index++;
		return this.input.substring(startIndex,this.index);
	}
	,'char': function() {
		return this.input.charAt(this.index);
	}
	,__class__: mtg_core_util_CardTextParser
};
var routly_IRouteEmitter = function() { };
routly_IRouteEmitter.__name__ = ["routly","IRouteEmitter"];
routly_IRouteEmitter.prototype = {
	subscribers: null
	,emit: null
	,subscribe: null
	,__class__: routly_IRouteEmitter
};
var routly_HtmlRouteEmitter = function() {
	this.subscribers = [];
	var _g = this;
	window.onhashchange = function(changeEvent) {
		if(changeEvent.newURL == changeEvent.oldURL) {
			return;
		}
		_g.emit(_g.parsePath(changeEvent));
	};
};
routly_HtmlRouteEmitter.__name__ = ["routly","HtmlRouteEmitter"];
routly_HtmlRouteEmitter.__interfaces__ = [routly_IRouteEmitter];
routly_HtmlRouteEmitter.prototype = {
	subscribers: null
	,emit: function(path) {
		if(path == null) {
			path = window.location.hash;
			if(path == "") {
				path = "/";
			}
		}
		if(path.charAt(0) == "#") {
			path = path.substring(1);
		}
		var _g = 0;
		var _g1 = this.subscribers;
		while(_g < _g1.length) {
			var subscriber = _g1[_g];
			++_g;
			subscriber.fire(path);
		}
	}
	,subscribe: function(router) {
		this.subscribers.push(router);
	}
	,parsePath: function(hashChangeEvent) {
		var split = hashChangeEvent.newURL.split("#");
		if(split == null || split.length < 2) {
			throw new js__$Boot_HaxeError("malformed newURL: " + hashChangeEvent.newURL + " --> must contains a hash (#)");
		}
		return split[1];
	}
	,__class__: routly_HtmlRouteEmitter
};
var routly_RouteDescriptor = function(rawPath,virtualPath,$arguments,queryString) {
	this.raw = rawPath;
	this.virtual = virtualPath;
	this["arguments"] = $arguments;
	this.query = queryString;
};
routly_RouteDescriptor.__name__ = ["routly","RouteDescriptor"];
routly_RouteDescriptor.prototype = {
	raw: null
	,virtual: null
	,'arguments': null
	,query: null
	,__class__: routly_RouteDescriptor
};
var routly_Routly = function(emitter) {
	if(emitter == null) {
		emitter = new routly_HtmlRouteEmitter();
	}
	this.emitter = emitter;
};
routly_Routly.__name__ = ["routly","Routly"];
routly_Routly.prototype = {
	mappings: null
	,unknownPathCallback: null
	,emitter: null
	,routes: function(mappings) {
		if(mappings == null) {
			mappings = new haxe_ds_StringMap();
		}
		this.mappings = mappings;
	}
	,unknown: function(callback) {
		this.unknownPathCallback = callback;
	}
	,fire: function(path) {
		if(path == null || path == "") {
			path = "/";
		}
		var descriptor = this.findMatch(path);
		if(descriptor == null) {
			if(this.unknownPathCallback != null) {
				this.unknownPathCallback(new routly_RouteDescriptor(path));
			}
			return;
		}
		var key = descriptor.virtual;
		var tmp;
		var _this = this.mappings;
		if(__map_reserved[key] != null) {
			tmp = _this.getReserved(key);
		} else {
			tmp = _this.h[key];
		}
		tmp(descriptor);
	}
	,listen: function(fireEventForCurrentPath) {
		if(fireEventForCurrentPath == null) {
			fireEventForCurrentPath = true;
		}
		this.emitter.subscribe(this);
		if(fireEventForCurrentPath) {
			this.emitter.emit();
		}
	}
	,findMatch: function(path) {
		var tmp = this.mappings.keys();
		while(tmp.hasNext()) {
			var descriptor = this.matches(path,tmp.next());
			if(descriptor != null) {
				return descriptor;
			}
		}
		return null;
	}
	,matches: function(rawPath,virtualPath) {
		var questionMarkIndex = rawPath.lastIndexOf("?");
		var formatted = questionMarkIndex > 0?rawPath.substring(0,questionMarkIndex):rawPath;
		var routeSplit = thx_Strings.trimCharsLeft(virtualPath,"/").split("/");
		if(routeSplit == null || routeSplit.length == 0) {
			throw new js__$Boot_HaxeError("we have registered an empty route apparently?");
		}
		var rawSplit = thx_Strings.trimCharsLeft(formatted,"/").split("/");
		if(rawSplit == null || rawSplit.length == 0) {
			throw new js__$Boot_HaxeError("bad path, where are the slashes?! : " + formatted);
		}
		if(routeSplit.length != rawSplit.length) {
			return null;
		}
		var _g1 = 0;
		var _g = rawSplit.length;
		while(_g1 < _g) {
			var i = _g1++;
			var colonIndex = routeSplit[i].indexOf(":");
			if(colonIndex == -1 && rawSplit[i] != routeSplit[i]) {
				return null;
			}
			if(colonIndex != -1 && rawSplit[i].substring(0,colonIndex) != routeSplit[i].substring(0,colonIndex)) {
				return null;
			}
		}
		return new routly_RouteDescriptor(rawPath,virtualPath,this.parseArguments(rawSplit,routeSplit),this.parseQueryString(rawPath));
	}
	,parseArguments: function(raw,virtual) {
		if(raw == null || virtual == null || raw.length != virtual.length) {
			throw new js__$Boot_HaxeError("invalid arrays passed to buildDescriptor.  must be non-null and equal length.");
		}
		var $arguments = new haxe_ds_StringMap();
		var _g1 = 0;
		var _g = raw.length;
		while(_g1 < _g) {
			var i = _g1++;
			var colonIndex = virtual[i].indexOf(":");
			if(colonIndex > -1) {
				var key = virtual[i].substring(colonIndex + 1);
				var value = raw[i].substring(colonIndex);
				if(__map_reserved[key] != null) {
					$arguments.setReserved(key,value);
				} else {
					$arguments.h[key] = value;
				}
			}
		}
		return $arguments;
	}
	,parseQueryString: function(rawPath) {
		if(rawPath == null) {
			throw new js__$Boot_HaxeError("Invalid url passed to parseQueryString: " + rawPath);
		}
		var results = new haxe_ds_StringMap();
		var startIndex = rawPath.lastIndexOf("?");
		if(startIndex > -1) {
			var pairs = rawPath.substring(startIndex + 1).split("&");
			var _g = 0;
			while(_g < pairs.length) {
				var pair = pairs[_g];
				++_g;
				var split = pair.split("=");
				var key = decodeURIComponent(split[0].split("+").join(" "));
				var value = split.length == 2?decodeURIComponent(split[1].split("+").join(" ")):"";
				if(__map_reserved[key] != null) {
					results.setReserved(key,value);
				} else {
					results.h[key] = value;
				}
			}
		}
		return results;
	}
	,__class__: routly_Routly
};
var thx_Arrays = function() { };
thx_Arrays.__name__ = ["thx","Arrays"];
thx_Arrays.append = function(array,element) {
	array.push(element);
	return array;
};
thx_Arrays.appendIf = function(array,cond,element) {
	if(cond) {
		array.push(element);
	}
	return array;
};
thx_Arrays.monoid = function() {
	return { zero : [], append : function(a,b) {
		return a.concat(b);
	}};
};
thx_Arrays.after = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) + 1);
};
thx_Arrays.each = function(arr,effect) {
	var tmp = HxOverrides.iter(arr);
	while(tmp.hasNext()) effect(tmp.next());
};
thx_Arrays.eachi = function(arr,effect) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		effect(arr[i],i);
	}
};
thx_Arrays.all = function(arr,predicate) {
	var tmp = HxOverrides.iter(arr);
	while(tmp.hasNext()) if(!predicate(tmp.next())) {
		return false;
	}
	return true;
};
thx_Arrays.any = function(arr,predicate) {
	var tmp = HxOverrides.iter(arr);
	while(tmp.hasNext()) if(predicate(tmp.next())) {
		return true;
	}
	return false;
};
thx_Arrays.at = function(arr,indexes) {
	return indexes.map(function(i) {
		return arr[i];
	});
};
thx_Arrays.before = function(array,element) {
	return array.slice(0,thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.commonsFromStart = function(self,other,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var count = 0;
	var _g = 0;
	var _g1 = thx_Arrays.zip(self,other);
	while(_g < _g1.length) {
		var pair = _g1[_g];
		++_g;
		if(equality(pair._0,pair._1)) {
			++count;
		} else {
			break;
		}
	}
	return self.slice(0,count);
};
thx_Arrays.compact = function(arr) {
	return arr.filter(function(v) {
		return null != v;
	});
};
thx_Arrays.compare = function(a,b) {
	var v = a.length - b.length;
	if(v != 0) {
		return v;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		v = thx_Dynamics.compare(a[i],b[i]);
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) if(eq(array[_g1++],element)) {
			return true;
		}
		return false;
	}
};
thx_Arrays.containsAll = function(array,elements,eq) {
	var tmp = $iterator(elements)();
	while(tmp.hasNext()) if(!thx_Arrays.contains(array,tmp.next(),eq)) {
		return false;
	}
	return true;
};
thx_Arrays.containsAny = function(array,elements,eq) {
	var tmp = $iterator(elements)();
	while(tmp.hasNext()) if(thx_Arrays.contains(array,tmp.next(),eq)) {
		return true;
	}
	return false;
};
thx_Arrays.create = function(length,fillWith) {
	var arr = new Array(length);
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		arr[i] = fillWith;
	}
	return arr;
};
thx_Arrays.cross = function(a,b) {
	var r = [];
	var tmp = HxOverrides.iter(a);
	while(tmp.hasNext()) {
		var va = tmp.next();
		var tmp1 = HxOverrides.iter(b);
		while(tmp1.hasNext()) r.push([va,tmp1.next()]);
	}
	return r;
};
thx_Arrays.crossMulti = function(array) {
	var acopy = array.slice();
	var result = acopy.shift().map(function(v) {
		return [v];
	});
	while(acopy.length > 0) {
		var array1 = acopy.shift();
		var tresult = result;
		result = [];
		var tmp = HxOverrides.iter(array1);
		while(tmp.hasNext()) {
			var v1 = tmp.next();
			var _g = 0;
			while(_g < tresult.length) {
				var ar = tresult[_g];
				++_g;
				var t = ar.slice();
				t.push(v1);
				result.push(t);
			}
		}
	}
	return result;
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var v = [tmp.next()];
		if(!thx_Arrays.any(result,(function(v1) {
			return function(r) {
				return predicate(r,v1[0]);
			};
		})(v))) {
			result.push(v[0]);
		}
	}
	return result;
};
thx_Arrays.eachPair = function(array,callback) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g3 = i;
		var _g2 = array.length;
		while(_g3 < _g2) if(!callback(array[i],array[_g3++])) {
			return;
		}
	}
};
thx_Arrays.equals = function(a,b,equality) {
	if(a == null || b == null || a.length != b.length) {
		return false;
	}
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(!equality(a[i],b[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.extract = function(a,predicate) {
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(a[i])) {
			return a.splice(i,1)[0];
		}
	}
	return null;
};
thx_Arrays.filterNull = function(a) {
	var arr = [];
	var tmp = HxOverrides.iter(a);
	while(tmp.hasNext()) {
		var v = tmp.next();
		if(null != v) {
			arr.push(v);
		}
	}
	return arr;
};
thx_Arrays.find = function(array,predicate) {
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var element = tmp.next();
		if(predicate(element)) {
			return element;
		}
	}
	return null;
};
thx_Arrays.findOption = function(array,predicate) {
	var tmp = HxOverrides.iter(array);
	while(tmp.hasNext()) {
		var element = tmp.next();
		if(predicate(element)) {
			return haxe_ds_Option.Some(element);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findIndex = function(array,predicate) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(array[i])) {
			return i;
		}
	}
	return -1;
};
thx_Arrays.findLast = function(array,predicate) {
	var len = array.length;
	var j;
	var _g1 = 0;
	while(_g1 < len) {
		j = len - _g1++ - 1;
		if(predicate(array[j])) {
			return array[j];
		}
	}
	return null;
};
thx_Arrays.first = function(array) {
	return array[0];
};
thx_Arrays.flatMap = function(array,callback) {
	var array1 = array.map(callback);
	return Array.prototype.concat.apply([],array1);
};
thx_Arrays.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx_Arrays.from = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.groupByAppend = function(arr,resolver,map) {
	arr.map(function(v) {
		var key = resolver(v);
		var arr1 = map.get(key);
		if(null == arr1) {
			arr1 = [v];
			map.set(key,arr1);
		} else {
			arr1.push(v);
		}
	});
	return map;
};
thx_Arrays.spanByIndex = function(arr,spanKey) {
	var acc = [];
	var cur = null;
	var j = -1;
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var k = spanKey(i);
		if(k == null) {
			throw new thx_Error("spanKey function returned null for index " + i,null,{ fileName : "Arrays.hx", lineNumber : 486, className : "thx.Arrays", methodName : "spanByIndex"});
		}
		if(cur == k) {
			acc[j].push(arr[i]);
		} else {
			cur = k;
			++j;
			acc.push([arr[i]]);
		}
	}
	return acc;
};
thx_Arrays.hasElements = function(array) {
	if(null != array) {
		return array.length > 0;
	} else {
		return false;
	}
};
thx_Arrays.head = function(array) {
	return array[0];
};
thx_Arrays.ifEmpty = function(array,alt) {
	if(null != array && 0 != array.length) {
		return array;
	} else {
		return alt;
	}
};
thx_Arrays.initial = function(array) {
	return array.slice(0,array.length - 1);
};
thx_Arrays.isEmpty = function(array) {
	if(!(null == array)) {
		return array.length == 0;
	} else {
		return true;
	}
};
thx_Arrays.last = function(array) {
	return array[array.length - 1];
};
thx_Arrays.mapi = function(array,callback) {
	return array.map(callback);
};
thx_Arrays.forEach = function(array,f) {
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) f(array[_g1++]);
};
thx_Arrays.mapRight = function(array,callback) {
	var i = array.length;
	var result = [];
	while(--i >= 0) result.push(callback(array[i]));
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
thx_Arrays.pull = function(array,toRemove,equality) {
	var tmp = HxOverrides.iter(toRemove);
	while(tmp.hasNext()) thx_Arrays.removeAll(array,tmp.next(),equality);
};
thx_Arrays.pushIf = function(array,condition,value) {
	if(condition) {
		array.push(value);
	}
	return array;
};
thx_Arrays.reduce = function(array,callback,initial) {
	return array.reduce(callback,initial);
};
thx_Arrays.foldLeft = function(array,init,f) {
	return array.reduce(f,init);
};
thx_Arrays.resize = function(array,length,fill) {
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_Arrays.reducei = function(array,callback,initial) {
	return array.reduce(callback,initial);
};
thx_Arrays.reduceRight = function(array,callback,initial) {
	var i = array.length;
	while(--i >= 0) initial = callback(initial,array[i]);
	return initial;
};
thx_Arrays.removeAll = function(array,element,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var i = array.length;
	while(--i >= 0) if(equality(array[i],element)) {
		array.splice(i,1);
	}
};
thx_Arrays.rest = function(array) {
	return array.slice(1);
};
thx_Arrays.reversed = function(array) {
	var result = array.slice();
	result.reverse();
	return result;
};
thx_Arrays.sample = function(array,n) {
	var b = array.length;
	if(n < b) {
		n = n;
	} else {
		n = b;
	}
	var copy = array.slice();
	var result = [];
	var _g1 = 0;
	var _g = n;
	while(_g1 < _g) {
		++_g1;
		result.push(copy.splice(Std.random(copy.length),1)[0]);
	}
	return result;
};
thx_Arrays.sampleOne = function(array) {
	return array[Std.random(array.length)];
};
thx_Arrays.string = function(arr) {
	return "[" + arr.map(thx_Dynamics.string).join(", ") + "]";
};
thx_Arrays.shuffle = function(a) {
	var t = thx_Ints.range(a.length);
	var array = [];
	while(t.length > 0) {
		var pos = Std.random(t.length);
		var index = t[pos];
		t.splice(pos,1);
		array.push(a[index]);
	}
	return array;
};
thx_Arrays.split = function(array,parts) {
	return thx_Arrays.splitBy(array,Math.ceil(array.length / parts));
};
thx_Arrays.splitBy = function(array,len) {
	var res = [];
	var b = array.length;
	if(len < b) {
		len = len;
	} else {
		len = b;
	}
	var _g1 = 0;
	var _g = Math.ceil(array.length / len);
	while(_g1 < _g) {
		var p = _g1++;
		res.push(array.slice(p * len,(p + 1) * len));
	}
	return res;
};
thx_Arrays.splitByPad = function(arr,len,pad) {
	var res = thx_Arrays.splitBy(arr,len);
	while(res[res.length - 1].length < len) res[res.length - 1].push(pad);
	return res;
};
thx_Arrays.tail = function(array) {
	return array.slice(1);
};
thx_Arrays.take = function(arr,n) {
	return arr.slice(0,n);
};
thx_Arrays.takeLast = function(arr,n) {
	return arr.slice(arr.length - n);
};
thx_Arrays.traverseOption = function(arr,f) {
	var initial = haxe_ds_Option.Some([]);
	return arr.reduce(function(acc,t) {
		return thx_Options.ap(f(t),thx_Options.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},initial);
};
thx_Arrays.traverseValidation = function(arr,f,s) {
	var initial = thx_Either.Right([]);
	return arr.reduce(function(acc,t) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t),thx__$Validation_Validation_$Impl_$.ap(acc,thx_Either.Right(function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),function(e1,e2) {
			throw new js__$Boot_HaxeError("Unreachable");
		}),s);
	},initial);
};
thx_Arrays.traverseValidationIndexed = function(arr,f,s) {
	var initial = thx_Either.Right([]);
	return arr.reduce(function(acc,t,i) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t,i),thx__$Validation_Validation_$Impl_$.ap(acc,thx_Either.Right(function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),function(e1,e2) {
			throw new js__$Boot_HaxeError("Unreachable");
		}),s);
	},initial);
};
thx_Arrays.rotate = function(arr) {
	var result = [];
	var _g1 = 0;
	var _g = arr[0].length;
	while(_g1 < _g) {
		var i = _g1++;
		var row = [];
		result.push(row);
		var _g3 = 0;
		var _g2 = arr.length;
		while(_g3 < _g2) row.push(arr[_g3++][i]);
	}
	return result;
};
thx_Arrays.sliding2 = function(arr,f) {
	if(arr.length < 2) {
		return [];
	} else {
		var result = [];
		var _g1 = 0;
		var _g = arr.length - 1;
		while(_g1 < _g) {
			var i = _g1++;
			result.push(f(arr[i],arr[i + 1]));
		}
		return result;
	}
};
thx_Arrays.unzip = function(array) {
	var a1 = [];
	var a2 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	return { _0 : a1, _1 : a2};
};
thx_Arrays.unzip3 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	return { _0 : a1, _1 : a2, _2 : a3};
};
thx_Arrays.unzip4 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	return { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
};
thx_Arrays.unzip5 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	array.map(function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	return { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
};
thx_Arrays.zip = function(array1,array2) {
	var length;
	var a = array1.length;
	var b = array2.length;
	if(a < b) {
		length = a;
	} else {
		length = b;
	}
	var array = [];
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		array.push({ _0 : array1[i], _1 : array2[i]});
	}
	return array;
};
thx_Arrays.zip3 = function(array1,array2,array3) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length]);
	var array = [];
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		array.push({ _0 : array1[i], _1 : array2[i], _2 : array3[i]});
	}
	return array;
};
thx_Arrays.zip4 = function(array1,array2,array3,array4) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length]);
	var array = [];
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		array.push({ _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i]});
	}
	return array;
};
thx_Arrays.zip5 = function(array1,array2,array3,array4,array5) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length,array5.length]);
	var array = [];
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		array.push({ _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i], _4 : array5[i]});
	}
	return array;
};
thx_Arrays.zipAp = function(ax,fx) {
	var result = [];
	var _g1 = 0;
	var _g;
	var a = ax.length;
	var b = fx.length;
	if(a < b) {
		_g = a;
	} else {
		_g = b;
	}
	while(_g1 < _g) {
		var i = _g1++;
		result.push(fx[i](ax[i]));
	}
	return result;
};
thx_Arrays.zip2Ap = function(f,ax,bx) {
	return thx_Arrays.zipAp(bx,ax.map(thx_Functions2.curry(f)));
};
thx_Arrays.zip3Ap = function(f,ax,bx,cx) {
	var f1 = f;
	return thx_Arrays.zipAp(cx,thx_Arrays.zip2Ap(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	},ax,bx));
};
thx_Arrays.zip4Ap = function(f,ax,bx,cx,dx) {
	var f1 = f;
	return thx_Arrays.zipAp(dx,thx_Arrays.zip3Ap(function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	},ax,bx,cx));
};
thx_Arrays.zip5Ap = function(f,ax,bx,cx,dx,ex) {
	var f1 = f;
	return thx_Arrays.zipAp(ex,thx_Arrays.zip4Ap(function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	},ax,bx,cx,dx));
};
thx_Arrays.withPrepend = function(arr,el) {
	return [el].concat(arr);
};
thx_Arrays["with"] = function(arr,el) {
	return arr.concat([el]);
};
thx_Arrays.withSlice = function(arr,other,start,length) {
	if(length == null) {
		length = 0;
	}
	return arr.slice(0,start).concat(other).concat(arr.slice(start + length));
};
thx_Arrays.withInsert = function(arr,el,pos) {
	return arr.slice(0,pos).concat([el]).concat(arr.slice(pos));
};
thx_Arrays.maxBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(arr.reduce(function(a0,a1) {
			var tmp;
			switch(_e(a0,a1)[1]) {
			case 0:case 2:
				tmp = a1;
				break;
			case 1:
				tmp = a0;
				break;
			}
			return tmp;
		},arr[0]));
	}
};
thx_Arrays.minBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(arr.reduce(function(a0,a1) {
			var tmp;
			switch(_e(a0,a1)[1]) {
			case 0:case 2:
				tmp = a0;
				break;
			case 1:
				tmp = a1;
				break;
			}
			return tmp;
		},arr[0]));
	}
};
var thx_ArrayFloats = function() { };
thx_ArrayFloats.__name__ = ["thx","ArrayFloats"];
thx_ArrayFloats.average = function(arr) {
	return thx_ArrayFloats.sum(arr) / arr.length;
};
thx_ArrayFloats.compact = function(arr) {
	return arr.filter(function(v) {
		if(null != v) {
			return isFinite(v);
		} else {
			return false;
		}
	});
};
thx_ArrayFloats.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Floats.order),null);
};
thx_ArrayFloats.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Floats.order),null);
};
thx_ArrayFloats.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayFloats.standardDeviation = function(array) {
	if(array.length < 2) {
		return 0.0;
	}
	var mean = thx_ArrayFloats.average(array);
	return Math.sqrt(array.reduce(function(acc,val) {
		return acc + Math.pow(val - mean,2);
	},0) / (array.length - 1));
};
thx_ArrayFloats.sum = function(arr) {
	return arr.reduce(function(tot,v) {
		return tot + v;
	},0.0);
};
var thx_ArrayInts = function() { };
thx_ArrayInts.__name__ = ["thx","ArrayInts"];
thx_ArrayInts.average = function(arr) {
	return thx_ArrayInts.sum(arr) / arr.length;
};
thx_ArrayInts.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Ints.order),null);
};
thx_ArrayInts.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Ints.order),null);
};
thx_ArrayInts.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayInts.sum = function(arr) {
	return arr.reduce(function(tot,v) {
		return tot + v;
	},0);
};
var thx_ArrayStrings = function() { };
thx_ArrayStrings.__name__ = ["thx","ArrayStrings"];
thx_ArrayStrings.compact = function(arr) {
	return arr.filter(function(v) {
		return !thx_Strings.isEmpty(v);
	});
};
thx_ArrayStrings.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Strings.order),null);
};
thx_ArrayStrings.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Strings.order),null);
};
var thx_Bools = function() { };
thx_Bools.__name__ = ["thx","Bools"];
thx_Bools.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a) {
		return -1;
	} else {
		return 1;
	}
};
thx_Bools.toInt = function(v) {
	if(v) {
		return 1;
	} else {
		return 0;
	}
};
thx_Bools.canParse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return true;
	} else {
		switch(_g) {
		case "true":case "false":case "0":case "1":case "on":case "off":
			return true;
		default:
			return false;
		}
	}
};
thx_Bools.parse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "true":case "1":case "on":
			return true;
		case "false":case "0":case "off":
			return false;
		default:
			throw new js__$Boot_HaxeError("unable to parse \"" + _g + "\"");
		}
	}
};
thx_Bools.xor = function(a,b) {
	return a != b;
};
thx_Bools.option = function(cond,a) {
	if(cond) {
		return haxe_ds_Option.Some(a);
	} else {
		return haxe_ds_Option.None;
	}
};
var thx_Dates = function() { };
thx_Dates.__name__ = ["thx","Dates"];
thx_Dates.compare = function(a,b) {
	var a1 = a.getTime();
	var b1 = b.getTime();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Dates.create = function(year,month,day,hour,minute,second) {
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	if(day == null) {
		day = 1;
	}
	if(month == null) {
		month = 0;
	}
	minute += Math.floor(second / 60);
	second %= 60;
	if(second < 0) {
		second += 60;
	}
	hour += Math.floor(minute / 60);
	minute %= 60;
	if(minute < 0) {
		minute += 60;
	}
	day += Math.floor(hour / 24);
	hour %= 24;
	if(hour < 0) {
		hour += 24;
	}
	if(day == 0) {
		--month;
		if(month < 0) {
			month = 11;
			--year;
		}
		day = thx_Dates.daysInMonth(year,month);
	}
	year += Math.floor(month / 12);
	month %= 12;
	if(month < 0) {
		month += 12;
	}
	var days = thx_Dates.daysInMonth(year,month);
	while(day > days) {
		if(day > days) {
			day -= days;
			++month;
		}
		if(month > 11) {
			month -= 12;
			++year;
		}
		days = thx_Dates.daysInMonth(year,month);
	}
	return new Date(year,month,day,hour,minute,second);
};
thx_Dates.daysRange = function(start,end) {
	if(thx_Dates.compare(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx_Dates.sameDay(start,end)) {
		days.push(start);
		start = thx_Dates.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_Dates.equals = function(self,other) {
	return self.getTime() == other.getTime();
};
thx_Dates.nearEquals = function(self,other,units,period) {
	if(units == null) {
		units = 1;
	}
	if(null == period) {
		period = thx_TimePeriod.Second;
	}
	if(units < 0) {
		units = -units;
	}
	var min = thx_Dates.jump(self,period,-units);
	var max = thx_Dates.jump(self,period,units);
	if(thx_Dates.compare(min,other) <= 0) {
		return thx_Dates.compare(max,other) >= 0;
	} else {
		return false;
	}
};
thx_Dates.greater = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.more = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.less = function(self,other) {
	return thx_Dates.compare(self,other) < 0;
};
thx_Dates.greaterEquals = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.moreEqual = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.lessEquals = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.lessEqual = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.isLeapYear = function(year) {
	if(year % 4 != 0) {
		return false;
	}
	if(year % 100 == 0) {
		return year % 400 == 0;
	}
	return true;
};
thx_Dates.isInLeapYear = function(d) {
	return thx_Dates.isLeapYear(d.getFullYear());
};
thx_Dates.daysInMonth = function(year,month) {
	switch(month) {
	case 0:case 2:case 4:case 6:case 7:case 9:case 11:
		return 31;
	case 3:case 5:case 8:case 10:
		return 30;
	case 1:
		if(thx_Dates.isLeapYear(year)) {
			return 29;
		} else {
			return 28;
		}
		break;
	default:
		throw new js__$Boot_HaxeError("Invalid month \"" + month + "\".  Month should be a number, Jan=0, Dec=11");
	}
};
thx_Dates.numDaysInMonth = function(month,year) {
	return thx_Dates.daysInMonth(year,month);
};
thx_Dates.daysInThisMonth = function(d) {
	return thx_Dates.daysInMonth(d.getFullYear(),d.getMonth());
};
thx_Dates.numDaysInThisMonth = function(d) {
	return thx_Dates.daysInThisMonth(d);
};
thx_Dates.sameYear = function(self,other) {
	return self.getFullYear() == other.getFullYear();
};
thx_Dates.sameMonth = function(self,other) {
	if(thx_Dates.sameYear(self,other)) {
		return self.getMonth() == other.getMonth();
	} else {
		return false;
	}
};
thx_Dates.sameDay = function(self,other) {
	if(thx_Dates.sameMonth(self,other)) {
		return self.getDate() == other.getDate();
	} else {
		return false;
	}
};
thx_Dates.sameHour = function(self,other) {
	if(thx_Dates.sameDay(self,other)) {
		return self.getHours() == other.getHours();
	} else {
		return false;
	}
};
thx_Dates.sameMinute = function(self,other) {
	if(thx_Dates.sameHour(self,other)) {
		return self.getMinutes() == other.getMinutes();
	} else {
		return false;
	}
};
thx_Dates.snapNext = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapNext(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.snapPrev = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapPrev(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.snapTo = function(date,period) {
	var this1 = thx__$Timestamp_Timestamp_$Impl_$.snapTo(date.getTime(),period);
	return new Date(this1);
};
thx_Dates.jump = function(date,period,amount) {
	var sec = date.getSeconds();
	var min = date.getMinutes();
	var hour = date.getHours();
	var day = date.getDate();
	var month = date.getMonth();
	var year = date.getFullYear();
	switch(period[1]) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hour += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		month += amount;
		break;
	case 6:
		year += amount;
		break;
	}
	return thx_Dates.create(year,month,day,hour,min,sec);
};
thx_Dates.max = function(self,other) {
	if(self.getTime() > other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.min = function(self,other) {
	if(self.getTime() < other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.snapToWeekDay = function(date,day,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = date.getDay();
	var s = day;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapNextWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s < d) {
		s += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapPrevWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s > d) {
		s -= 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.prevYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,-1);
};
thx_Dates.nextYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,1);
};
thx_Dates.prevMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,-1);
};
thx_Dates.nextMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,1);
};
thx_Dates.prevWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,-1);
};
thx_Dates.nextWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,1);
};
thx_Dates.prevDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,-1);
};
thx_Dates.nextDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,1);
};
thx_Dates.prevHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,-1);
};
thx_Dates.nextHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,1);
};
thx_Dates.prevMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,-1);
};
thx_Dates.nextMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,1);
};
thx_Dates.prevSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,-1);
};
thx_Dates.nextSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,1);
};
thx_Dates.withYear = function(date,year) {
	return thx_Dates.create(year,date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withMonth = function(date,month) {
	return thx_Dates.create(date.getFullYear(),month,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withDay = function(date,day) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),day,date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withHour = function(date,hour) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),hour,date.getMinutes(),date.getSeconds());
};
thx_Dates.withMinute = function(date,minute) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),minute,date.getSeconds());
};
thx_Dates.withSecond = function(date,second) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),second);
};
thx_Dates.parseDate = function(s) {
	try {
		return thx_Either.Right(HxOverrides.strDate(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return thx_Either.Left("" + s + " could not be parsed to a valid Date value.");
	}
};
var thx_Dynamics = function() { };
thx_Dynamics.__name__ = ["thx","Dynamics"];
thx_Dynamics.equals = function(a,b) {
	if(!thx_Types.sameType(a,b)) {
		return false;
	}
	if(a == b) {
		return true;
	}
	var _g = Type["typeof"](a);
	switch(_g[1]) {
	case 2:case 0:case 1:case 3:
		return false;
	case 5:
		return Reflect.compareMethods(a,b);
	case 6:
		var c = _g[2];
		var ca = Type.getClassName(c);
		var cb = Type.getClassName(b == null?null:js_Boot.getClass(b));
		if(ca != cb) {
			return false;
		}
		if(typeof(a) == "string") {
			return false;
		}
		if((a instanceof Array) && a.__enum__ == null) {
			var aa = a;
			var ab = b;
			if(aa.length != ab.length) {
				return false;
			}
			var _g2 = 0;
			var _g1 = aa.length;
			while(_g2 < _g1) {
				var i = _g2++;
				if(!thx_Dynamics.equals(aa[i],ab[i])) {
					return false;
				}
			}
			return true;
		}
		if(js_Boot.__instanceof(a,Date)) {
			return a.getTime() == b.getTime();
		}
		if(js_Boot.__instanceof(a,haxe_IMap)) {
			var ha = a;
			var hb = b;
			var ka = thx_Iterators.toArray(ha.keys());
			var kb = thx_Iterators.toArray(hb.keys());
			if(ka.length != kb.length) {
				return false;
			}
			var _g11 = 0;
			while(_g11 < ka.length) {
				var key = ka[_g11];
				++_g11;
				if(!hb.exists(key) || !thx_Dynamics.equals(ha.get(key),hb.get(key))) {
					return false;
				}
			}
			return true;
		}
		var t = false;
		var tmp;
		t = thx_Iterators.isIterator(a);
		if(!t) {
			tmp = thx_Iterables.isIterable(a);
		} else {
			tmp = true;
		}
		if(tmp) {
			var va = t?thx_Iterators.toArray(a):thx_Iterators.toArray($iterator(a)());
			var vb = t?thx_Iterators.toArray(b):thx_Iterators.toArray($iterator(b)());
			if(va.length != vb.length) {
				return false;
			}
			var _g21 = 0;
			var _g12 = va.length;
			while(_g21 < _g12) {
				var i1 = _g21++;
				if(!thx_Dynamics.equals(va[i1],vb[i1])) {
					return false;
				}
			}
			return true;
		}
		var f = null;
		var tmp1;
		if(Object.prototype.hasOwnProperty.call(a,"equals")) {
			f = Reflect.field(a,"equals");
			tmp1 = Reflect.isFunction(f);
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return f.apply(a,[b]);
		}
		var fields = Type.getInstanceFields(a == null?null:js_Boot.getClass(a));
		var _g13 = 0;
		while(_g13 < fields.length) {
			var field = fields[_g13];
			++_g13;
			var va1 = Reflect.field(a,field);
			if(Reflect.isFunction(va1)) {
				continue;
			}
			var vb1 = Reflect.field(b,field);
			if(!thx_Dynamics.equals(va1,vb1)) {
				return false;
			}
		}
		return true;
	case 7:
		var e = _g[2];
		var ea = Type.getEnumName(e);
		var teb = Type.getEnum(b);
		var eb = Type.getEnumName(teb);
		if(ea != eb) {
			return false;
		}
		if(a[1] != b[1]) {
			return false;
		}
		var pa = a.slice(2);
		var pb = b.slice(2);
		var _g22 = 0;
		var _g14 = pa.length;
		while(_g22 < _g14) {
			var i2 = _g22++;
			if(!thx_Dynamics.equals(pa[i2],pb[i2])) {
				return false;
			}
		}
		return true;
	case 4:
		var fa = Reflect.fields(a);
		var fb = Reflect.fields(b);
		var _g15 = 0;
		while(_g15 < fa.length) {
			var field1 = fa[_g15];
			++_g15;
			HxOverrides.remove(fb,field1);
			if(!Object.prototype.hasOwnProperty.call(b,field1)) {
				return false;
			}
			var va2 = Reflect.field(a,field1);
			if(Reflect.isFunction(va2)) {
				continue;
			}
			var vb2 = Reflect.field(b,field1);
			if(!thx_Dynamics.equals(va2,vb2)) {
				return false;
			}
		}
		if(fb.length > 0) {
			return false;
		}
		var t1 = false;
		var tmp2;
		t1 = thx_Iterators.isIterator(a);
		if(!t1) {
			tmp2 = thx_Iterables.isIterable(a);
		} else {
			tmp2 = true;
		}
		if(tmp2) {
			if(t1 && !thx_Iterators.isIterator(b)) {
				return false;
			}
			if(!t1 && !thx_Iterables.isIterable(b)) {
				return false;
			}
			var aa1 = t1?thx_Iterators.toArray(a):thx_Iterators.toArray($iterator(a)());
			var ab1 = t1?thx_Iterators.toArray(b):thx_Iterators.toArray($iterator(b)());
			if(aa1.length != ab1.length) {
				return false;
			}
			var _g23 = 0;
			var _g16 = aa1.length;
			while(_g23 < _g16) {
				var i3 = _g23++;
				if(!thx_Dynamics.equals(aa1[i3],ab1[i3])) {
					return false;
				}
			}
			return true;
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
		break;
	}
	throw new thx_Error("Unable to compare values: " + Std.string(a) + " and " + Std.string(b),null,{ fileName : "Dynamics.hx", lineNumber : 153, className : "thx.Dynamics", methodName : "equals"});
};
thx_Dynamics.clone = function(v,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 0:
		return null;
	case 1:case 2:case 3:case 7:case 8:case 5:
		return v;
	case 4:
		return thx_Objects.copyTo(v,{ });
	case 6:
		var c = _g[2];
		switch(Type.getClassName(c)) {
		case "Array":
			return v.map(function(v1) {
				return thx_Dynamics.clone(v1,cloneInstances);
			});
		case "String":case "Date":
			return v;
		default:
			if(cloneInstances) {
				var o = Type.createEmptyInstance(c);
				var _g1 = 0;
				var _g2 = Type.getInstanceFields(c);
				while(_g1 < _g2.length) {
					var field = _g2[_g1];
					++_g1;
					o[field] = thx_Dynamics.clone(Reflect.field(v,field),cloneInstances);
				}
				return o;
			} else {
				return v;
			}
		}
		break;
	}
};
thx_Dynamics.compare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	}
	if(null == b) {
		return 1;
	}
	if(!thx_Types.sameType(a,b)) {
		return haxe_Utf8.compare(thx_Types.toString(Type["typeof"](a)),thx_Types.toString(Type["typeof"](b)));
	}
	var _g = Type["typeof"](a);
	switch(_g[1]) {
	case 1:
		return a - b;
	case 2:
		var a1 = a;
		var b1 = b;
		if(a1 < b1) {
			return -1;
		} else if(a1 > b1) {
			return 1;
		} else {
			return 0;
		}
		break;
	case 3:
		return thx_Bools.compare(a,b);
	case 4:
		return thx_Objects.compare(a,b);
	case 6:
		switch(Type.getClassName(_g[2])) {
		case "Array":
			return thx_Arrays.compare(a,b);
		case "String":
			return haxe_Utf8.compare(a,b);
		case "Date":
			return thx_Dates.compare(a,b);
		default:
			if(Object.prototype.hasOwnProperty.call(a,"compare")) {
				return Reflect.field(a,"compare").apply(a,[b]);
			} else {
				return haxe_Utf8.compare(Std.string(a),Std.string(b));
			}
		}
		break;
	case 7:
		return thx_Enums.compare(a,b);
	default:
		return 0;
	}
};
thx_Dynamics.string = function(v) {
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 0:
		return "null";
	case 1:case 2:case 3:
		return "" + Std.string(v);
	case 4:
		return thx_Objects.string(v);
	case 6:
		switch(Type.getClassName(_g[2])) {
		case "Array":
			return thx_Arrays.string(v);
		case "String":
			return v;
		case "Date":
			return HxOverrides.dateStr(v);
		default:
			if(js_Boot.__instanceof(v,haxe_IMap)) {
				return thx_Maps.string(v);
			} else {
				return Std.string(v);
			}
		}
		break;
	case 7:
		return thx_Enums.string(v);
	case 8:
		return "<unknown>";
	case 5:
		return "<function>";
	}
};
var thx_DynamicsT = function() { };
thx_DynamicsT.__name__ = ["thx","DynamicsT"];
thx_DynamicsT.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_DynamicsT.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_DynamicsT.fields = function(o) {
	return Reflect.fields(o);
};
thx_DynamicsT.merge = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_DynamicsT.size = function(o) {
	return Reflect.fields(o).length;
};
thx_DynamicsT.values = function(o) {
	return Reflect.fields(o).map(function(key) {
		return Reflect.field(o,key);
	});
};
thx_DynamicsT.tuples = function(o) {
	return Reflect.fields(o).map(function(key) {
		return { _0 : key, _1 : Reflect.field(o,key)};
	});
};
var thx_Either = { __ename__ : ["thx","Either"], __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; return $x; };
var thx_Eithers = function() { };
thx_Eithers.__name__ = ["thx","Eithers"];
thx_Eithers.isLeft = function(either) {
	switch(either[1]) {
	case 0:
		return true;
	case 1:
		return false;
	}
};
thx_Eithers.isRight = function(either) {
	switch(either[1]) {
	case 0:
		return false;
	case 1:
		return true;
	}
};
thx_Eithers.toLeft = function(either) {
	switch(either[1]) {
	case 0:
		return haxe_ds_Option.Some(either[2]);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Eithers.toRight = function(either) {
	switch(either[1]) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		return haxe_ds_Option.Some(either[2]);
	}
};
thx_Eithers.toLeftUnsafe = function(either) {
	switch(either[1]) {
	case 0:
		return either[2];
	case 1:
		return null;
	}
};
thx_Eithers.toRightUnsafe = function(either) {
	switch(either[1]) {
	case 0:
		return null;
	case 1:
		return either[2];
	}
};
thx_Eithers.map = function(either,f) {
	switch(either[1]) {
	case 0:
		return thx_Either.Left(either[2]);
	case 1:
		return thx_Either.Right(f(either[2]));
	}
};
thx_Eithers.flatMap = function(either,f) {
	switch(either[1]) {
	case 0:
		return thx_Either.Left(either[2]);
	case 1:
		return f(either[2]);
	}
};
thx_Eithers.leftMap = function(either,f) {
	switch(either[1]) {
	case 0:
		return thx_Either.Left(f(either[2]));
	case 1:
		return thx_Either.Right(either[2]);
	}
};
thx_Eithers.orThrow = function(either,message) {
	switch(either[1]) {
	case 0:
		throw new thx_Error("" + message + ": " + Std.string(either[2]),null,{ fileName : "Eithers.hx", lineNumber : 93, className : "thx.Eithers", methodName : "orThrow"});
		break;
	case 1:
		return either[2];
	}
};
thx_Eithers.toVNel = function(either) {
	switch(either[1]) {
	case 0:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(either[2]));
	case 1:
		return thx_Either.Right(either[2]);
	}
};
thx_Eithers.cata = function(either,l,r) {
	switch(either[1]) {
	case 0:
		return l(either[2]);
	case 1:
		return r(either[2]);
	}
};
var thx_Enums = function() { };
thx_Enums.__name__ = ["thx","Enums"];
thx_Enums.string = function(e) {
	var cons = e[0];
	var params = [];
	var _g = 0;
	var _g1 = e.slice(2);
	while(_g < _g1.length) {
		var param = _g1[_g];
		++_g;
		params.push(thx_Dynamics.string(param));
	}
	return cons + (params.length == 0?"":"(" + params.join(", ") + ")");
};
thx_Enums.compare = function(a,b) {
	var v = a[1] - b[1];
	if(v != 0) {
		return v;
	}
	return thx_Arrays.compare(a.slice(2),b.slice(2));
};
thx_Enums.min = function(a,b) {
	if(thx_Enums.compare(a,b) < 0) {
		return a;
	} else {
		return b;
	}
};
thx_Enums.max = function(a,b) {
	if(thx_Enums.compare(a,b) > 0) {
		return a;
	} else {
		return b;
	}
};
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = ["thx","Error"];
thx_Error.fromDynamic = function(err,pos) {
	if(js_Boot.__instanceof(err,thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	pos: null
	,stackItems: null
	,toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx__$Ord_Ord_$Impl_$ = {};
thx__$Ord_Ord_$Impl_$.__name__ = ["thx","_Ord","Ord_Impl_"];
thx__$Ord_Ord_$Impl_$.order = function(this1,a0,a1) {
	return this1(a0,a1);
};
thx__$Ord_Ord_$Impl_$.max = function(this1,a0,a1) {
	switch(this1(a0,a1)[1]) {
	case 0:case 2:
		return a1;
	case 1:
		return a0;
	}
};
thx__$Ord_Ord_$Impl_$.min = function(this1,a0,a1) {
	switch(this1(a0,a1)[1]) {
	case 0:case 2:
		return a0;
	case 1:
		return a1;
	}
};
thx__$Ord_Ord_$Impl_$.equal = function(this1,a0,a1) {
	return this1(a0,a1) == thx_OrderingImpl.EQ;
};
thx__$Ord_Ord_$Impl_$.contramap = function(this1,f) {
	return function(b0,b1) {
		return this1(f(b0),f(b1));
	};
};
thx__$Ord_Ord_$Impl_$.inverse = function(this1) {
	return function(a0,a1) {
		return this1(a1,a0);
	};
};
thx__$Ord_Ord_$Impl_$.fromIntComparison = function(f) {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(f(a,b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparable = function() {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(a.compareTo(b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparableOrd = function() {
	return function(a,b) {
		return a.compareTo(b);
	};
};
var thx__$Ord_Ordering_$Impl_$ = {};
thx__$Ord_Ordering_$Impl_$.__name__ = ["thx","_Ord","Ordering_Impl_"];
thx__$Ord_Ordering_$Impl_$.fromInt = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.fromFloat = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.toInt = function(this1) {
	switch(this1[1]) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
var thx_OrderingImpl = { __ename__ : ["thx","OrderingImpl"], __constructs__ : ["LT","GT","EQ"] };
thx_OrderingImpl.LT = ["LT",0];
thx_OrderingImpl.LT.__enum__ = thx_OrderingImpl;
thx_OrderingImpl.GT = ["GT",1];
thx_OrderingImpl.GT.__enum__ = thx_OrderingImpl;
thx_OrderingImpl.EQ = ["EQ",2];
thx_OrderingImpl.EQ.__enum__ = thx_OrderingImpl;
var thx_Floats = function() { };
thx_Floats.__name__ = ["thx","Floats"];
thx_Floats.angleDifference = function(a,b,turn) {
	if(turn == null) {
		turn = 360.0;
	}
	var r = (b - a) % turn;
	if(r < 0) {
		r += turn;
	}
	if(r > turn / 2) {
		r -= turn;
	}
	return r;
};
thx_Floats.ceilTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.ceil(f * p) / p;
};
thx_Floats.canParse = function(s) {
	return thx_Floats.pattern_parse.match(s);
};
thx_Floats.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Floats.floorTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.floor(f * p) / p;
};
thx_Floats.interpolate = function(f,a,b) {
	return (b - a) * f + a;
};
thx_Floats.interpolateAngle = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,a + thx_Floats.angleDifference(a,b,turn)),turn);
};
thx_Floats.interpolateAngleWidest = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolateAngle(f,a,b,turn) - turn / 2,turn);
};
thx_Floats.interpolateAngleCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b < a) {
		b += turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.interpolateAngleCCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b > a) {
		b -= turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.nearEquals = function(a,b,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(isFinite(a)) {
		return Math.abs(a - b) <= tollerance;
	}
	if(isNaN(a)) {
		return isNaN(b);
	}
	if(isNaN(b)) {
		return false;
	}
	if(!isFinite(b)) {
		return a > 0 == b > 0;
	}
	return false;
};
thx_Floats.nearEqualAngles = function(a,b,turn,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(turn == null) {
		turn = 360.0;
	}
	return Math.abs(thx_Floats.angleDifference(a,b,turn)) <= tollerance;
};
thx_Floats.nearZero = function(n,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	return Math.abs(n) <= tollerance;
};
thx_Floats.normalize = function(v) {
	if(v < 0) {
		return 0;
	} else if(v > 1) {
		return 1;
	} else {
		return v;
	}
};
thx_Floats.parse = function(s) {
	if(s.substring(0,1) == "+") {
		s = s.substring(1);
	}
	return parseFloat(s);
};
thx_Floats.root = function(base,index) {
	return Math.pow(base,1 / index);
};
thx_Floats.roundTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.round(f * p) / p;
};
thx_Floats.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Floats.toString = function(v) {
	return "" + v;
};
thx_Floats.toFloat = function(s) {
	return thx_Floats.parse(s);
};
thx_Floats.trunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.ftrunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.wrap = function(v,min,max) {
	var range = max - min + 1;
	if(v < min) {
		v += range * ((min - v) / range + 1);
	}
	return min + (v - min) % range;
};
thx_Floats.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_Functions0 = function() { };
thx_Functions0.__name__ = ["thx","Functions0"];
thx_Functions0.after = function(callback,n) {
	return function() {
		if(--n == 0) {
			callback();
		}
	};
};
thx_Functions0.join = function(fa,fb) {
	return function() {
		fa();
		fb();
	};
};
thx_Functions0.once = function(f) {
	return function() {
		var t = f;
		f = thx_Functions.noop;
		t();
	};
};
thx_Functions0.negate = function(callback) {
	return function() {
		return !callback();
	};
};
thx_Functions0.times = function(n,callback) {
	return function() {
		return thx_Ints.range(n).map(function(_) {
			return callback();
		});
	};
};
thx_Functions0.timesi = function(n,callback) {
	return function() {
		return thx_Ints.range(n).map(function(i) {
			return callback(i);
		});
	};
};
var thx_Functions1 = function() { };
thx_Functions1.__name__ = ["thx","Functions1"];
thx_Functions1.compose = function(fa,fb) {
	return function(v) {
		return fa(fb(v));
	};
};
thx_Functions1.join = function(fa,fb) {
	return function(v) {
		fa(v);
		fb(v);
	};
};
thx_Functions1.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v) {
			return "" + Std.string(v);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v1) {
		var key = resolver(v1);
		if(__map_reserved[key] != null?map.existsReserved(key):map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null?map.getReserved(key):map.h[key];
		}
		var result = callback(v1);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions1.negate = function(callback) {
	return function(v) {
		return !callback(v);
	};
};
thx_Functions1.noop = function(_) {
};
thx_Functions1.times = function(n,callback) {
	return function(value) {
		return thx_Ints.range(n).map(function(_) {
			return callback(value);
		});
	};
};
thx_Functions1.timesi = function(n,callback) {
	return function(value) {
		return thx_Ints.range(n).map(function(i) {
			return callback(value,i);
		});
	};
};
thx_Functions1.swapArguments = function(callback) {
	return function(a2,a1) {
		return callback(a1,a2);
	};
};
var thx_Functions2 = function() { };
thx_Functions2.__name__ = ["thx","Functions2"];
thx_Functions2.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2) {
			return "" + Std.string(v1) + ":" + Std.string(v2);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21) {
		var key = resolver(v11,v21);
		if(__map_reserved[key] != null?map.existsReserved(key):map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null?map.getReserved(key):map.h[key];
		}
		var result = callback(v11,v21);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions2.curry = function(f) {
	return function(a) {
		return function(b) {
			return f(a,b);
		};
	};
};
thx_Functions2.negate = function(callback) {
	return function(v1,v2) {
		return !callback(v1,v2);
	};
};
var thx_Functions3 = function() { };
thx_Functions3.__name__ = ["thx","Functions3"];
thx_Functions3.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2,v3) {
			return "" + Std.string(v1) + ":" + Std.string(v2) + ":" + Std.string(v3);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21,v31) {
		var key = resolver(v11,v21,v31);
		if(__map_reserved[key] != null?map.existsReserved(key):map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null?map.getReserved(key):map.h[key];
		}
		var result = callback(v11,v21,v31);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions3.negate = function(callback) {
	return function(v1,v2,v3) {
		return !callback(v1,v2,v3);
	};
};
thx_Functions3.curry = function(f) {
	return function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	};
};
var thx_Functions4 = function() { };
thx_Functions4.__name__ = ["thx","Functions4"];
thx_Functions4.curry = function(f) {
	return function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
};
var thx_Functions5 = function() { };
thx_Functions5.__name__ = ["thx","Functions5"];
thx_Functions5.curry = function(f) {
	return function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
};
var thx_Functions6 = function() { };
thx_Functions6.__name__ = ["thx","Functions6"];
thx_Functions6.curry = function(f) {
	return function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
};
var thx_Functions7 = function() { };
thx_Functions7.__name__ = ["thx","Functions7"];
thx_Functions7.curry = function(f) {
	return function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
};
var thx_Functions8 = function() { };
thx_Functions8.__name__ = ["thx","Functions8"];
thx_Functions8.curry = function(f) {
	return function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f(a,b,c,d,e,f0,g,h);
		};
	};
};
var thx_Functions9 = function() { };
thx_Functions9.__name__ = ["thx","Functions9"];
thx_Functions9.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f(a,b,c,d,e,f0,g,h,i);
		};
	};
};
var thx__$Functions_Reader_$Impl_$ = {};
thx__$Functions_Reader_$Impl_$.__name__ = ["thx","_Functions","Reader_Impl_"];
thx__$Functions_Reader_$Impl_$.flatMap = function(this1,f) {
	return function(a) {
		return (f(this1(a)))(a);
	};
};
var thx_Functions = function() { };
thx_Functions.__name__ = ["thx","Functions"];
thx_Functions.equality = function(a,b) {
	return a == b;
};
thx_Functions.identity = function(value) {
	return value;
};
thx_Functions.noop = function() {
};
var thx_Ints = function() { };
thx_Ints.__name__ = ["thx","Ints"];
thx_Ints.abs = function(v) {
	if(v < 0) {
		return -v;
	} else {
		return v;
	}
};
thx_Ints.canParse = function(s) {
	return thx_Ints.pattern_parse.match(s);
};
thx_Ints.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.compare = function(a,b) {
	return a - b;
};
thx_Ints.gcd = function(m,n) {
	if(m < 0) {
		m = -m;
	} else {
		m = m;
	}
	if(n < 0) {
		n = -n;
	} else {
		n = n;
	}
	if(n == 0) {
		return m;
	}
	return thx_Ints.gcd(n,m % n);
};
thx_Ints.interpolate = function(f,a,b) {
	return Math.round(a + (b - a) * f);
};
thx_Ints.isEven = function(v) {
	return v % 2 == 0;
};
thx_Ints.isOdd = function(v) {
	return v % 2 != 0;
};
thx_Ints.lpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	var neg = false;
	if(v < 0) {
		neg = true;
		v = -v;
	}
	return (neg?"-":"") + StringTools.lpad("" + v,pad,len);
};
thx_Ints.lcm = function(m,n) {
	if(m < 0) {
		m = -m;
	} else {
		m = m;
	}
	if(n < 0) {
		n = -n;
	} else {
		n = n;
	}
	if(n == 0) {
		return m;
	}
	return m * (n / thx_Ints.gcd(m,n) | 0);
};
thx_Ints.rpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	return StringTools.rpad("" + v,pad,len);
};
thx_Ints.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.parse = function(s,base) {
	if(null == base) {
		if(s.substring(0,2) == "0x") {
			base = 16;
		} else {
			base = 10;
		}
	}
	var v = parseInt(s,base);
	if(isNaN(v)) {
		return null;
	} else {
		return v;
	}
};
thx_Ints.random = function(min,max) {
	if(min == null) {
		min = 0;
	}
	return Std.random(max + 1) + min;
};
thx_Ints.range = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	if(null == stop) {
		stop = start;
		start = 0;
	}
	if((stop - start) / step == Infinity) {
		throw new js__$Boot_HaxeError("infinite range");
	}
	var range = [];
	var i = -1;
	var j;
	if(step < 0) {
		while(true) {
			j = start + step * ++i;
			if(!(j > stop)) {
				break;
			}
			range.push(j);
		}
	} else {
		while(true) {
			j = start + step * ++i;
			if(!(j < stop)) {
				break;
			}
			range.push(j);
		}
	}
	return range;
};
thx_Ints.rangeIter = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	return new thx_RangeIterator(start,stop,step);
};
thx_Ints.toString = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBase = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBool = function(v) {
	return v != 0;
};
thx_Ints.toInt = function(s,base) {
	return thx_Ints.parse(s,base);
};
thx_Ints.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Ints.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_RangeIterator = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	this.current = start;
	this.stop = stop;
	this.step = step;
};
thx_RangeIterator.__name__ = ["thx","RangeIterator"];
thx_RangeIterator.prototype = {
	current: null
	,stop: null
	,step: null
	,hasNext: function() {
		if(!(this.stop == null || this.step >= 0 && this.current < this.stop)) {
			if(this.step < 0) {
				return this.current > this.stop;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,next: function() {
		var result = this.current;
		this.current += this.step;
		return result;
	}
	,__class__: thx_RangeIterator
};
var thx_Iterables = function() { };
thx_Iterables.__name__ = ["thx","Iterables"];
thx_Iterables.all = function(it,predicate) {
	return thx_Iterators.all($iterator(it)(),predicate);
};
thx_Iterables.any = function(it,predicate) {
	return thx_Iterators.any($iterator(it)(),predicate);
};
thx_Iterables.eachPair = function(it,handler) {
	thx_Iterators.eachPair($iterator(it)(),handler);
	return;
};
thx_Iterables.equals = function(a,b,equality) {
	return thx_Iterators.equals($iterator(a)(),$iterator(b)(),equality);
};
thx_Iterables.filter = function(it,predicate) {
	return thx_Iterators.filter($iterator(it)(),predicate);
};
thx_Iterables.find = function(it,predicate) {
	return thx_Iterators.find($iterator(it)(),predicate);
};
thx_Iterables.first = function(it) {
	return thx_Iterators.first($iterator(it)());
};
thx_Iterables.get = function(it,index) {
	return thx_Iterators.get($iterator(it)(),index);
};
thx_Iterables.last = function(it) {
	return thx_Iterators.last($iterator(it)());
};
thx_Iterables.hasElements = function(it) {
	return $iterator(it)().hasNext();
};
thx_Iterables.indexOf = function(it,element) {
	return thx_Iterators.indexOf($iterator(it)(),element);
};
thx_Iterables.isEmpty = function(it) {
	return !$iterator(it)().hasNext();
};
thx_Iterables.isIterable = function(v) {
	if(!Lambda.has(Reflect.isObject(v) && null == (v == null?null:js_Boot.getClass(v))?Reflect.fields(v):Type.getInstanceFields(v == null?null:js_Boot.getClass(v)),"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
thx_Iterables.map = function(it,f) {
	return thx_Iterators.map($iterator(it)(),f);
};
thx_Iterables.mapi = function(it,f) {
	return thx_Iterators.mapi($iterator(it)(),f);
};
thx_Iterables.order = function(it,sort) {
	return thx_Iterators.order($iterator(it)(),sort);
};
thx_Iterables.reduce = function(it,callback,initial) {
	return thx_Iterators.reduce($iterator(it)(),callback,initial);
};
thx_Iterables.reducei = function(it,callback,initial) {
	return thx_Iterators.reducei($iterator(it)(),callback,initial);
};
thx_Iterables.toArray = function(it) {
	return thx_Iterators.toArray($iterator(it)());
};
thx_Iterables.minBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var a = [tmp.next()];
		if(thx_Options.any(found,(function(a1) {
			return function(a0) {
				return ord(f(a0),f(a1[0])) == thx_OrderingImpl.LT;
			};
		})(a))) {
			found = found;
		} else {
			found = haxe_ds_Option.Some(a[0]);
		}
	}
	return found;
};
thx_Iterables.maxBy = function(it,f,ord) {
	return thx_Iterables.minBy(it,f,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.min = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,ord);
};
thx_Iterables.max = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.extremaBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var a = tmp.next();
		switch(found[1]) {
		case 1:
			found = haxe_ds_Option.Some({ _0 : a, _1 : a});
			break;
		case 0:
			var t = found[2];
			if(ord(f(a),f(t._0)) == thx_OrderingImpl.LT) {
				found = haxe_ds_Option.Some({ _0 : a, _1 : t._1});
			} else {
				var t1 = found[2];
				if(ord(f(a),f(t1._1)) == thx_OrderingImpl.GT) {
					found = haxe_ds_Option.Some({ _0 : t1._0, _1 : a});
				} else {
					found = found;
				}
			}
			break;
		default:
			found = found;
		}
	}
	return found;
};
thx_Iterables.extrema = function(it,ord) {
	return thx_Iterables.extremaBy(it,thx_Functions.identity,ord);
};
thx_Iterables.unzip = function(it) {
	return thx_Iterators.unzip($iterator(it)());
};
thx_Iterables.unzip3 = function(it) {
	return thx_Iterators.unzip3($iterator(it)());
};
thx_Iterables.unzip4 = function(it) {
	return thx_Iterators.unzip4($iterator(it)());
};
thx_Iterables.unzip5 = function(it) {
	return thx_Iterators.unzip5($iterator(it)());
};
thx_Iterables.zip = function(it1,it2) {
	return thx_Iterators.zip($iterator(it1)(),$iterator(it2)());
};
thx_Iterables.zip3 = function(it1,it2,it3) {
	return thx_Iterators.zip3($iterator(it1)(),$iterator(it2)(),$iterator(it3)());
};
thx_Iterables.zip4 = function(it1,it2,it3,it4) {
	return thx_Iterators.zip4($iterator(it1)(),$iterator(it2)(),$iterator(it3)(),$iterator(it4)());
};
thx_Iterables.zip5 = function(it1,it2,it3,it4,it5) {
	return thx_Iterators.zip5($iterator(it1)(),$iterator(it2)(),$iterator(it3)(),$iterator(it4)(),$iterator(it5)());
};
var thx_Iterators = function() { };
thx_Iterators.__name__ = ["thx","Iterators"];
thx_Iterators.all = function(it,predicate) {
	while(it.hasNext()) if(!predicate(it.next())) {
		return false;
	}
	return true;
};
thx_Iterators.any = function(it,predicate) {
	while(it.hasNext()) if(predicate(it.next())) {
		return true;
	}
	return false;
};
thx_Iterators.equals = function(a,b,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var an;
	var bn;
	while(true) {
		an = a.hasNext();
		bn = b.hasNext();
		if(!an && !bn) {
			return true;
		}
		if(!an || !bn) {
			return false;
		}
		if(!equality(a.next(),b.next())) {
			return false;
		}
	}
};
thx_Iterators.get = function(it,index) {
	var pos = 0;
	while(it.hasNext()) {
		var i = it.next();
		if(pos++ == index) {
			return i;
		}
	}
	return null;
};
thx_Iterators.eachPair = function(it,handler) {
	thx_Arrays.eachPair(thx_Iterators.toArray(it),handler);
};
thx_Iterators.filter = function(it,predicate) {
	return thx_Iterators.reduce(it,function(acc,element) {
		if(predicate(element)) {
			acc.push(element);
		}
		return acc;
	},[]);
};
thx_Iterators.find = function(it,f) {
	while(it.hasNext()) {
		var element = it.next();
		if(f(element)) {
			return element;
		}
	}
	return null;
};
thx_Iterators.first = function(it) {
	if(it.hasNext()) {
		return it.next();
	} else {
		return null;
	}
};
thx_Iterators.hasElements = function(it) {
	return it.hasNext();
};
thx_Iterators.indexOf = function(it,element) {
	var pos = 0;
	while(it.hasNext()) {
		if(element == it.next()) {
			return pos;
		}
		++pos;
	}
	return -1;
};
thx_Iterators.isEmpty = function(it) {
	return !it.hasNext();
};
thx_Iterators.isIterator = function(v) {
	var fields = Reflect.isObject(v) && null == (v == null?null:js_Boot.getClass(v))?Reflect.fields(v):Type.getInstanceFields(v == null?null:js_Boot.getClass(v));
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
thx_Iterators.last = function(it) {
	var buf = null;
	while(it.hasNext()) buf = it.next();
	return buf;
};
thx_Iterators.map = function(it,f) {
	var acc = [];
	while(it.hasNext()) acc.push(f(it.next()));
	return acc;
};
thx_Iterators.mapi = function(it,f) {
	var acc = [];
	var i = 0;
	while(it.hasNext()) acc.push(f(it.next(),i++));
	return acc;
};
thx_Iterators.order = function(it,sort) {
	var n = thx_Iterators.toArray(it);
	n.sort(sort);
	return n;
};
thx_Iterators.reduce = function(it,callback,initial) {
	thx_Iterators.map(it,function(v) {
		initial = callback(initial,v);
	});
	return initial;
};
thx_Iterators.reducei = function(it,callback,initial) {
	thx_Iterators.mapi(it,function(v,i) {
		initial = callback(initial,v,i);
	});
	return initial;
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	while(it.hasNext()) elements.push(it.next());
	return elements;
};
thx_Iterators.unzip = function(it) {
	var a1 = [];
	var a2 = [];
	thx_Iterators.map(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	return { _0 : a1, _1 : a2};
};
thx_Iterators.unzip3 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	thx_Iterators.map(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	return { _0 : a1, _1 : a2, _2 : a3};
};
thx_Iterators.unzip4 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	thx_Iterators.map(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	return { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
};
thx_Iterators.unzip5 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	thx_Iterators.map(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	return { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
};
thx_Iterators.zip = function(it1,it2) {
	var array = [];
	while(it1.hasNext() && it2.hasNext()) array.push({ _0 : it1.next(), _1 : it2.next()});
	return array;
};
thx_Iterators.zip3 = function(it1,it2,it3) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext()) array.push({ _0 : it1.next(), _1 : it2.next(), _2 : it3.next()});
	return array;
};
thx_Iterators.zip4 = function(it1,it2,it3,it4) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext()) array.push({ _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next()});
	return array;
};
thx_Iterators.zip5 = function(it1,it2,it3,it4,it5) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext() && it5.hasNext()) array.push({ _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next(), _4 : it5.next()});
	return array;
};
var thx_Maps = function() { };
thx_Maps.__name__ = ["thx","Maps"];
thx_Maps.copyTo = function(src,dst) {
	var tmp = src.keys();
	while(tmp.hasNext()) {
		var key = tmp.next();
		dst.set(key,src.get(key));
	}
	return dst;
};
thx_Maps.tuples = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return { _0 : key, _1 : map.get(key)};
	});
};
thx_Maps.mapValues = function(map,f,acc) {
	return thx_Maps.reduce(map,function(m,t) {
		m.set(t._0,f(t._1));
		return m;
	},acc);
};
thx_Maps.reduce = function(map,f,acc) {
	return thx_Maps.tuples(map).reduce(f,acc);
};
thx_Maps.values = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return map.get(key);
	});
};
thx_Maps.getOption = function(map,key) {
	var value = map.get(key);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Maps.toObject = function(map) {
	return thx_Maps.tuples(map).reduce(function(o,t) {
		o[t._0] = t._1;
		return o;
	},{ });
};
thx_Maps.getAlt = function(map,key,alt) {
	var v = map.get(key);
	if(null == v) {
		return alt;
	} else {
		return v;
	}
};
thx_Maps.isMap = function(v) {
	return js_Boot.__instanceof(v,haxe_IMap);
};
thx_Maps.string = function(m) {
	return "[" + thx_Maps.tuples(m).map(function(t) {
		return thx_Dynamics.string(t._0) + " => " + thx_Dynamics.string(t._1);
	}).join(", ") + "]";
};
thx_Maps.merge = function(dest,sources) {
	return sources.reduce(function(result,source) {
		return thx_Iterators.reduce(source.keys(),function(result1,key) {
			result1.set(key,source.get(key));
			return result1;
		},result);
	},dest);
};
var thx__$Monoid_Monoid_$Impl_$ = {};
thx__$Monoid_Monoid_$Impl_$.__name__ = ["thx","_Monoid","Monoid_Impl_"];
thx__$Monoid_Monoid_$Impl_$.get_semigroup = function(this1) {
	return this1.append;
};
thx__$Monoid_Monoid_$Impl_$.get_zero = function(this1) {
	return this1.zero;
};
thx__$Monoid_Monoid_$Impl_$.append = function(this1,a0,a1) {
	return this1.append(a0,a1);
};
var thx__$Nel_Nel_$Impl_$ = {};
thx__$Nel_Nel_$Impl_$.__name__ = ["thx","_Nel","Nel_Impl_"];
thx__$Nel_Nel_$Impl_$.nel = function(hd,tl) {
	var _g = thx__$Nel_Nel_$Impl_$.fromArray(tl);
	switch(_g[1]) {
	case 0:
		return thx__$Nel_Nel_$Impl_$.cons(hd,_g[2]);
	case 1:
		return thx__$Nel_Nel_$Impl_$.pure(hd);
	}
};
thx__$Nel_Nel_$Impl_$.pure = function(a) {
	return thx_NonEmptyList.Single(a);
};
thx__$Nel_Nel_$Impl_$.cons = function(a,nl) {
	return thx_NonEmptyList.ConsNel(a,nl);
};
thx__$Nel_Nel_$Impl_$.fromArray = function(arr) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var res = thx_NonEmptyList.Single(arr[arr.length - 1]);
		var tmp = thx_Ints.rangeIter(arr.length - 2,-1,-1);
		while(tmp.hasNext()) res = thx_NonEmptyList.ConsNel(arr[tmp.next()],res);
		return haxe_ds_Option.Some(res);
	}
};
thx__$Nel_Nel_$Impl_$.map = function(this1,f) {
	var fb = f;
	return thx__$Nel_Nel_$Impl_$.flatMap(this1,function(v) {
		return thx__$Nel_Nel_$Impl_$.pure(fb(v));
	});
};
thx__$Nel_Nel_$Impl_$.flatMap = function(this1,f) {
	switch(this1[1]) {
	case 0:
		return f(this1[2]);
	case 1:
		return thx__$Nel_Nel_$Impl_$.append(f(this1[2]),thx__$Nel_Nel_$Impl_$.flatMap(this1[3],f));
	}
};
thx__$Nel_Nel_$Impl_$.append = function(this1,nel) {
	switch(this1[1]) {
	case 0:
		return thx_NonEmptyList.ConsNel(this1[2],nel);
	case 1:
		return thx_NonEmptyList.ConsNel(this1[2],thx__$Nel_Nel_$Impl_$.append(this1[3],nel));
	}
};
thx__$Nel_Nel_$Impl_$.toArray = function(this1) {
	var go = null;
	go = function(acc,xs) {
		switch(xs[1]) {
		case 0:
			return thx_Arrays.append(acc,xs[2]);
		case 1:
			return go(thx_Arrays.append(acc,xs[2]),xs[3]);
		}
	};
	var result = go([],this1).slice();
	result.reverse();
	return result;
};
thx__$Nel_Nel_$Impl_$.semigroup = function() {
	return function(nl,nr) {
		return thx__$Nel_Nel_$Impl_$.append(nl,nr);
	};
};
var thx_NonEmptyList = { __ename__ : ["thx","NonEmptyList"], __constructs__ : ["Single","ConsNel"] };
thx_NonEmptyList.Single = function(x) { var $x = ["Single",0,x]; $x.__enum__ = thx_NonEmptyList; return $x; };
thx_NonEmptyList.ConsNel = function(x,xs) { var $x = ["ConsNel",1,x,xs]; $x.__enum__ = thx_NonEmptyList; return $x; };
var thx_Nil = { __ename__ : ["thx","Nil"], __constructs__ : ["nil"] };
thx_Nil.nil = ["nil",0];
thx_Nil.nil.__enum__ = thx_Nil;
var thx_Objects = function() { };
thx_Objects.__name__ = ["thx","Objects"];
thx_Objects.compare = function(a,b) {
	var v;
	var fields = Reflect.fields(a);
	v = thx_Arrays.compare(fields,Reflect.fields(b));
	if(v != 0) {
		return v;
	}
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		v = thx_Dynamics.compare(Reflect.field(a,field),Reflect.field(b,field));
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Objects.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_Objects.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_Objects.fields = function(o) {
	return Reflect.fields(o);
};
thx_Objects.combine = function(first,second) {
	var to = { };
	var _g = 0;
	var _g1 = Reflect.fields(first);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(first,field);
	}
	var _g2 = 0;
	var _g11 = Reflect.fields(second);
	while(_g2 < _g11.length) {
		var field1 = _g11[_g2];
		++_g2;
		to[field1] = Reflect.field(second,field1);
	}
	return to;
};
thx_Objects.assign = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_Objects.copyTo = function(src,dst,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = 0;
	var _g1 = Reflect.fields(src);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var sv = thx_Dynamics.clone(Reflect.field(src,field),cloneInstances);
		var dv = Reflect.field(dst,field);
		var tmp;
		var tmp1;
		if(Reflect.isObject(sv)) {
			var tmp2;
			var o = sv;
			if(o == null) {
				tmp2 = null;
			} else {
				tmp2 = js_Boot.getClass(o);
			}
			tmp1 = null == tmp2;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			if(Reflect.isObject(dv)) {
				var tmp3;
				var o1 = dv;
				if(o1 == null) {
					tmp3 = null;
				} else {
					tmp3 = js_Boot.getClass(o1);
				}
				tmp = null == tmp3;
			} else {
				tmp = false;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			thx_Objects.copyTo(sv,dv);
		} else {
			dst[field] = sv;
		}
	}
	return dst;
};
thx_Objects.clone = function(src,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	return thx_Dynamics.clone(src,cloneInstances);
};
thx_Objects.toMap = function(o) {
	return thx_Objects.tuples(o).reduce(function(map,t) {
		var value = t._1;
		var key = t._0;
		if(__map_reserved[key] != null) {
			map.setReserved(key,value);
		} else {
			map.h[key] = value;
		}
		return map;
	},new haxe_ds_StringMap());
};
thx_Objects.size = function(o) {
	return Reflect.fields(o).length;
};
thx_Objects.string = function(o) {
	return "{" + Reflect.fields(o).map(function(key) {
		var v = Reflect.field(o,key);
		return "" + key + " : " + (typeof(v) == "string"?thx_Strings.quote(v):thx_Dynamics.string(v));
	}).join(", ") + "}";
};
thx_Objects.stringImpl = function(o,cache) {
};
thx_Objects.values = function(o) {
	return Reflect.fields(o).map(function(key) {
		return Reflect.field(o,key);
	});
};
thx_Objects.tuples = function(o) {
	return Reflect.fields(o).map(function(key) {
		return { _0 : key, _1 : Reflect.field(o,key)};
	});
};
thx_Objects.hasPath = function(o,path) {
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var arr;
			var value = current;
			if((value instanceof Array)) {
				arr = value;
			} else {
				arr = null;
			}
			if(null == arr || arr.length <= index) {
				return false;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return false;
		}
	}
	return true;
};
thx_Objects.hasPathValue = function(o,path) {
	return thx_Objects.getPath(o,path) != null;
};
thx_Objects.getPath = function(o,path) {
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var arr;
			var value = current;
			if((value instanceof Array)) {
				arr = value;
			} else {
				arr = null;
			}
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return null;
		}
	}
	return current;
};
thx_Objects.getPathOr = function(o,path,alt) {
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var arr;
			var value = current;
			if((value instanceof Array)) {
				arr = value;
			} else {
				arr = null;
			}
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return alt;
		}
	}
	return current;
};
thx_Objects.setPath = function(o,path,val) {
	var paths = path.split(".");
	var current = o;
	var _g1 = 0;
	var _g = paths.length - 1;
	while(_g1 < _g) {
		var i = _g1++;
		var currentPath = paths[i];
		var nextPath = paths[i + 1];
		if(thx_Strings.DIGITS.match(currentPath) || currentPath == "*") {
			var index = currentPath == "*"?current.length:Std.parseInt(currentPath);
			if(current[index] == null) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[index] = [];
				} else {
					current[index] = { };
				}
			}
			current = current[index];
		} else {
			if(!Object.prototype.hasOwnProperty.call(current,currentPath)) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[currentPath] = [];
				} else {
					current[currentPath] = { };
				}
			}
			current = Reflect.field(current,currentPath);
		}
	}
	var tmp = paths[paths.length - 1];
	if(thx_Strings.DIGITS.match(tmp)) {
		current[Std.parseInt(tmp)] = val;
	} else if(tmp == "*") {
		current.push(val);
	} else {
		current[tmp] = val;
	}
	return o;
};
thx_Objects.removePath = function(o,path) {
	var paths = path.split(".");
	var target = paths.pop();
	try {
		var sub = paths.reduce(function(existing,nextPath) {
			if(nextPath == "*") {
				return existing.pop();
			} else if(thx_Strings.DIGITS.match(nextPath)) {
				return existing[Std.parseInt(nextPath)];
			} else {
				return Reflect.field(existing,nextPath);
			}
		},o);
		if(null != sub) {
			Reflect.deleteField(sub,target);
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
	}
	return o;
};
var thx_Options = function() { };
thx_Options.__name__ = ["thx","Options"];
thx_Options.ofValue = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.maybe = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.equals = function(a,b,eq) {
	switch(a[1]) {
	case 1:
		switch(b[1]) {
		case 1:
			return true;
		default:
			return false;
		}
		break;
	case 0:
		switch(b[1]) {
		case 0:
			var a1 = a[2];
			var b1 = b[2];
			if(null == eq) {
				eq = function(a2,b2) {
					return a2 == b2;
				};
			}
			return eq(a1,b1);
		default:
			return false;
		}
		break;
	}
};
thx_Options.equalsValue = function(a,b,eq) {
	return thx_Options.equals(a,null == b?haxe_ds_Option.None:haxe_ds_Option.Some(b),eq);
};
thx_Options.map = function(option,callback) {
	switch(option[1]) {
	case 1:
		return haxe_ds_Option.None;
	case 0:
		return haxe_ds_Option.Some(callback(option[2]));
	}
};
thx_Options.ap = function(option,fopt) {
	switch(option[1]) {
	case 1:
		return haxe_ds_Option.None;
	case 0:
		var v = option[2];
		return thx_Options.map(fopt,function(f) {
			return f(v);
		});
	}
};
thx_Options.flatMap = function(option,callback) {
	switch(option[1]) {
	case 1:
		return haxe_ds_Option.None;
	case 0:
		return callback(option[2]);
	}
};
thx_Options.join = function(option) {
	switch(option[1]) {
	case 1:
		return haxe_ds_Option.None;
	case 0:
		return option[2];
	}
};
thx_Options.cata = function(option,ifNone,f) {
	switch(option[1]) {
	case 1:
		return ifNone;
	case 0:
		return f(option[2]);
	}
};
thx_Options.foldLeft = function(option,b,f) {
	switch(option[1]) {
	case 1:
		return b;
	case 0:
		return f(b,option[2]);
	}
};
thx_Options.filter = function(option,f) {
	switch(option[1]) {
	case 0:
		if(f(option[2])) {
			return option;
		} else {
			return haxe_ds_Option.None;
		}
		break;
	default:
		return haxe_ds_Option.None;
	}
};
thx_Options.toArray = function(option) {
	switch(option[1]) {
	case 1:
		return [];
	case 0:
		return [option[2]];
	}
};
thx_Options.toBool = function(option) {
	switch(option[1]) {
	case 1:
		return false;
	case 0:
		return true;
	}
};
thx_Options.toOption = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.get = function(option) {
	switch(option[1]) {
	case 1:
		return null;
	case 0:
		return option[2];
	}
};
thx_Options.getOrElse = function(option,alt) {
	switch(option[1]) {
	case 1:
		return alt;
	case 0:
		return option[2];
	}
};
thx_Options.orElse = function(option,alt) {
	switch(option[1]) {
	case 1:
		return alt;
	case 0:
		return option;
	}
};
thx_Options.all = function(option,f) {
	switch(option[1]) {
	case 1:
		return true;
	case 0:
		return f(option[2]);
	}
};
thx_Options.any = function(option,f) {
	switch(option[1]) {
	case 1:
		return false;
	case 0:
		return f(option[2]);
	}
};
thx_Options.traverseValidation = function(option,f) {
	switch(option[1]) {
	case 0:
		return thx__$Validation_Validation_$Impl_$.ap(f(option[2]),thx_Either.Right(function(v) {
			return haxe_ds_Option.Some(v);
		}),function(e1,e2) {
			throw new js__$Boot_HaxeError("Unreachable");
		});
	case 1:
		return thx_Either.Right(haxe_ds_Option.None);
	}
};
thx_Options.toSuccess = function(option,error) {
	switch(option[1]) {
	case 1:
		return thx_Either.Left(error);
	case 0:
		return thx_Either.Right(option[2]);
	}
};
thx_Options.toSuccessNel = function(option,error) {
	switch(option[1]) {
	case 1:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
	case 0:
		return thx_Either.Right(option[2]);
	}
};
thx_Options.ap2 = function(f,v1,v2) {
	return thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(f)));
};
thx_Options.ap3 = function(f,v1,v2,v3) {
	var f1 = f;
	return thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	}))));
};
thx_Options.ap4 = function(f,v1,v2,v3,v4) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})))));
};
thx_Options.ap5 = function(f,v1,v2,v3,v4,v5) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	}))))));
};
thx_Options.ap6 = function(f,v1,v2,v3,v4,v5,v6) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})))))));
};
thx_Options.ap7 = function(f,v1,v2,v3,v4,v5,v6,v7) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	}))))))));
};
thx_Options.ap8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx_Options.ap(v8,thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})))))))));
};
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = ["thx","_ReadonlyArray","ReadonlyArray_Impl_"];
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.empty = function() {
	return [];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.lastIndexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var len = this1.length;
	var _g1 = 0;
	while(_g1 < len) {
		var i = _g1++;
		if(eq(el,this1[len - i - 1])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get = function(this1,index) {
	return this1[index];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.head = function(this1) {
	return this1[0];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.tail = function(this1) {
	return this1.slice(1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reverse = function(this1) {
	var arr = this1.slice();
	arr.reverse();
	return arr;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.toArray = function(this1) {
	return this1.slice();
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unsafe = function(this1) {
	return this1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.concat = function(this1,that) {
	return this1.concat(that);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAfter = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		pos = this1.length - 1;
	}
	var pos1 = pos + 1;
	return this1.slice(0,pos1).concat([el]).concat(this1.slice(pos1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertBefore = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replace = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		throw new thx_Error("unable to find reference element",null,{ fileName : "ReadonlyArray.hx", lineNumber : 75, className : "thx._ReadonlyArray.ReadonlyArray_Impl_", methodName : "replace"});
	}
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replaceAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.remove = function(this1,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,el,eq);
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.removeAt = function(this1,pos) {
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.prepend = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.append = function(this1,el) {
	return this1.concat([el]);
};
var thx__$Result_Result_$Impl_$ = {};
thx__$Result_Result_$Impl_$.__name__ = ["thx","_Result","Result_Impl_"];
thx__$Result_Result_$Impl_$.optionValue = function(this1) {
	switch(this1[1]) {
	case 1:
		return haxe_ds_Option.Some(this1[2]);
	default:
		return haxe_ds_Option.None;
	}
};
thx__$Result_Result_$Impl_$.optionError = function(this1) {
	switch(this1[1]) {
	case 0:
		return haxe_ds_Option.Some(this1[2]);
	default:
		return haxe_ds_Option.None;
	}
};
thx__$Result_Result_$Impl_$.value = function(this1) {
	switch(this1[1]) {
	case 1:
		return this1[2];
	default:
		return null;
	}
};
thx__$Result_Result_$Impl_$.error = function(this1) {
	switch(this1[1]) {
	case 0:
		return this1[2];
	default:
		return null;
	}
};
thx__$Result_Result_$Impl_$.get_isSuccess = function(this1) {
	switch(this1[1]) {
	case 1:
		return true;
	default:
		return false;
	}
};
thx__$Result_Result_$Impl_$.get_isFailure = function(this1) {
	switch(this1[1]) {
	case 0:
		return true;
	default:
		return false;
	}
};
var thx__$Semigroup_Semigroup_$Impl_$ = {};
thx__$Semigroup_Semigroup_$Impl_$.__name__ = ["thx","_Semigroup","Semigroup_Impl_"];
thx__$Semigroup_Semigroup_$Impl_$.get_append = function(this1) {
	return this1;
};
var thx__$Set_Set_$Impl_$ = {};
thx__$Set_Set_$Impl_$.__name__ = ["thx","_Set","Set_Impl_"];
thx__$Set_Set_$Impl_$.createString = function(it) {
	var map = new haxe_ds_StringMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createInt = function(it) {
	var map = new haxe_ds_IntMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createObject = function(it) {
	var map = new haxe_ds_ObjectMap();
	var set = map;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createEnum = function(arr) {
	var map = new haxe_ds_EnumValueMap();
	var set = map;
	if(null != arr) {
		thx__$Set_Set_$Impl_$.pushMany(set,arr);
	}
	return set;
};
thx__$Set_Set_$Impl_$._new = function(map) {
	return map;
};
thx__$Set_Set_$Impl_$.add = function(this1,v) {
	if(this1.exists(v)) {
		return false;
	} else {
		this1.set(v,true);
		return true;
	}
};
thx__$Set_Set_$Impl_$.copy = function(this1) {
	var inst = thx__$Set_Set_$Impl_$.empty(this1);
	var tmp = this1.keys();
	while(tmp.hasNext()) inst.set(tmp.next(),true);
	return inst;
};
thx__$Set_Set_$Impl_$.empty = function(this1) {
	return Type.createInstance(this1 == null?null:js_Boot.getClass(this1),[]);
};
thx__$Set_Set_$Impl_$.difference = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.copy(this1);
	var tmp = $iterator(thx__$Set_Set_$Impl_$)(set);
	while(tmp.hasNext()) result.remove(tmp.next());
	return result;
};
thx__$Set_Set_$Impl_$.filter = function(this1,predicate) {
	var tmp = thx__$Set_Set_$Impl_$.empty(this1);
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		if(predicate(v)) {
			thx__$Set_Set_$Impl_$.add(acc,v);
		}
		return acc;
	},tmp);
};
thx__$Set_Set_$Impl_$.map = function(this1,f) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		acc.push(f(v));
		return acc;
	},[]);
};
thx__$Set_Set_$Impl_$.exists = function(this1,v) {
	return this1.exists(v);
};
thx__$Set_Set_$Impl_$.remove = function(this1,v) {
	return this1.remove(v);
};
thx__$Set_Set_$Impl_$.intersection = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.empty(this1);
	var tmp = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(tmp.hasNext()) {
		var item = tmp.next();
		if(set.exists(item)) {
			result.set(item,true);
		}
	}
	return result;
};
thx__$Set_Set_$Impl_$.push = function(this1,v) {
	this1.set(v,true);
};
thx__$Set_Set_$Impl_$.pushMany = function(this1,values) {
	var tmp = $iterator(values)();
	while(tmp.hasNext()) this1.set(tmp.next(),true);
};
thx__$Set_Set_$Impl_$.reduce = function(this1,handler,acc) {
	var tmp = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(tmp.hasNext()) acc = handler(acc,tmp.next());
	return acc;
};
thx__$Set_Set_$Impl_$.iterator = function(this1) {
	return this1.keys();
};
thx__$Set_Set_$Impl_$.union = function(this1,set) {
	var newset = thx__$Set_Set_$Impl_$.copy(this1);
	thx__$Set_Set_$Impl_$.pushMany(newset,thx__$Set_Set_$Impl_$.toArray(set));
	return newset;
};
thx__$Set_Set_$Impl_$.toArray = function(this1) {
	var arr = [];
	var tmp = this1.keys();
	while(tmp.hasNext()) arr.push(tmp.next());
	return arr;
};
thx__$Set_Set_$Impl_$.toString = function(this1) {
	return "{" + thx__$Set_Set_$Impl_$.toArray(this1).join(", ") + "}";
};
thx__$Set_Set_$Impl_$.get_length = function(this1) {
	var l = 0;
	var tmp = this1.iterator();
	while(tmp.hasNext()) {
		tmp.next();
		++l;
	}
	return l;
};
var thx_Strings = function() { };
thx_Strings.__name__ = ["thx","Strings"];
thx_Strings.after = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.afterLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.capitalize = function(s) {
	return HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length - 1);
};
thx_Strings.capitalizeWords = function(value,whiteSpaceOnly) {
	if(whiteSpaceOnly == null) {
		whiteSpaceOnly = false;
	}
	if(whiteSpaceOnly) {
		return thx_Strings.UCWORDSWS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	} else {
		return thx_Strings.UCWORDS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,value.length - 1),thx_Strings.upperMatch);
	}
};
thx_Strings.canonicalizeNewlines = function(value) {
	return thx_Strings.CANONICALIZE_LINES.replace(value,"\n");
};
thx_Strings.caseInsensitiveCompare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	} else if(null == b) {
		return 1;
	}
	return haxe_Utf8.compare(a.toLowerCase(),b.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWith = function(s,end) {
	return StringTools.endsWith(s.toLowerCase(),end.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWithAny = function(s,values) {
	return thx_Strings.endsWithAny(s.toLowerCase(),values.map(function(v) {
		return v.toLowerCase();
	}));
};
thx_Strings.caseInsensitiveStartsWith = function(s,start) {
	return StringTools.startsWith(s.toLowerCase(),start.toLowerCase());
};
thx_Strings.caseInsensitiveStartsWithAny = function(s,values) {
	return thx_Strings.startsWithAny(s.toLowerCase(),values.map(function(v) {
		return v.toLowerCase();
	}));
};
thx_Strings.collapse = function(value) {
	return thx_Strings.WSG.replace(StringTools.trim(value)," ");
};
thx_Strings.compare = function(a,b) {
	return haxe_Utf8.compare(a,b);
};
thx_Strings.caseInsensitiveContains = function(s,test) {
	return s.toLowerCase().indexOf(test.toLowerCase()) >= 0;
};
thx_Strings.contains = function(s,test) {
	return s.indexOf(test) >= 0;
};
thx_Strings.count = function(s,test) {
	return s.split(test).length - 1;
};
thx_Strings.caseInsensitiveContainsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(a1) {
		return thx_Strings.caseInsensitiveContains(s1,a1);
	});
};
thx_Strings.containsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(a1) {
		return thx_Strings.contains(s1,a1);
	});
};
thx_Strings.dasherize = function(s) {
	return StringTools.replace(s,"_","-");
};
thx_Strings.diffAt = function(a,b) {
	var min;
	var a1 = a.length;
	var b1 = b.length;
	if(a1 < b1) {
		min = a1;
	} else {
		min = b1;
	}
	var _g1 = 0;
	var _g = min;
	while(_g1 < _g) {
		var i = _g1++;
		if(a.substring(i,i + 1) != b.substring(i,i + 1)) {
			return i;
		}
	}
	return min;
};
thx_Strings.ellipsis = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen < symboll) {
			return HxOverrides.substr(symbol,symboll - maxlen,maxlen);
		} else {
			return HxOverrides.substr(s,0,maxlen - symboll) + symbol;
		}
	} else {
		return s;
	}
};
thx_Strings.ellipsisMiddle = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen <= symboll) {
			return thx_Strings.ellipsis(s,maxlen,symbol);
		}
		var hll = Math.ceil((maxlen - symboll) / 2);
		var hlr = Math.floor((maxlen - symboll) / 2);
		return HxOverrides.substr(s,0,hll) + symbol + HxOverrides.substr(s,sl - hlr,hlr);
	} else {
		return s;
	}
};
thx_Strings.endsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(end) {
		return StringTools.endsWith(s,end);
	});
};
thx_Strings.filter = function(s,predicate) {
	return s.split("").filter(predicate).join("");
};
thx_Strings.filterCharcode = function(s,predicate) {
	return thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	}).filter(predicate).map(function(i) {
		return String.fromCharCode(i);
	}).join("");
};
thx_Strings.from = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos);
	}
};
thx_Strings.hashCode = function(value) {
	var code = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var c = HxOverrides.cca(value,_g1++);
		code = (haxe__$Int32_Int32_$Impl_$.mul(thx_Strings.HASCODE_MUL,code) + c | 0) % thx_Strings.HASCODE_MAX;
	}
	return code;
};
thx_Strings.hasContent = function(value) {
	if(value != null) {
		return value.length > 0;
	} else {
		return false;
	}
};
thx_Strings.humanize = function(s) {
	return StringTools.replace(thx_Strings.underscore(s),"_"," ");
};
thx_Strings.isAlpha = function(s) {
	if(s.length > 0) {
		return !thx_Strings.IS_ALPHA.match(s);
	} else {
		return false;
	}
};
thx_Strings.isAlphaNum = function(value) {
	return thx_Strings.ALPHANUM.match(value);
};
thx_Strings.isBreakingWhitespace = function(value) {
	return !thx_Strings.IS_BREAKINGWHITESPACE.match(value);
};
thx_Strings.isLowerCase = function(value) {
	return value.toLowerCase() == value;
};
thx_Strings.isUpperCase = function(value) {
	return value.toUpperCase() == value;
};
thx_Strings.ifEmpty = function(value,alt) {
	if(null != value && "" != value) {
		return value;
	} else {
		return alt;
	}
};
thx_Strings.isDigitsOnly = function(value) {
	return thx_Strings.DIGITS.match(value);
};
thx_Strings.isEmpty = function(value) {
	if(!(value == null)) {
		return value == "";
	} else {
		return true;
	}
};
thx_Strings.lowerCaseFirst = function(value) {
	return value.substring(0,1).toLowerCase() + value.substring(1);
};
thx_Strings.random = function(value,length) {
	if(length == null) {
		length = 1;
	}
	return HxOverrides.substr(value,Math.floor((value.length - length + 1) * Math.random()),length);
};
thx_Strings.randomSequence = function(seed,length) {
	return thx_Ints.range(0,length).map(function(_) {
		return thx_Strings.random(seed);
	}).join("");
};
thx_Strings.randomSequence64 = function(length) {
	return thx_Strings.randomSequence(haxe_crypto_Base64.CHARS,length);
};
thx_Strings.iterator = function(s) {
	return HxOverrides.iter(s.split(""));
};
thx_Strings.map = function(value,callback) {
	return value.split("").map(callback);
};
thx_Strings.remove = function(value,toremove) {
	return StringTools.replace(value,toremove,"");
};
thx_Strings.removeAfter = function(value,toremove) {
	if(StringTools.endsWith(value,toremove)) {
		return value.substring(0,value.length - toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeAt = function(value,index,length) {
	return value.substring(0,index) + value.substring(index + length);
};
thx_Strings.removeBefore = function(value,toremove) {
	if(StringTools.startsWith(value,toremove)) {
		return value.substring(toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeOne = function(value,toremove) {
	var pos = value.indexOf(toremove);
	if(pos < 0) {
		return value;
	}
	return value.substring(0,pos) + value.substring(pos + toremove.length);
};
thx_Strings.repeat = function(s,times) {
	var _g = [];
	var _g2 = 0;
	while(_g2 < times) {
		++_g2;
		_g.push(s);
	}
	return _g.join("");
};
thx_Strings.reverse = function(s) {
	var arr = s.split("");
	arr.reverse();
	return arr.join("");
};
thx_Strings.quote = function(s) {
	if(s.indexOf("\"") < 0) {
		return "\"" + s + "\"";
	} else if(s.indexOf("'") < 0) {
		return "'" + s + "'";
	} else {
		return "\"" + StringTools.replace(s,"\"","\\\"") + "\"";
	}
};
thx_Strings.splitOnce = function(s,separator) {
	var pos = s.indexOf(separator);
	if(pos < 0) {
		return [s];
	}
	return [s.substring(0,pos),s.substring(pos + separator.length)];
};
thx_Strings.startsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(start) {
		return StringTools.startsWith(s,start);
	});
};
thx_Strings.stripTags = function(s) {
	return thx_Strings.STRIPTAGS.replace(s,"");
};
thx_Strings.surround = function(s,left,right) {
	return "" + left + s + (null == right?left:right);
};
thx_Strings.toArray = function(s) {
	return s.split("");
};
thx_Strings.toCharcodes = function(s) {
	return thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	});
};
thx_Strings.toChunks = function(s,len) {
	var chunks = [];
	while(s.length > 0) {
		chunks.push(HxOverrides.substr(s,0,len));
		s = HxOverrides.substr(s,len,s.length - len);
	}
	return chunks;
};
thx_Strings.toLines = function(s) {
	return thx_Strings.SPLIT_LINES.split(s);
};
thx_Strings.trimChars = function(value,charlist) {
	return thx_Strings.trimCharsRight(thx_Strings.trimCharsLeft(value,charlist),charlist);
};
thx_Strings.trimCharsLeft = function(value,charlist) {
	var pos = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) if(charlist.indexOf(value.charAt(_g1++)) >= 0) {
		++pos;
	} else {
		break;
	}
	return value.substring(pos);
};
thx_Strings.trimCharsRight = function(value,charlist) {
	var len = value.length;
	var pos = len;
	var i;
	var _g1 = 0;
	while(_g1 < len) {
		i = len - _g1++ - 1;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			pos = i;
		} else {
			break;
		}
	}
	return value.substring(0,pos);
};
thx_Strings.underscore = function(s) {
	s = new EReg("::","g").replace(s,"/");
	s = new EReg("([A-Z]+)([A-Z][a-z])","g").replace(s,"$1_$2");
	s = new EReg("([a-z\\d])([A-Z])","g").replace(s,"$1_$2");
	s = new EReg("-","g").replace(s,"_");
	return s.toLowerCase();
};
thx_Strings.upperCaseFirst = function(value) {
	return value.substring(0,1).toUpperCase() + value.substring(1);
};
thx_Strings.upTo = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return value;
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.wrapColumns = function(s,columns,indent,newline) {
	if(newline == null) {
		newline = "\n";
	}
	if(indent == null) {
		indent = "";
	}
	if(columns == null) {
		columns = 78;
	}
	return thx_Strings.SPLIT_LINES.split(s).map(function(part) {
		return thx_Strings.wrapLine(StringTools.trim(thx_Strings.WSG.replace(part," ")),columns,indent,newline);
	}).join(newline);
};
thx_Strings.upperMatch = function(re) {
	return re.matched(0).toUpperCase();
};
thx_Strings.wrapLine = function(s,columns,indent,newline) {
	var parts = [];
	var pos = 0;
	var len = s.length;
	var ilen = indent.length;
	columns -= ilen;
	while(true) {
		if(pos + columns >= len - ilen) {
			parts.push(s.substring(pos));
			break;
		}
		var i = 0;
		while(!StringTools.isSpace(s,pos + columns - i) && i < columns) ++i;
		if(i == columns) {
			i = 0;
			while(!StringTools.isSpace(s,pos + columns + i) && pos + columns + i < len) ++i;
			parts.push(s.substring(pos,pos + columns + i));
			pos += columns + i + 1;
		} else {
			parts.push(s.substring(pos,pos + columns - i));
			pos += columns - i + 1;
		}
	}
	return indent + parts.join(newline + indent);
};
thx_Strings.lpad = function(s,$char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return thx_Strings.repeat($char,diff) + s;
	} else {
		return s;
	}
};
thx_Strings.rpad = function(s,$char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return s + thx_Strings.repeat($char,diff);
	} else {
		return s;
	}
};
var thx_TimePeriod = { __ename__ : ["thx","TimePeriod"], __constructs__ : ["Second","Minute","Hour","Day","Week","Month","Year"] };
thx_TimePeriod.Second = ["Second",0];
thx_TimePeriod.Second.__enum__ = thx_TimePeriod;
thx_TimePeriod.Minute = ["Minute",1];
thx_TimePeriod.Minute.__enum__ = thx_TimePeriod;
thx_TimePeriod.Hour = ["Hour",2];
thx_TimePeriod.Hour.__enum__ = thx_TimePeriod;
thx_TimePeriod.Day = ["Day",3];
thx_TimePeriod.Day.__enum__ = thx_TimePeriod;
thx_TimePeriod.Week = ["Week",4];
thx_TimePeriod.Week.__enum__ = thx_TimePeriod;
thx_TimePeriod.Month = ["Month",5];
thx_TimePeriod.Month.__enum__ = thx_TimePeriod;
thx_TimePeriod.Year = ["Year",6];
thx_TimePeriod.Year.__enum__ = thx_TimePeriod;
var thx_Timer = function() { };
thx_Timer.__name__ = ["thx","Timer"];
thx_Timer.debounce = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var cancel = thx_Functions.noop;
	var poll = function() {
		cancel();
		cancel = thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
		}
		poll();
	};
};
thx_Timer.throttle = function(callback,delayms,leading) {
	if(leading == null) {
		leading = false;
	}
	var waiting = false;
	var poll = function() {
		waiting = true;
		thx_Timer.delay(callback,delayms);
	};
	return function() {
		if(leading) {
			leading = false;
			callback();
			return;
		}
		if(waiting) {
			return;
		}
		poll();
	};
};
thx_Timer.repeat = function(callback,delayms) {
	var id = setInterval(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.delay = function(callback,delayms) {
	var id = setTimeout(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.frame = function(callback) {
	var cancelled = false;
	var f = thx_Functions.noop;
	var current = performance.now();
	var next;
	f = function() {
		if(cancelled) {
			return;
		}
		next = performance.now();
		callback(next - current);
		current = next;
		requestAnimationFrame(f);
	};
	requestAnimationFrame(f);
	return function() {
		cancelled = true;
	};
};
thx_Timer.nextFrame = function(callback) {
	var id = requestAnimationFrame(callback);
	return function() {
		cancelAnimationFrame(id);
	};
};
thx_Timer.immediate = function(callback) {
	var id = setImmediate(callback);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.clear = function(id) {
	clearTimeout(id);
	return;
};
thx_Timer.time = function() {
	return performance.now();
};
thx_Timer.resolution = function() {
	if(null != thx_Timer._resolution) {
		return thx_Timer._resolution;
	}
	var start = performance.now();
	var end;
	while(true) {
		end = performance.now();
		if(!(end - start == 0)) {
			break;
		}
	}
	return thx_Timer._resolution = end - start;
};
var thx__$Timestamp_Timestamp_$Impl_$ = {};
thx__$Timestamp_Timestamp_$Impl_$.__name__ = ["thx","_Timestamp","Timestamp_Impl_"];
thx__$Timestamp_Timestamp_$Impl_$.create = function(year,month,day,hour,minute,second) {
	return thx_Dates.create(year,month,day,hour,minute,second).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.now = function() {
	return new Date().getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromDate = function(d) {
	return d.getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromString = function(s) {
	return HxOverrides.strDate(s).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.toDate = function(this1) {
	return new Date(this1);
};
thx__$Timestamp_Timestamp_$Impl_$.toString = function(this1) {
	return HxOverrides.dateStr(new Date(this1));
};
thx__$Timestamp_Timestamp_$Impl_$.snapNext = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.ceil(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.ceil(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.ceil(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + 1,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + 7 - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + 1,1,0,0,0).getTime();
	case 6:
		return thx_Dates.create(new Date(this1).getFullYear() + 1,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapPrev = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.floor(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.floor(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.floor(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth(),1,0,0,0).getTime();
	case 6:
		return thx_Dates.create(new Date(this1).getFullYear(),0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapTo = function(this1,period) {
	switch(period[1]) {
	case 0:
		return Math.round(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.round(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.round(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		var mod = d.getHours() >= 12?1:0;
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + mod,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		var mod1 = wd < 3?-wd:wd > 3?7 - wd:d1.getHours() < 12?-wd:7 - wd;
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + mod1,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		var mod2 = d2.getDate() > Math.round(DateTools.getMonthDays(d2) / 2)?1:0;
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + mod2,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		var mod3 = this1 > new Date(d3.getFullYear(),6,2,0,0,0).getTime()?1:0;
		return thx_Dates.create(d3.getFullYear() + mod3,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.r = function(t,v) {
	return Math.round(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.f = function(t,v) {
	return Math.floor(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.c = function(t,v) {
	return Math.ceil(t / v) * v;
};
var thx__$Tuple_Tuple0_$Impl_$ = {};
thx__$Tuple_Tuple0_$Impl_$.__name__ = ["thx","_Tuple","Tuple0_Impl_"];
thx__$Tuple_Tuple0_$Impl_$._new = function() {
	return thx_Nil.nil;
};
thx__$Tuple_Tuple0_$Impl_$["with"] = function(this1,v) {
	return v;
};
thx__$Tuple_Tuple0_$Impl_$.toString = function(this1) {
	return "Tuple0()";
};
thx__$Tuple_Tuple0_$Impl_$.toNil = function(this1) {
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.nilToTuple = function(v) {
	return thx_Nil.nil;
};
var thx__$Tuple_Tuple1_$Impl_$ = {};
thx__$Tuple_Tuple1_$Impl_$.__name__ = ["thx","_Tuple","Tuple1_Impl_"];
thx__$Tuple_Tuple1_$Impl_$._new = function(_0) {
	return _0;
};
thx__$Tuple_Tuple1_$Impl_$.get__0 = function(this1) {
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1, _1 : v};
};
thx__$Tuple_Tuple1_$Impl_$.toString = function(this1) {
	return "Tuple1(" + Std.string(this1) + ")";
};
thx__$Tuple_Tuple1_$Impl_$.arrayToTuple = function(v) {
	return v[0];
};
var thx__$Tuple_Tuple2_$Impl_$ = {};
thx__$Tuple_Tuple2_$Impl_$.__name__ = ["thx","_Tuple","Tuple2_Impl_"];
thx__$Tuple_Tuple2_$Impl_$.of = function(_0,_1) {
	return { _0 : _0, _1 : _1};
};
thx__$Tuple_Tuple2_$Impl_$._new = function(_0,_1) {
	return { _0 : _0, _1 : _1};
};
thx__$Tuple_Tuple2_$Impl_$.get_left = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$.get_right = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.flip = function(this1) {
	return { _0 : this1._1, _1 : this1._0};
};
thx__$Tuple_Tuple2_$Impl_$.dropLeft = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.dropRight = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1._0, _1 : this1._1, _2 : v};
};
thx__$Tuple_Tuple2_$Impl_$.toString = function(this1) {
	return "Tuple2(" + Std.string(this1._0) + "," + Std.string(this1._1) + ")";
};
thx__$Tuple_Tuple2_$Impl_$.map = function(this1,f) {
	return { _0 : this1._0, _1 : f(this1._1)};
};
thx__$Tuple_Tuple2_$Impl_$.arrayToTuple2 = function(v) {
	return { _0 : v[0], _1 : v[1]};
};
var thx__$Tuple_Tuple3_$Impl_$ = {};
thx__$Tuple_Tuple3_$Impl_$.__name__ = ["thx","_Tuple","Tuple3_Impl_"];
thx__$Tuple_Tuple3_$Impl_$.of = function(_0,_1,_2) {
	return { _0 : _0, _1 : _1, _2 : _2};
};
thx__$Tuple_Tuple3_$Impl_$._new = function(_0,_1,_2) {
	return { _0 : _0, _1 : _1, _2 : _2};
};
thx__$Tuple_Tuple3_$Impl_$.flip = function(this1) {
	return { _0 : this1._2, _1 : this1._1, _2 : this1._0};
};
thx__$Tuple_Tuple3_$Impl_$.dropLeft = function(this1) {
	return { _0 : this1._1, _1 : this1._2};
};
thx__$Tuple_Tuple3_$Impl_$.dropRight = function(this1) {
	return { _0 : this1._0, _1 : this1._1};
};
thx__$Tuple_Tuple3_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : v};
};
thx__$Tuple_Tuple3_$Impl_$.toString = function(this1) {
	return "Tuple3(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + ")";
};
thx__$Tuple_Tuple3_$Impl_$.arrayToTuple3 = function(v) {
	return { _0 : v[0], _1 : v[1], _2 : v[2]};
};
thx__$Tuple_Tuple3_$Impl_$.map = function(this1,f) {
	return { _0 : this1._0, _1 : this1._1, _2 : f(this1._2)};
};
var thx__$Tuple_Tuple4_$Impl_$ = {};
thx__$Tuple_Tuple4_$Impl_$.__name__ = ["thx","_Tuple","Tuple4_Impl_"];
thx__$Tuple_Tuple4_$Impl_$.of = function(_0,_1,_2,_3) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
};
thx__$Tuple_Tuple4_$Impl_$._new = function(_0,_1,_2,_3) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
};
thx__$Tuple_Tuple4_$Impl_$.flip = function(this1) {
	return { _0 : this1._3, _1 : this1._2, _2 : this1._1, _3 : this1._0};
};
thx__$Tuple_Tuple4_$Impl_$.dropLeft = function(this1) {
	return { _0 : this1._1, _1 : this1._2, _2 : this1._3};
};
thx__$Tuple_Tuple4_$Impl_$.dropRight = function(this1) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2};
};
thx__$Tuple_Tuple4_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : v};
};
thx__$Tuple_Tuple4_$Impl_$.toString = function(this1) {
	return "Tuple4(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + ")";
};
thx__$Tuple_Tuple4_$Impl_$.arrayToTuple4 = function(v) {
	return { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3]};
};
var thx__$Tuple_Tuple5_$Impl_$ = {};
thx__$Tuple_Tuple5_$Impl_$.__name__ = ["thx","_Tuple","Tuple5_Impl_"];
thx__$Tuple_Tuple5_$Impl_$.of = function(_0,_1,_2,_3,_4) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
};
thx__$Tuple_Tuple5_$Impl_$._new = function(_0,_1,_2,_3,_4) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
};
thx__$Tuple_Tuple5_$Impl_$.flip = function(this1) {
	return { _0 : this1._4, _1 : this1._3, _2 : this1._2, _3 : this1._1, _4 : this1._0};
};
thx__$Tuple_Tuple5_$Impl_$.dropLeft = function(this1) {
	return { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4};
};
thx__$Tuple_Tuple5_$Impl_$.dropRight = function(this1) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3};
};
thx__$Tuple_Tuple5_$Impl_$["with"] = function(this1,v) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : v};
};
thx__$Tuple_Tuple5_$Impl_$.toString = function(this1) {
	return "Tuple5(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + ")";
};
thx__$Tuple_Tuple5_$Impl_$.arrayToTuple5 = function(v) {
	return { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4]};
};
var thx__$Tuple_Tuple6_$Impl_$ = {};
thx__$Tuple_Tuple6_$Impl_$.__name__ = ["thx","_Tuple","Tuple6_Impl_"];
thx__$Tuple_Tuple6_$Impl_$.of = function(_0,_1,_2,_3,_4,_5) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
};
thx__$Tuple_Tuple6_$Impl_$._new = function(_0,_1,_2,_3,_4,_5) {
	return { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
};
thx__$Tuple_Tuple6_$Impl_$.flip = function(this1) {
	return { _0 : this1._5, _1 : this1._4, _2 : this1._3, _3 : this1._2, _4 : this1._1, _5 : this1._0};
};
thx__$Tuple_Tuple6_$Impl_$.dropLeft = function(this1) {
	return { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4, _4 : this1._5};
};
thx__$Tuple_Tuple6_$Impl_$.dropRight = function(this1) {
	return { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4};
};
thx__$Tuple_Tuple6_$Impl_$.toString = function(this1) {
	return "Tuple6(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + "," + Std.string(this1._5) + ")";
};
thx__$Tuple_Tuple6_$Impl_$.arrayToTuple6 = function(v) {
	return { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4], _5 : v[5]};
};
var thx_Types = function() { };
thx_Types.__name__ = ["thx","Types"];
thx_Types.isAnonymousObject = function(v) {
	if(Reflect.isObject(v)) {
		return null == (v == null?null:js_Boot.getClass(v));
	} else {
		return false;
	}
};
thx_Types.isPrimitive = function(v) {
	var _g = Type["typeof"](v);
	switch(_g[1]) {
	case 1:case 2:case 3:
		return true;
	case 0:case 5:case 7:case 4:case 8:
		return false;
	case 6:
		return Type.getClassName(_g[2]) == "String";
	}
};
thx_Types.isEnumValue = function(v) {
	switch(Type["typeof"](v)[1]) {
	case 7:
		return true;
	default:
		return false;
	}
};
thx_Types.hasSuperClass = function(cls,sup) {
	while(null != cls) {
		if(cls == sup) {
			return true;
		}
		cls = Type.getSuperClass(cls);
	}
	return false;
};
thx_Types.sameType = function(a,b) {
	return thx_Types.toString(Type["typeof"](a)) == thx_Types.toString(Type["typeof"](b));
};
thx_Types.typeInheritance = function(type) {
	switch(type[1]) {
	case 1:
		return ["Int"];
	case 2:
		return ["Float"];
	case 3:
		return ["Bool"];
	case 4:
		return ["{}"];
	case 5:
		return ["Function"];
	case 6:
		var c = type[2];
		var classes = [];
		while(null != c) {
			classes.push(c);
			c = Type.getSuperClass(c);
		}
		return classes.map(Type.getClassName);
	case 7:
		return [Type.getEnumName(type[2])];
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.toString = function(type) {
	switch(type[1]) {
	case 0:
		return "Null";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "{}";
	case 5:
		return "Function";
	case 6:
		return Type.getClassName(type[2]);
	case 7:
		return Type.getEnumName(type[2]);
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.valueTypeInheritance = function(value) {
	return thx_Types.typeInheritance(Type["typeof"](value));
};
thx_Types.valueTypeToString = function(value) {
	return thx_Types.toString(Type["typeof"](value));
};
thx_Types.anyValueToString = function(value) {
	if(js_Boot.__instanceof(value,ValueType)) {
		return thx_Types.toString(value);
	}
	if(js_Boot.__instanceof(value,Class)) {
		return Type.getClassName(value);
	}
	if(js_Boot.__instanceof(value,Enum)) {
		return Type.getEnumName(value);
	}
	return thx_Types.toString(Type["typeof"](value));
};
var thx__$Validation_Validation_$Impl_$ = {};
thx__$Validation_Validation_$Impl_$.__name__ = ["thx","_Validation","Validation_Impl_"];
thx__$Validation_Validation_$Impl_$.validation = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.vnel = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.pure = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.success = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failure = function(e) {
	return thx_Either.Left(e);
};
thx__$Validation_Validation_$Impl_$.nn = function(a,e) {
	if(a == null) {
		return thx_Either.Left(e);
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.successNel = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failureNel = function(e) {
	return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
};
thx__$Validation_Validation_$Impl_$.nnNel = function(a,e) {
	if(a == null) {
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.get_either = function(this1) {
	return this1;
};
thx__$Validation_Validation_$Impl_$.map = function(this1,f) {
	return thx__$Validation_Validation_$Impl_$.ap(this1,thx_Either.Right(f),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	});
};
thx__$Validation_Validation_$Impl_$.ap = function(this1,v,s) {
	switch(this1[1]) {
	case 0:
		var e0 = this1[2];
		var _g = v;
		switch(_g[1]) {
		case 0:
			return thx_Either.Left((thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(e0,_g[2]));
		case 1:
			return thx_Either.Left(e0);
		}
		break;
	case 1:
		var a = this1[2];
		var _g1 = v;
		switch(_g1[1]) {
		case 0:
			return thx_Either.Left(_g1[2]);
		case 1:
			return thx_Either.Right(_g1[2](a));
		}
		break;
	}
};
thx__$Validation_Validation_$Impl_$.zip = function(this1,v,s) {
	return thx__$Validation_Validation_$Impl_$.ap(this1,thx_Eithers.map(v,function(b) {
		var _1 = b;
		return function(_0) {
			return thx__$Tuple_Tuple2_$Impl_$.of(_0,_1);
		};
	}),s);
};
thx__$Validation_Validation_$Impl_$.leftMap = function(this1,f) {
	return thx_Eithers.leftMap(this1,f);
};
thx__$Validation_Validation_$Impl_$.wrapNel = function(this1) {
	return thx_Eithers.leftMap(this1,thx__$Nel_Nel_$Impl_$.pure);
};
thx__$Validation_Validation_$Impl_$.flatMapV = function(this1,f) {
	switch(this1[1]) {
	case 0:
		return thx_Either.Left(this1[2]);
	case 1:
		return f(this1[2]);
	}
};
thx__$Validation_Validation_$Impl_$.val2 = function(f,v1,v2,s) {
	return thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(f)),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s);
};
thx__$Validation_Validation_$Impl_$.val3 = function(f,v1,v2,v3,s) {
	var f1 = f;
	return thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	})),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s);
};
thx__$Validation_Validation_$Impl_$.val4 = function(f,v1,v2,v3,v4,s) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val5 = function(f,v1,v2,v3,v4,v5,s) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	})),function(e1,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val6 = function(f,v1,v2,v3,v4,v5,v6,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})),function(e11,e2) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val7 = function(f,v1,v2,v3,v4,v5,v6,v7,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	})),function(e11,e21) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.ap(v1,thx_Either.Right(thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})),function(e11,e21) {
		throw new js__$Boot_HaxeError("Unreachable");
	}),s),s),s),s),s),s),s);
};
var thx_error_AbstractMethod = function(posInfo) {
	thx_Error.call(this,"method " + posInfo.className + "." + posInfo.methodName + "() is abstract",null,posInfo);
};
thx_error_AbstractMethod.__name__ = ["thx","error","AbstractMethod"];
thx_error_AbstractMethod.__super__ = thx_Error;
thx_error_AbstractMethod.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_AbstractMethod
});
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = ["thx","error","ErrorWrapper"];
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	innerError: null
	,__class__: thx_error_ErrorWrapper
});
var thx_promise_Future = function() {
	this.handlers = [];
	this.state = haxe_ds_Option.None;
};
thx_promise_Future.__name__ = ["thx","promise","Future"];
thx_promise_Future.sequence = function(arr) {
	return thx_promise_Future.create(function(callback) {
		var poll = null;
		poll = function(_) {
			if(arr.length == 0) {
				callback(thx_Nil.nil);
			} else {
				arr.shift().then(poll);
			}
		};
		poll(null);
	});
};
thx_promise_Future.afterAll = function(arr) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Future.all(arr).then(function(_) {
			callback(thx_Nil.nil);
		});
	});
};
thx_promise_Future.all = function(arr) {
	return thx_promise_Future.create(function(callback) {
		var results = [];
		var counter = 0;
		arr.map(function(p,i) {
			p.then(function(value) {
				results[i] = value;
				++counter;
				if(counter == arr.length) {
					callback(results);
				}
			});
		});
	});
};
thx_promise_Future.create = function(handler) {
	var future = new thx_promise_Future();
	handler($bind(future,future.setState));
	return future;
};
thx_promise_Future.flatMap = function(future) {
	return thx_promise_Future.create(function(callback) {
		future.then(function(future1) {
			future1.then(callback);
		});
	});
};
thx_promise_Future.value = function(v) {
	return thx_promise_Future.create(function(callback) {
		callback(v);
	});
};
thx_promise_Future.prototype = {
	handlers: null
	,state: null
	,delay: function(delayms) {
		if(null == delayms) {
			var future = this.map(function(value) {
				return thx_promise_Timer.immediateValue(value);
			});
			return thx_promise_Future.create(function(callback) {
				future.then(function(future1) {
					future1.then(callback);
				});
			});
		} else {
			var future2 = this.map(function(value1) {
				return thx_promise_Timer.delayValue(value1,delayms);
			});
			return thx_promise_Future.create(function(callback1) {
				future2.then(function(future3) {
					future3.then(callback1);
				});
			});
		}
	}
	,hasValue: function() {
		return thx_Options.toBool(this.state);
	}
	,map: function(handler) {
		var _g = this;
		return thx_promise_Future.create(function(callback) {
			_g.then(function(value) {
				callback(handler(value));
			});
		});
	}
	,mapAsync: function(handler) {
		var _g = this;
		return thx_promise_Future.create(function(callback) {
			_g.then(function(result) {
				handler(result,callback);
			});
		});
	}
	,mapPromise: function(handler) {
		var _g = this;
		return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
			_g.then(function(result) {
				thx_promise__$Promise_Promise_$Impl_$.failure(thx_promise__$Promise_Promise_$Impl_$.success(handler(result),resolve),reject);
			});
		});
	}
	,mapFuture: function(handler) {
		var future = this.map(handler);
		return thx_promise_Future.create(function(callback) {
			future.then(function(future1) {
				future1.then(callback);
			});
		});
	}
	,then: function(handler) {
		this.handlers.push(handler);
		this.update();
		return this;
	}
	,toString: function() {
		return "Future";
	}
	,setState: function(newstate) {
		var _g = this.state;
		switch(_g[1]) {
		case 1:
			this.state = haxe_ds_Option.Some(newstate);
			break;
		case 0:
			throw new thx_Error("future was already \"" + Std.string(_g[2]) + "\", can't apply the new state \"" + Std.string(newstate) + "\"",null,{ fileName : "Future.hx", lineNumber : 110, className : "thx.promise.Future", methodName : "setState"});
			break;
		}
		this.update();
		return this;
	}
	,update: function() {
		var _g = this.state;
		switch(_g[1]) {
		case 1:
			break;
		case 0:
			var result = _g[2];
			var index = -1;
			while(++index < this.handlers.length) this.handlers[index](result);
			this.handlers = [];
			break;
		}
	}
	,__class__: thx_promise_Future
};
var thx_promise_Futures = function() { };
thx_promise_Futures.__name__ = ["thx","promise","Futures"];
thx_promise_Futures.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		var counter = 0;
		var v1 = null;
		var v2 = null;
		var complete = function() {
			if(counter < 2) {
				return;
			}
			callback({ _0 : v1, _1 : v2});
		};
		p1.then(function(v) {
			++counter;
			v1 = v;
			complete();
		});
		p2.then(function(v3) {
			++counter;
			v2 = v3;
			complete();
		});
	});
};
thx_promise_Futures.log = function(future,prefix) {
	if(prefix == null) {
		prefix = "";
	}
	return future.then(function(r) {
		console.log("" + prefix + " VALUE: " + Std.string(r));
	});
};
var thx_promise_FutureTuple6 = function() { };
thx_promise_FutureTuple6.__name__ = ["thx","promise","FutureTuple6"];
thx_promise_FutureTuple6.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
thx_promise_FutureTuple6.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,t._2,t._3,t._4,t._5,cb);
		return;
	});
};
thx_promise_FutureTuple6.mapTupleFuture = function(future,callback) {
	var future1 = future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3,t._4,t._5);
	});
	return thx_promise_Future.create(function(callback1) {
		future1.then(function(future2) {
			future2.then(callback1);
		});
	});
};
thx_promise_FutureTuple6.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
var thx_promise_FutureTuple5 = function() { };
thx_promise_FutureTuple5.__name__ = ["thx","promise","FutureTuple5"];
thx_promise_FutureTuple5.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			var this1 = t._0;
			callback({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : t._1});
		});
	});
};
thx_promise_FutureTuple5.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_promise_FutureTuple5.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,t._2,t._3,t._4,cb);
		return;
	});
};
thx_promise_FutureTuple5.mapTupleFuture = function(future,callback) {
	var future1 = future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3,t._4);
	});
	return thx_promise_Future.create(function(callback1) {
		future1.then(function(future2) {
			future2.then(callback1);
		});
	});
};
thx_promise_FutureTuple5.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1,t._2,t._3,t._4);
	});
};
var thx_promise_FutureTuple4 = function() { };
thx_promise_FutureTuple4.__name__ = ["thx","promise","FutureTuple4"];
thx_promise_FutureTuple4.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			var this1 = t._0;
			callback({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : t._1});
		});
	});
};
thx_promise_FutureTuple4.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3);
	});
};
thx_promise_FutureTuple4.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,t._2,t._3,cb);
		return;
	});
};
thx_promise_FutureTuple4.mapTupleFuture = function(future,callback) {
	var future1 = future.map(function(t) {
		return callback(t._0,t._1,t._2,t._3);
	});
	return thx_promise_Future.create(function(callback1) {
		future1.then(function(future2) {
			future2.then(callback1);
		});
	});
};
thx_promise_FutureTuple4.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1,t._2,t._3);
	});
};
var thx_promise_FutureTuple3 = function() { };
thx_promise_FutureTuple3.__name__ = ["thx","promise","FutureTuple3"];
thx_promise_FutureTuple3.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			var this1 = t._0;
			callback({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : t._1});
		});
	});
};
thx_promise_FutureTuple3.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1,t._2);
	});
};
thx_promise_FutureTuple3.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,t._2,cb);
		return;
	});
};
thx_promise_FutureTuple3.mapTupleFuture = function(future,callback) {
	var future1 = future.map(function(t) {
		return callback(t._0,t._1,t._2);
	});
	return thx_promise_Future.create(function(callback1) {
		future1.then(function(future2) {
			future2.then(callback1);
		});
	});
};
thx_promise_FutureTuple3.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1,t._2);
	});
};
var thx_promise_FutureTuple2 = function() { };
thx_promise_FutureTuple2.__name__ = ["thx","promise","FutureTuple2"];
thx_promise_FutureTuple2.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			var this1 = t._0;
			callback({ _0 : this1._0, _1 : this1._1, _2 : t._1});
		});
	});
};
thx_promise_FutureTuple2.mapTuple = function(future,callback) {
	return future.map(function(t) {
		return callback(t._0,t._1);
	});
};
thx_promise_FutureTuple2.mapTupleAsync = function(future,callback) {
	return future.mapAsync(function(t,cb) {
		callback(t._0,t._1,cb);
		return;
	});
};
thx_promise_FutureTuple2.mapTupleFuture = function(future,callback) {
	var future1 = future.map(function(t) {
		return callback(t._0,t._1);
	});
	return thx_promise_Future.create(function(callback1) {
		future1.then(function(future2) {
			future2.then(callback1);
		});
	});
};
thx_promise_FutureTuple2.tuple = function(future,callback) {
	return future.then(function(t) {
		callback(t._0,t._1);
	});
};
var thx_promise_FutureNil = function() { };
thx_promise_FutureNil.__name__ = ["thx","promise","FutureNil"];
thx_promise_FutureNil.join = function(p1,p2) {
	return thx_promise_Future.create(function(callback) {
		thx_promise_Futures.join(p1,p2).then(function(t) {
			callback(t._1);
		});
	});
};
thx_promise_FutureNil.nil = function(p) {
	return thx_promise_Future.create(function(callback) {
		p.then(function(_) {
			callback(thx_Nil.nil);
		});
	});
};
var thx_promise__$Promise_Promise_$Impl_$ = {};
thx_promise__$Promise_Promise_$Impl_$.__name__ = ["thx","promise","_Promise","Promise_Impl_"];
thx_promise__$Promise_Promise_$Impl_$.futureToPromise = function(future) {
	return future.map(function(v) {
		return thx_Either.Right(v);
	});
};
thx_promise__$Promise_Promise_$Impl_$.sequence = function(arr) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		arr = arr.slice();
		var poll = null;
		poll = function(_) {
			if(null == arr || arr.length == 0) {
				resolve(thx_promise__$Promise_Promise_$Impl_$.nil);
			} else {
				thx_promise__$Promise_Promise_$Impl_$.mapFailure(thx_promise__$Promise_Promise_$Impl_$.mapSuccess(arr.shift(),poll),reject);
			}
		};
		poll(null);
	});
};
thx_promise__$Promise_Promise_$Impl_$.afterAll = function(arr) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.either(thx_promise__$Promise_Promise_$Impl_$.all(arr),function(_) {
			resolve(thx_Nil.nil);
		},reject);
	});
};
thx_promise__$Promise_Promise_$Impl_$.all = function(arr) {
	if(arr.length == 0) {
		return thx_promise__$Promise_Promise_$Impl_$.value([]);
	}
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		var results = [];
		var counter = 0;
		var hasError = false;
		arr.map(function(p,i) {
			thx_promise__$Promise_Promise_$Impl_$.either(p,function(value) {
				if(hasError) {
					return;
				}
				results[i] = value;
				++counter;
				if(counter == arr.length) {
					resolve(results);
				}
			},function(err) {
				if(hasError) {
					return;
				}
				hasError = true;
				reject(err);
			});
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.allSequence = function(arr) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		var results = [];
		var counter = 0;
		var poll = null;
		poll = function() {
			if(counter == arr.length) {
				resolve(results);
				return;
			}
			thx_promise__$Promise_Promise_$Impl_$.either(arr[counter++],function(value) {
				results.push(value);
				poll();
			},function(err) {
				reject(err);
			});
		};
		poll();
	});
};
thx_promise__$Promise_Promise_$Impl_$.create = function(callback) {
	return thx_promise_Future.create(function(cb) {
		callback(function(value) {
			cb(thx_Either.Right(value));
		},function(error) {
			cb(thx_Either.Left(error));
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.createFulfill = function(callback) {
	return thx_promise_Future.create(callback);
};
thx_promise__$Promise_Promise_$Impl_$.fail = function(message,pos) {
	return thx_promise__$Promise_Promise_$Impl_$.error(new thx_Error(message,null,pos));
};
thx_promise__$Promise_Promise_$Impl_$.error = function(err) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(_,reject) {
		reject(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.value = function(v) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,_) {
		resolve(v);
	});
};
thx_promise__$Promise_Promise_$Impl_$.always = function(this1,handler) {
	return this1.then(function(_) {
		handler();
	});
};
thx_promise__$Promise_Promise_$Impl_$.either = function(this1,success,failure) {
	return this1.then(function(r) {
		switch(r[1]) {
		case 1:
			success(r[2]);
			break;
		case 0:
			failure(r[2]);
			break;
		}
	});
};
thx_promise__$Promise_Promise_$Impl_$.delay = function(this1,delayms) {
	var delayms1 = delayms;
	if(null == delayms1) {
		var future = this1.map(function(value) {
			return thx_promise_Timer.immediateValue(value);
		});
		return thx_promise_Future.create(function(callback) {
			future.then(function(future1) {
				future1.then(callback);
			});
		});
	} else {
		var future2 = this1.map(function(value1) {
			return thx_promise_Timer.delayValue(value1,delayms1);
		});
		return thx_promise_Future.create(function(callback1) {
			future2.then(function(future3) {
				future3.then(callback1);
			});
		});
	}
};
thx_promise__$Promise_Promise_$Impl_$.isFailure = function(this1) {
	var _g = this1.state;
	switch(_g[1]) {
	case 1:
		return false;
	case 0:
		switch(_g[2][1]) {
		case 1:
			return false;
		default:
			return true;
		}
		break;
	}
};
thx_promise__$Promise_Promise_$Impl_$.isResolved = function(this1) {
	var _g = this1.state;
	switch(_g[1]) {
	case 1:
		return false;
	case 0:
		switch(_g[2][1]) {
		case 0:
			return false;
		default:
			return true;
		}
		break;
	}
};
thx_promise__$Promise_Promise_$Impl_$.failure = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(this1,function(_) {
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.mapAlways = function(this1,handler) {
	return this1.map(function(_) {
		return handler();
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapAlwaysAsync = function(this1,handler) {
	return this1.mapAsync(function(_,cb) {
		handler(cb);
		return;
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapAlwaysFuture = function(this1,handler) {
	var future = this1.map(function(_) {
		return handler();
	});
	return thx_promise_Future.create(function(callback) {
		future.then(function(future1) {
			future1.then(callback);
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapEither = function(this1,success,failure) {
	return this1.map(function(result) {
		switch(result[1]) {
		case 1:
			return success(result[2]);
		case 0:
			return failure(result[2]);
		}
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture = function(this1,success,failure) {
	var future = this1.map(function(result) {
		switch(result[1]) {
		case 1:
			return success(result[2]);
		case 0:
			return failure(result[2]);
		}
	});
	return thx_promise_Future.create(function(callback) {
		future.then(function(future1) {
			future1.then(callback);
		});
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapFailure = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.mapEither(this1,function(value) {
		return value;
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.mapFailureFuture = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture(this1,function(value) {
		return thx_promise_Future.value(value);
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.mapFailurePromise = function(this1,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture(this1,function(value) {
		return thx_promise__$Promise_Promise_$Impl_$.value(value);
	},failure);
};
thx_promise__$Promise_Promise_$Impl_$.mapSuccess = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture(this1,function(v) {
		try {
			return thx_promise__$Promise_Promise_$Impl_$.value(success(v));
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return thx_promise__$Promise_Promise_$Impl_$.error(thx_Error.fromDynamic(e,{ fileName : "Promise.hx", lineNumber : 178, className : "thx.promise._Promise.Promise_Impl_", methodName : "mapSuccess"}));
		}
	},function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.flatMap = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise(this1,success);
};
thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapEitherFuture(this1,success,function(err) {
		return thx_promise__$Promise_Promise_$Impl_$.error(err);
	});
};
thx_promise__$Promise_Promise_$Impl_$.mapNull = function(this1,handler) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise(this1,function(v) {
		if(null == v) {
			return handler();
		} else {
			return thx_promise__$Promise_Promise_$Impl_$.value(v);
		}
	});
};
thx_promise__$Promise_Promise_$Impl_$.success = function(this1,success) {
	return thx_promise__$Promise_Promise_$Impl_$.either(this1,success,function(_) {
	});
};
thx_promise__$Promise_Promise_$Impl_$.throwFailure = function(this1) {
	return thx_promise__$Promise_Promise_$Impl_$.failure(this1,function(err) {
		throw err;
	});
};
thx_promise__$Promise_Promise_$Impl_$.toString = function(this1) {
	return "Promise";
};
var thx_promise_Promises = function() { };
thx_promise_Promises.__name__ = ["thx","promise","Promises"];
thx_promise_Promises.join = function(p1,p2) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		var hasError = false;
		var counter = 0;
		var v1 = null;
		var v2 = null;
		var complete = function() {
			if(counter < 2) {
				return;
			}
			resolve({ _0 : v1, _1 : v2});
		};
		var handleError = function(error) {
			if(hasError) {
				return;
			}
			hasError = true;
			reject(error);
		};
		thx_promise__$Promise_Promise_$Impl_$.either(p1,function(v) {
			if(hasError) {
				return;
			}
			++counter;
			v1 = v;
			complete();
		},handleError);
		thx_promise__$Promise_Promise_$Impl_$.either(p2,function(v3) {
			if(hasError) {
				return;
			}
			++counter;
			v2 = v3;
			complete();
		},handleError);
	});
};
thx_promise_Promises.join2 = function(p1,p2) {
	return thx_promise_Promises.join(p1,p2);
};
thx_promise_Promises.join3 = function(p1,p2,p3) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(thx_promise_Promises.join(thx_promise_Promises.join(p1,p2),p3),function(values) {
		return { _0 : values._0._0, _1 : values._0._1, _2 : values._1};
	});
};
thx_promise_Promises.join4 = function(p1,p2,p3,p4) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(thx_promise_Promises.join(thx_promise_Promises.join3(p1,p2,p3),p4),function(values) {
		return { _0 : values._0._0, _1 : values._0._1, _2 : values._0._2, _3 : values._1};
	});
};
thx_promise_Promises.join5 = function(p1,p2,p3,p4,p5) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(thx_promise_Promises.join(thx_promise_Promises.join4(p1,p2,p3,p4),p5),function(values) {
		return { _0 : values._0._0, _1 : values._0._1, _2 : values._0._2, _3 : values._0._3, _4 : values._1};
	});
};
thx_promise_Promises.join6 = function(p1,p2,p3,p4,p5,p6) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(thx_promise_Promises.join(thx_promise_Promises.join5(p1,p2,p3,p4,p5),p6),function(values) {
		return { _0 : values._0._0, _1 : values._0._1, _2 : values._0._2, _3 : values._0._3, _4 : values._0._4, _5 : values._1};
	});
};
thx_promise_Promises.log = function(promise,prefix) {
	if(prefix == null) {
		prefix = "";
	}
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(r) {
		console.log("" + prefix + " SUCCESS: " + Std.string(r));
	},function(e) {
		console.log("" + prefix + " ERROR: " + e.toString());
	});
};
var thx_promise_PromiseTuple6 = function() { };
thx_promise_PromiseTuple6.__name__ = ["thx","promise","PromiseTuple6"];
thx_promise_PromiseTuple6.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise(promise,function(t) {
		return success(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
thx_promise_PromiseTuple6.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(promise,function(t) {
		return success(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
thx_promise_PromiseTuple6.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1,t._2,t._3,t._4,t._5);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseTuple5 = function() { };
thx_promise_PromiseTuple5.__name__ = ["thx","promise","PromiseTuple5"];
thx_promise_PromiseTuple5.join = function(p1,p2) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.either(thx_promise_Promises.join(p1,p2),function(t) {
			var this1 = t._0;
			resolve({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : t._1});
		},function(e) {
			reject(e);
		});
	});
};
thx_promise_PromiseTuple5.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise(promise,function(t) {
		return success(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_promise_PromiseTuple5.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(promise,function(t) {
		return success(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_promise_PromiseTuple5.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1,t._2,t._3,t._4);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseTuple4 = function() { };
thx_promise_PromiseTuple4.__name__ = ["thx","promise","PromiseTuple4"];
thx_promise_PromiseTuple4.join = function(p1,p2) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.either(thx_promise_Promises.join(p1,p2),function(t) {
			var this1 = t._0;
			resolve({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : t._1});
		},function(e) {
			reject(e);
		});
	});
};
thx_promise_PromiseTuple4.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise(promise,function(t) {
		return success(t._0,t._1,t._2,t._3);
	});
};
thx_promise_PromiseTuple4.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(promise,function(t) {
		return success(t._0,t._1,t._2,t._3);
	});
};
thx_promise_PromiseTuple4.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1,t._2,t._3);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseTuple3 = function() { };
thx_promise_PromiseTuple3.__name__ = ["thx","promise","PromiseTuple3"];
thx_promise_PromiseTuple3.join = function(p1,p2) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.either(thx_promise_Promises.join(p1,p2),function(t) {
			var this1 = t._0;
			resolve({ _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : t._1});
		},function(e) {
			reject(e);
		});
	});
};
thx_promise_PromiseTuple3.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise(promise,function(t) {
		return success(t._0,t._1,t._2);
	});
};
thx_promise_PromiseTuple3.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(promise,function(t) {
		return success(t._0,t._1,t._2);
	});
};
thx_promise_PromiseTuple3.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1,t._2);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseTuple2 = function() { };
thx_promise_PromiseTuple2.__name__ = ["thx","promise","PromiseTuple2"];
thx_promise_PromiseTuple2.join = function(p1,p2) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.either(thx_promise_Promises.join(p1,p2),function(t) {
			var this1 = t._0;
			resolve({ _0 : this1._0, _1 : this1._1, _2 : t._1});
		},function(e) {
			reject(e);
		});
	});
};
thx_promise_PromiseTuple2.mapTuplePromise = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccessPromise(promise,function(t) {
		return success(t._0,t._1);
	});
};
thx_promise_PromiseTuple2.mapTuple = function(promise,success) {
	return thx_promise__$Promise_Promise_$Impl_$.mapSuccess(promise,function(t) {
		return success(t._0,t._1);
	});
};
thx_promise_PromiseTuple2.tuple = function(promise,success,failure) {
	return thx_promise__$Promise_Promise_$Impl_$.either(promise,function(t) {
		success(t._0,t._1);
	},null == failure?function(_) {
	}:failure);
};
var thx_promise_PromiseNil = function() { };
thx_promise_PromiseNil.__name__ = ["thx","promise","PromiseNil"];
thx_promise_PromiseNil.join = function(p1,p2) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.either(thx_promise_Promises.join(p1,p2),function(t) {
			resolve(t._1);
		},function(e) {
			reject(e);
		});
	});
};
thx_promise_PromiseNil.nil = function(p) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.failure(thx_promise__$Promise_Promise_$Impl_$.success(p,function(_) {
			resolve(thx_Nil.nil);
		}),reject);
	});
};
var thx_promise_PromiseAPlus = function() { };
thx_promise_PromiseAPlus.__name__ = ["thx","promise","PromiseAPlus"];
thx_promise_PromiseAPlus.promise = function(p) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		p.then(resolve,function(e) {
			reject(thx_Error.fromDynamic(e,{ fileName : "Promise.hx", lineNumber : 420, className : "thx.promise.PromiseAPlus", methodName : "promise"}));
		});
	});
};
thx_promise_PromiseAPlus.aPlus = function(p) {
	return new Promise(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.failure(thx_promise__$Promise_Promise_$Impl_$.success(p,resolve),reject);
	});
};
var thx_promise_PromiseAPlusVoid = function() { };
thx_promise_PromiseAPlusVoid.__name__ = ["thx","promise","PromiseAPlusVoid"];
thx_promise_PromiseAPlusVoid.promise = function(p) {
	return thx_promise__$Promise_Promise_$Impl_$.create(function(resolve,reject) {
		p.then(function() {
			resolve(thx_Nil.nil);
		},function(e) {
			reject(thx_Error.fromDynamic(e,{ fileName : "Promise.hx", lineNumber : 432, className : "thx.promise.PromiseAPlusVoid", methodName : "promise"}));
		});
	});
};
thx_promise_PromiseAPlusVoid.aPlus = function(p) {
	return new Promise(function(resolve,reject) {
		thx_promise__$Promise_Promise_$Impl_$.failure(thx_promise__$Promise_Promise_$Impl_$.success(p,function() {
			resolve(thx_Nil.nil);
		}),reject);
	});
};
var thx_promise_Timer = function() { };
thx_promise_Timer.__name__ = ["thx","promise","Timer"];
thx_promise_Timer.delay = function(delayms) {
	return thx_promise_Timer.delayValue(thx_Nil.nil,delayms);
};
thx_promise_Timer.delayValue = function(value,delayms) {
	return thx_promise_Future.create(function(callback) {
		var f = callback;
		var a1 = value;
		thx_Timer.delay(function() {
			f(a1);
		},delayms);
	});
};
thx_promise_Timer.immediate = function() {
	return thx_promise_Timer.immediateValue(thx_Nil.nil);
};
thx_promise_Timer.immediateValue = function(value) {
	return thx_promise_Future.create(function(callback) {
		var f = callback;
		var a1 = value;
		thx_Timer.immediate(function() {
			f(a1);
		});
	});
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
if(Array.prototype.indexOf) {
	HxOverrides.indexOf = function(a,o,i) {
		return Array.prototype.indexOf.call(a,o,i);
	};
}
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
if(Array.prototype.map == null) {
	Array.prototype.map = function(f) {
		var a = [];
		var _g1 = 0;
		var _g = this.length;
		while(_g1 < _g) {
			var i = _g1++;
			a[i] = f(this[i]);
		}
		return a;
	};
}
if(Array.prototype.filter == null) {
	Array.prototype.filter = function(f1) {
		var a1 = [];
		var _g11 = 0;
		var _g2 = this.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var e = this[i1];
			if(f1(e)) {
				a1.push(e);
			}
		}
		return a1;
	};
}
if(Math.imul != null) {
	haxe__$Int32_Int32_$Impl_$.mul = Math.imul;
}
var __map_reserved = {}

      // Production steps of ECMA-262, Edition 5, 15.4.4.21
      // Reference: http://es5.github.io/#x15.4.4.21
      if (!Array.prototype.reduce) {
        Array.prototype.reduce = function(callback /*, initialValue*/) {
          'use strict';
          if (this == null) {
            throw new TypeError('Array.prototype.reduce called on null or undefined');
          }
          if (typeof callback !== 'function') {
            throw new TypeError(callback + ' is not a function');
          }
          var t = Object(this), len = t.length >>> 0, k = 0, value;
          if (arguments.length == 2) {
            value = arguments[1];
          } else {
            while (k < len && ! k in t) {
              k++;
            }
            if (k >= len) {
              throw new TypeError('Reduce of empty array with no initial value');
            }
            value = t[k++];
          }
          for (; k < len; k++) {
            if (k in t) {
              value = callback(value, t[k], k, t);
            }
          }
          return value;
        };
      }
    ;
var scope = ("undefined" !== typeof window && window) || ("undefined" !== typeof global && global) || this;
if(!scope.setImmediate) {
	scope.setImmediate = function(callback) {
		scope.setTimeout(callback,0);
	};
}
var lastTime = 0;
var vendors = ["webkit","moz"];
var x = 0;
while(x < vendors.length && !scope.requestAnimationFrame) {
	scope.requestAnimationFrame = scope[vendors[x] + "RequestAnimationFrame"];
	scope.cancelAnimationFrame = scope[vendors[x] + "CancelAnimationFrame"] || scope[vendors[x] + "CancelRequestAnimationFrame"];
	x++;
}
if(!scope.requestAnimationFrame) {
	scope.requestAnimationFrame = function(callback1) {
		var currTime = new Date().getTime();
		var timeToCall = Math.max(0,16 - (currTime - lastTime));
		var id = scope.setTimeout(function() {
			callback1(currTime + timeToCall);
		},timeToCall);
		lastTime = currTime + timeToCall;
		return id;
	};
}
if(!scope.cancelAnimationFrame) {
	scope.cancelAnimationFrame = function(id1) {
		scope.clearTimeout(id1);
	};
}
if(typeof(scope.performance) == "undefined") {
	scope.performance = { };
}
if(typeof(scope.performance.now) == "undefined") {
	var nowOffset = new Date().getTime();
	if(scope.performance.timing && scope.performance.timing.navigationStart) {
		nowOffset = scope.performance.timing.navigationStart;
	}
	scope.performance.now = (function($this) {
		var $r;
		var now = function() {
			return new Date() - nowOffset;
		};
		$r = now;
		return $r;
	}(this));
}
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
doom_html_Render.defaultNamespaces = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved.svg != null) {
		_g.setReserved("svg","http://www.w3.org/2000/svg");
	} else {
		_g.h["svg"] = "http://www.w3.org/2000/svg";
	}
	$r = _g;
	return $r;
}(this));
Doom.browser = new doom_html_Render();
doom_html_Attributes.properties = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.allowFullScreen != null) {
			_g.setReserved("allowFullScreen",value);
		} else {
			_g.h["allowFullScreen"] = value;
		}
	}
	{
		var value1 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.async != null) {
			_g.setReserved("async",value1);
		} else {
			_g.h["async"] = value1;
		}
	}
	{
		var value2 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.autoFocus != null) {
			_g.setReserved("autoFocus",value2);
		} else {
			_g.h["autoFocus"] = value2;
		}
	}
	{
		var value3 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.autoPlay != null) {
			_g.setReserved("autoPlay",value3);
		} else {
			_g.h["autoPlay"] = value3;
		}
	}
	{
		var value4 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.capture != null) {
			_g.setReserved("capture",value4);
		} else {
			_g.h["capture"] = value4;
		}
	}
	{
		var value5 = doom_html_AttributeType.BooleanProperty;
		if(__map_reserved.checked != null) {
			_g.setReserved("checked",value5);
		} else {
			_g.h["checked"] = value5;
		}
	}
	{
		var value6 = doom_html_AttributeType.PositiveNumericAttribute;
		if(__map_reserved.cols != null) {
			_g.setReserved("cols",value6);
		} else {
			_g.h["cols"] = value6;
		}
	}
	{
		var value7 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.controls != null) {
			_g.setReserved("controls",value7);
		} else {
			_g.h["controls"] = value7;
		}
	}
	{
		var value8 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved["default"] != null) {
			_g.setReserved("default",value8);
		} else {
			_g.h["default"] = value8;
		}
	}
	{
		var value9 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.defer != null) {
			_g.setReserved("defer",value9);
		} else {
			_g.h["defer"] = value9;
		}
	}
	{
		var value10 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.disabled != null) {
			_g.setReserved("disabled",value10);
		} else {
			_g.h["disabled"] = value10;
		}
	}
	{
		var value11 = doom_html_AttributeType.OverloadedBooleanAttribute;
		if(__map_reserved.download != null) {
			_g.setReserved("download",value11);
		} else {
			_g.h["download"] = value11;
		}
	}
	{
		var value12 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.formNoValidate != null) {
			_g.setReserved("formNoValidate",value12);
		} else {
			_g.h["formNoValidate"] = value12;
		}
	}
	{
		var value13 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.hidden != null) {
			_g.setReserved("hidden",value13);
		} else {
			_g.h["hidden"] = value13;
		}
	}
	{
		var value14 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.loop != null) {
			_g.setReserved("loop",value14);
		} else {
			_g.h["loop"] = value14;
		}
	}
	{
		var value15 = doom_html_AttributeType.BooleanProperty;
		if(__map_reserved.multiple != null) {
			_g.setReserved("multiple",value15);
		} else {
			_g.h["multiple"] = value15;
		}
	}
	{
		var value16 = doom_html_AttributeType.BooleanProperty;
		if(__map_reserved.muted != null) {
			_g.setReserved("muted",value16);
		} else {
			_g.h["muted"] = value16;
		}
	}
	{
		var value17 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.noValidate != null) {
			_g.setReserved("noValidate",value17);
		} else {
			_g.h["noValidate"] = value17;
		}
	}
	{
		var value18 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.open != null) {
			_g.setReserved("open",value18);
		} else {
			_g.h["open"] = value18;
		}
	}
	{
		var value19 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.readOnly != null) {
			_g.setReserved("readOnly",value19);
		} else {
			_g.h["readOnly"] = value19;
		}
	}
	{
		var value20 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.required != null) {
			_g.setReserved("required",value20);
		} else {
			_g.h["required"] = value20;
		}
	}
	{
		var value21 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.reversed != null) {
			_g.setReserved("reversed",value21);
		} else {
			_g.h["reversed"] = value21;
		}
	}
	{
		var value22 = doom_html_AttributeType.PositiveNumericAttribute;
		if(__map_reserved.rows != null) {
			_g.setReserved("rows",value22);
		} else {
			_g.h["rows"] = value22;
		}
	}
	{
		var value23 = doom_html_AttributeType.NumericAttribute;
		if(__map_reserved.rowSpan != null) {
			_g.setReserved("rowSpan",value23);
		} else {
			_g.h["rowSpan"] = value23;
		}
	}
	{
		var value24 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.scoped != null) {
			_g.setReserved("scoped",value24);
		} else {
			_g.h["scoped"] = value24;
		}
	}
	{
		var value25 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.seamless != null) {
			_g.setReserved("seamless",value25);
		} else {
			_g.h["seamless"] = value25;
		}
	}
	{
		var value26 = doom_html_AttributeType.BooleanProperty;
		if(__map_reserved.selected != null) {
			_g.setReserved("selected",value26);
		} else {
			_g.h["selected"] = value26;
		}
	}
	{
		var value27 = doom_html_AttributeType.PositiveNumericAttribute;
		if(__map_reserved.size != null) {
			_g.setReserved("size",value27);
		} else {
			_g.h["size"] = value27;
		}
	}
	{
		var value28 = doom_html_AttributeType.PositiveNumericAttribute;
		if(__map_reserved.span != null) {
			_g.setReserved("span",value28);
		} else {
			_g.h["span"] = value28;
		}
	}
	{
		var value29 = doom_html_AttributeType.NumericAttribute;
		if(__map_reserved.start != null) {
			_g.setReserved("start",value29);
		} else {
			_g.h["start"] = value29;
		}
	}
	{
		var value30 = doom_html_AttributeType.SideEffectProperty;
		if(__map_reserved.value != null) {
			_g.setReserved("value",value30);
		} else {
			_g.h["value"] = value30;
		}
	}
	{
		var value31 = doom_html_AttributeType.BooleanAttribute;
		if(__map_reserved.itemScope != null) {
			_g.setReserved("itemScope",value31);
		} else {
			_g.h["itemScope"] = value31;
		}
	}
	$r = _g;
	return $r;
}(this));
dots_Html.pattern = new EReg("[<]([^> ]+)","");
dots_Query.doc = document;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = {}.toString;
mtg_core_model_Card.__meta__ = { obj : { immutable : null}, fields : { id : { convertTo : ["String"]}, layout : { convertTo : ["String"]}, name : { convertTo : ["String"]}, manaCost : { convertTo : ["String"]}, cmc : { convertTo : ["Int"]}, type : { convertTo : ["String"]}, rarity : { convertTo : ["String"]}, text : { convertTo : ["String"]}, flavor : { convertTo : ["String"]}, artist : { convertTo : ["String"]}, number : { convertTo : ["String"]}, mciNumber : { convertTo : ["String"]}, power : { convertTo : ["String"]}, toughness : { convertTo : ["String"]}, loyalty : { convertTo : ["Int"]}, multiverseid : { convertTo : ["Int"]}, imageName : { convertTo : ["String"]}, watermark : { convertTo : ["String"]}, border : { convertTo : ["String"]}, timeshifted : { convertTo : ["Bool"]}, hand : { convertTo : ["Int"]}, life : { convertTo : ["Int"]}, reserved : { convertTo : ["Bool"]}, releaseDate : { convertTo : ["String"]}, starter : { convertTo : ["Bool"]}, originalText : { convertTo : ["String"]}, originalType : { convertTo : ["String"]}, source : { convertTo : ["String"]}, latest : { convertTo : ["Bool"]}}};
mtg_core_model_CardQuery.__meta__ = { obj : { immutable : null}, fields : { pageNumber : { convertTo : ["Int"]}, pageSize : { validate : ["_ <= 100"], convertTo : ["Int"]}, searchText : { convertTo : ["String"]}, latestPrintingOnly : { convertTo : ["Bool"]}}};
mtg_core_model_CardQuery.QUERY = "q";
mtg_core_model_CardQuery.PAGE_NUMBER = "page-number";
mtg_core_model_CardQuery.PAGE_SIZE = "page-size";
mtg_core_model_CardQuery.LATEST_PRINTING_ONLY = "latest-only";
mtg_core_model__$Symbol_Symbol_$Impl_$.C = "{C}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C0 = "{0}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C1 = "{1}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C2 = "{2}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C3 = "{3}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C4 = "{4}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C5 = "{5}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C6 = "{6}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C7 = "{7}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C8 = "{8}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C9 = "{9}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C10 = "{10}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C11 = "{11}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C12 = "{12}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C13 = "{13}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C14 = "{14}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C15 = "{15}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C16 = "{16}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C17 = "{17}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C18 = "{18}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C19 = "{19}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C20 = "{20}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C100 = "{100}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C1000000 = "{1000000}";
mtg_core_model__$Symbol_Symbol_$Impl_$.CHalf = "{1/2}";
mtg_core_model__$Symbol_Symbol_$Impl_$.CInfinity = "{∞}";
mtg_core_model__$Symbol_Symbol_$Impl_$.W = "{W}";
mtg_core_model__$Symbol_Symbol_$Impl_$.U = "{U}";
mtg_core_model__$Symbol_Symbol_$Impl_$.B = "{B}";
mtg_core_model__$Symbol_Symbol_$Impl_$.R = "{R}";
mtg_core_model__$Symbol_Symbol_$Impl_$.G = "{G}";
mtg_core_model__$Symbol_Symbol_$Impl_$.WHalf = "{W 1/2}";
mtg_core_model__$Symbol_Symbol_$Impl_$.UHalf = "{U 1/2}";
mtg_core_model__$Symbol_Symbol_$Impl_$.BHalf = "{B 1/2}";
mtg_core_model__$Symbol_Symbol_$Impl_$.RHalf = "{R 1/2}";
mtg_core_model__$Symbol_Symbol_$Impl_$.GHalf = "{G 1/2}";
mtg_core_model__$Symbol_Symbol_$Impl_$.P = "{P}";
mtg_core_model__$Symbol_Symbol_$Impl_$.WP = "{W/P}";
mtg_core_model__$Symbol_Symbol_$Impl_$.UP = "{U/P}";
mtg_core_model__$Symbol_Symbol_$Impl_$.BP = "{B/P}";
mtg_core_model__$Symbol_Symbol_$Impl_$.RP = "{R/P}";
mtg_core_model__$Symbol_Symbol_$Impl_$.GP = "{G/P}";
mtg_core_model__$Symbol_Symbol_$Impl_$.WU = "{W/U}";
mtg_core_model__$Symbol_Symbol_$Impl_$.WB = "{W/B}";
mtg_core_model__$Symbol_Symbol_$Impl_$.UB = "{U/B}";
mtg_core_model__$Symbol_Symbol_$Impl_$.UR = "{U/R}";
mtg_core_model__$Symbol_Symbol_$Impl_$.BR = "{B/R}";
mtg_core_model__$Symbol_Symbol_$Impl_$.BG = "{B/G}";
mtg_core_model__$Symbol_Symbol_$Impl_$.RG = "{R/G}";
mtg_core_model__$Symbol_Symbol_$Impl_$.RW = "{R/W}";
mtg_core_model__$Symbol_Symbol_$Impl_$.GW = "{G/W}";
mtg_core_model__$Symbol_Symbol_$Impl_$.GU = "{G/U}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C2W = "{2/W}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C2U = "{2/U}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C2B = "{2/B}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C2R = "{2/R}";
mtg_core_model__$Symbol_Symbol_$Impl_$.C2G = "{2/G}";
mtg_core_model__$Symbol_Symbol_$Impl_$.S = "{S}";
mtg_core_model__$Symbol_Symbol_$Impl_$.X = "{X}";
mtg_core_model__$Symbol_Symbol_$Impl_$.Y = "{Y}";
mtg_core_model__$Symbol_Symbol_$Impl_$.Z = "{Z}";
mtg_core_model__$Symbol_Symbol_$Impl_$.Tap = "{T}";
mtg_core_model__$Symbol_Symbol_$Impl_$.Untap = "{Q}";
thx_Floats.TOLERANCE = 10e-5;
thx_Floats.EPSILON = 1e-9;
thx_Floats.pattern_parse = new EReg("^(\\+|-)?\\d+(\\.\\d+)?(e-?\\d+)?$","");
thx_Floats.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Floats.compare);
thx_Ints.pattern_parse = new EReg("^[ \t\r\n]*[+-]?(\\d+|0x[0-9A-F]+)","i");
thx_Ints.BASE = "0123456789abcdefghijklmnopqrstuvwxyz";
thx_Ints.order = function(i0,i1) {
	if(i0 > i1) {
		return thx_OrderingImpl.GT;
	} else if(i0 == i1) {
		return thx_OrderingImpl.EQ;
	} else {
		return thx_OrderingImpl.LT;
	}
};
thx_Ints.monoid = { zero : 0, append : function(a,b) {
	return a + b;
}};
thx_Strings.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Strings.compare);
thx_Strings.HASCODE_MAX = 2147483647;
thx_Strings.HASCODE_MUL = 31;
thx_Strings.monoid = { zero : "", append : function(a,b) {
	return a + b;
}};
thx_Strings.UCWORDS = new EReg("[^a-zA-Z]([a-z])","g");
thx_Strings.IS_BREAKINGWHITESPACE = new EReg("[^\t\n\r ]","");
thx_Strings.IS_ALPHA = new EReg("[^a-zA-Z]","");
thx_Strings.UCWORDSWS = new EReg("[ \t\r\n][a-z]","g");
thx_Strings.ALPHANUM = new EReg("^[a-z0-9]+$","i");
thx_Strings.DIGITS = new EReg("^[0-9]+$","");
thx_Strings.STRIPTAGS = new EReg("</?[a-z]+[^>]*>","gi");
thx_Strings.WSG = new EReg("[ \t\r\n]+","g");
thx_Strings.SPLIT_LINES = new EReg("\r\n|\n\r|\n|\r","g");
thx_Strings.CANONICALIZE_LINES = new EReg("\r\n|\n\r|\r","g");
thx_Timer.FRAME_RATE = Math.round(16.6666666666666679);
thx_promise__$Promise_Promise_$Impl_$.nil = thx_promise__$Promise_Promise_$Impl_$.value(thx_Nil.nil);
mtg_client_Main.main();
})(typeof console != "undefined" ? console : {log:function(){}}, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
